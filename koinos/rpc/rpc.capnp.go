// Code generated by capnpc-go. DO NOT EDIT.

package rpc

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type ErrorResponse struct{ capnp.Struct }

// ErrorResponse_TypeID is the unique identifier for the type ErrorResponse.
const ErrorResponse_TypeID = 0xe6c23ae1502fdc42

func NewErrorResponse(s *capnp.Segment) (ErrorResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ErrorResponse{st}, err
}

func NewRootErrorResponse(s *capnp.Segment) (ErrorResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ErrorResponse{st}, err
}

func ReadRootErrorResponse(msg *capnp.Message) (ErrorResponse, error) {
	root, err := msg.Root()
	return ErrorResponse{root.Struct()}, err
}

func (s ErrorResponse) String() string {
	str, _ := text.Marshal(0xe6c23ae1502fdc42, s.Struct)
	return str
}

func (s ErrorResponse) ErrorText() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ErrorResponse) HasErrorText() bool {
	return s.Struct.HasPtr(0)
}

func (s ErrorResponse) ErrorTextBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ErrorResponse) SetErrorText(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ErrorResponse) ErrorData() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ErrorResponse) HasErrorData() bool {
	return s.Struct.HasPtr(1)
}

func (s ErrorResponse) ErrorDataBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ErrorResponse) SetErrorData(v string) error {
	return s.Struct.SetText(1, v)
}

// ErrorResponse_List is a list of ErrorResponse.
type ErrorResponse_List struct{ capnp.List }

// NewErrorResponse creates a new list of ErrorResponse.
func NewErrorResponse_List(s *capnp.Segment, sz int32) (ErrorResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ErrorResponse_List{l}, err
}

func (s ErrorResponse_List) At(i int) ErrorResponse { return ErrorResponse{s.List.Struct(i)} }

func (s ErrorResponse_List) Set(i int, v ErrorResponse) error { return s.List.SetStruct(i, v.Struct) }

func (s ErrorResponse_List) String() string {
	str, _ := text.MarshalList(0xe6c23ae1502fdc42, s.List)
	return str
}

// ErrorResponse_Future is a wrapper for a ErrorResponse promised by a client call.
type ErrorResponse_Future struct{ *capnp.Future }

func (p ErrorResponse_Future) Struct() (ErrorResponse, error) {
	s, err := p.Future.Struct()
	return ErrorResponse{s}, err
}

const schema_fc485bf574db512c = "x\xda\x12(w`2d\xcdgb`\x08\x94ae" +
	"\xfb\xeftG?\xe0\xa1\xd5\xa1g\x0c\x82|\x8c\xffu" +
	"\x02o\x97|\x8d\xf6\xf8\xc3\xc0\xca\xc4\xce\xc0 ,\xcb" +
	"\xf8HX\x93\x11\xc4Re,gp\xfe_T\x90\xac" +
	"_T\x90\xac\xc7\x94\x9cX\x90W`\xe5ZT\x94_" +
	"\x14\x94Z\\\x90\xcf\x9eW\x9c\x1a\xc0\xc8\x18\xc8\xc1\xcc" +
	"\xc2\xc0\xc0\xc2\xc8\xc0 \xa8\x19\xc4\xc0\x10\xa8\xc1\xcc\x18" +
	"h\xc2\xc4(\xc8\xc8(\xc2\x08\x124\x04\x09\x1a03" +
	"\x06\xda01\xfeO\x05\xe9\x0eI\xad``,a\xe4" +
	"a`b\xe4a\x80\x8a\xb9$\x9600&\xc2\xc4\x00" +
	"\x01\x00\x00\xff\xffs\xcd(z"

func init() {
	schemas.Register(schema_fc485bf574db512c,
		0xe6c23ae1502fdc42)
}
