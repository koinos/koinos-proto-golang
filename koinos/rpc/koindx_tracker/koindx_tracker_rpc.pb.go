// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.17.3
// source: koinos/rpc/koindx_tracker/koindx_tracker_rpc.proto

package koindx_tracker

import (
	_ "github.com/koinos/koinos-proto-golang/v2/koinos"
	_ "github.com/koinos/koinos-proto-golang/v2/koinos/koindx_tracker"
	rpc "github.com/koinos/koinos-proto-golang/v2/koinos/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PoolPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool   []byte `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	TokenA string `protobuf:"bytes,2,opt,name=token_a,json=tokenA,proto3" json:"token_a,omitempty"`
	TokenB string `protobuf:"bytes,3,opt,name=token_b,json=tokenB,proto3" json:"token_b,omitempty"`
}

func (x *PoolPair) Reset() {
	*x = PoolPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolPair) ProtoMessage() {}

func (x *PoolPair) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolPair.ProtoReflect.Descriptor instead.
func (*PoolPair) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *PoolPair) GetPool() []byte {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *PoolPair) GetTokenA() string {
	if x != nil {
		return x.TokenA
	}
	return ""
}

func (x *PoolPair) GetTokenB() string {
	if x != nil {
		return x.TokenB
	}
	return ""
}

type GetPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//
	//	*GetPoolsRequest_Start
	//	*GetPoolsRequest_Pool
	Target isGetPoolsRequest_Target `protobuf_oneof:"target"`
	Limit  uint64                   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetPoolsRequest) Reset() {
	*x = GetPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolsRequest) ProtoMessage() {}

func (x *GetPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolsRequest.ProtoReflect.Descriptor instead.
func (*GetPoolsRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{1}
}

func (m *GetPoolsRequest) GetTarget() isGetPoolsRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *GetPoolsRequest) GetStart() []byte {
	if x, ok := x.GetTarget().(*GetPoolsRequest_Start); ok {
		return x.Start
	}
	return nil
}

func (x *GetPoolsRequest) GetPool() []byte {
	if x, ok := x.GetTarget().(*GetPoolsRequest_Pool); ok {
		return x.Pool
	}
	return nil
}

func (x *GetPoolsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type isGetPoolsRequest_Target interface {
	isGetPoolsRequest_Target()
}

type GetPoolsRequest_Start struct {
	Start []byte `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type GetPoolsRequest_Pool struct {
	Pool []byte `protobuf:"bytes,2,opt,name=pool,proto3,oneof"`
}

func (*GetPoolsRequest_Start) isGetPoolsRequest_Target() {}

func (*GetPoolsRequest_Pool) isGetPoolsRequest_Target() {}

type GetPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PoolPair `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetPoolsResponse) Reset() {
	*x = GetPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolsResponse) ProtoMessage() {}

func (x *GetPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolsResponse.ProtoReflect.Descriptor instead.
func (*GetPoolsResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetPoolsResponse) GetValues() []*PoolPair {
	if x != nil {
		return x.Values
	}
	return nil
}

type AccountLiquidity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance  uint64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	CoinMsHi uint64 `protobuf:"varint,3,opt,name=coin_ms_hi,json=coinMsHi,proto3" json:"coin_ms_hi,omitempty"`
	CoinMsLo uint64 `protobuf:"varint,4,opt,name=coin_ms_lo,json=coinMsLo,proto3" json:"coin_ms_lo,omitempty"`
}

func (x *AccountLiquidity) Reset() {
	*x = AccountLiquidity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountLiquidity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLiquidity) ProtoMessage() {}

func (x *AccountLiquidity) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLiquidity.ProtoReflect.Descriptor instead.
func (*AccountLiquidity) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *AccountLiquidity) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AccountLiquidity) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AccountLiquidity) GetCoinMsHi() uint64 {
	if x != nil {
		return x.CoinMsHi
	}
	return 0
}

func (x *AccountLiquidity) GetCoinMsLo() uint64 {
	if x != nil {
		return x.CoinMsLo
	}
	return 0
}

type GetLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool    []byte  `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Start   []byte  `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit   uint64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	StartMs *uint64 `protobuf:"varint,4,opt,name=start_ms,json=startMs,proto3,oneof" json:"start_ms,omitempty"`
	EndMs   *uint64 `protobuf:"varint,5,opt,name=end_ms,json=endMs,proto3,oneof" json:"end_ms,omitempty"`
}

func (x *GetLiquidityRequest) Reset() {
	*x = GetLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityRequest) ProtoMessage() {}

func (x *GetLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityRequest.ProtoReflect.Descriptor instead.
func (*GetLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetLiquidityRequest) GetPool() []byte {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *GetLiquidityRequest) GetStart() []byte {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetLiquidityRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLiquidityRequest) GetStartMs() uint64 {
	if x != nil && x.StartMs != nil {
		return *x.StartMs
	}
	return 0
}

func (x *GetLiquidityRequest) GetEndMs() uint64 {
	if x != nil && x.EndMs != nil {
		return *x.EndMs
	}
	return 0
}

type GetLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*AccountLiquidity `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetLiquidityResponse) Reset() {
	*x = GetLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityResponse) ProtoMessage() {}

func (x *GetLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityResponse.ProtoReflect.Descriptor instead.
func (*GetLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetLiquidityResponse) GetValues() []*AccountLiquidity {
	if x != nil {
		return x.Values
	}
	return nil
}

type PoolTvl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool []byte `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Tvl  uint64 `protobuf:"varint,2,opt,name=tvl,proto3" json:"tvl,omitempty"`
}

func (x *PoolTvl) Reset() {
	*x = PoolTvl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolTvl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolTvl) ProtoMessage() {}

func (x *PoolTvl) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolTvl.ProtoReflect.Descriptor instead.
func (*PoolTvl) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *PoolTvl) GetPool() []byte {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *PoolTvl) GetTvl() uint64 {
	if x != nil {
		return x.Tvl
	}
	return 0
}

type GetTvlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//
	//	*GetTvlRequest_Start
	//	*GetTvlRequest_Pool
	Target isGetTvlRequest_Target `protobuf_oneof:"target"`
	Limit  uint64                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Ms     *uint64                `protobuf:"varint,4,opt,name=ms,proto3,oneof" json:"ms,omitempty"`
}

func (x *GetTvlRequest) Reset() {
	*x = GetTvlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTvlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTvlRequest) ProtoMessage() {}

func (x *GetTvlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTvlRequest.ProtoReflect.Descriptor instead.
func (*GetTvlRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{7}
}

func (m *GetTvlRequest) GetTarget() isGetTvlRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *GetTvlRequest) GetStart() []byte {
	if x, ok := x.GetTarget().(*GetTvlRequest_Start); ok {
		return x.Start
	}
	return nil
}

func (x *GetTvlRequest) GetPool() []byte {
	if x, ok := x.GetTarget().(*GetTvlRequest_Pool); ok {
		return x.Pool
	}
	return nil
}

func (x *GetTvlRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTvlRequest) GetMs() uint64 {
	if x != nil && x.Ms != nil {
		return *x.Ms
	}
	return 0
}

type isGetTvlRequest_Target interface {
	isGetTvlRequest_Target()
}

type GetTvlRequest_Start struct {
	Start []byte `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type GetTvlRequest_Pool struct {
	Pool []byte `protobuf:"bytes,2,opt,name=pool,proto3,oneof"`
}

func (*GetTvlRequest_Start) isGetTvlRequest_Target() {}

func (*GetTvlRequest_Pool) isGetTvlRequest_Target() {}

type GetTvlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*PoolTvl `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GetTvlResponse) Reset() {
	*x = GetTvlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTvlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTvlResponse) ProtoMessage() {}

func (x *GetTvlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTvlResponse.ProtoReflect.Descriptor instead.
func (*GetTvlResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetTvlResponse) GetValues() []*PoolTvl {
	if x != nil {
		return x.Values
	}
	return nil
}

type KoindxTrackerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*KoindxTrackerRequest_Reserved
	//	*KoindxTrackerRequest_GetPools
	//	*KoindxTrackerRequest_GetLiquidity
	//	*KoindxTrackerRequest_GetTvl
	Request isKoindxTrackerRequest_Request `protobuf_oneof:"request"`
}

func (x *KoindxTrackerRequest) Reset() {
	*x = KoindxTrackerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KoindxTrackerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KoindxTrackerRequest) ProtoMessage() {}

func (x *KoindxTrackerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KoindxTrackerRequest.ProtoReflect.Descriptor instead.
func (*KoindxTrackerRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{9}
}

func (m *KoindxTrackerRequest) GetRequest() isKoindxTrackerRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *KoindxTrackerRequest) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetRequest().(*KoindxTrackerRequest_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *KoindxTrackerRequest) GetGetPools() *GetPoolsRequest {
	if x, ok := x.GetRequest().(*KoindxTrackerRequest_GetPools); ok {
		return x.GetPools
	}
	return nil
}

func (x *KoindxTrackerRequest) GetGetLiquidity() *GetLiquidityRequest {
	if x, ok := x.GetRequest().(*KoindxTrackerRequest_GetLiquidity); ok {
		return x.GetLiquidity
	}
	return nil
}

func (x *KoindxTrackerRequest) GetGetTvl() *GetTvlRequest {
	if x, ok := x.GetRequest().(*KoindxTrackerRequest_GetTvl); ok {
		return x.GetTvl
	}
	return nil
}

type isKoindxTrackerRequest_Request interface {
	isKoindxTrackerRequest_Request()
}

type KoindxTrackerRequest_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type KoindxTrackerRequest_GetPools struct {
	GetPools *GetPoolsRequest `protobuf:"bytes,2,opt,name=get_pools,json=getPools,proto3,oneof"`
}

type KoindxTrackerRequest_GetLiquidity struct {
	GetLiquidity *GetLiquidityRequest `protobuf:"bytes,3,opt,name=get_liquidity,json=getLiquidity,proto3,oneof"`
}

type KoindxTrackerRequest_GetTvl struct {
	GetTvl *GetTvlRequest `protobuf:"bytes,4,opt,name=get_tvl,json=getTvl,proto3,oneof"`
}

func (*KoindxTrackerRequest_Reserved) isKoindxTrackerRequest_Request() {}

func (*KoindxTrackerRequest_GetPools) isKoindxTrackerRequest_Request() {}

func (*KoindxTrackerRequest_GetLiquidity) isKoindxTrackerRequest_Request() {}

func (*KoindxTrackerRequest_GetTvl) isKoindxTrackerRequest_Request() {}

type KoindxTrackerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*KoindxTrackerResponse_Reserved
	//	*KoindxTrackerResponse_Error
	//	*KoindxTrackerResponse_GetPools
	//	*KoindxTrackerResponse_GetLiquidity
	//	*KoindxTrackerResponse_GetTvl
	Response isKoindxTrackerResponse_Response `protobuf_oneof:"response"`
}

func (x *KoindxTrackerResponse) Reset() {
	*x = KoindxTrackerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KoindxTrackerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KoindxTrackerResponse) ProtoMessage() {}

func (x *KoindxTrackerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KoindxTrackerResponse.ProtoReflect.Descriptor instead.
func (*KoindxTrackerResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP(), []int{10}
}

func (m *KoindxTrackerResponse) GetResponse() isKoindxTrackerResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *KoindxTrackerResponse) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetResponse().(*KoindxTrackerResponse_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *KoindxTrackerResponse) GetError() *rpc.ErrorStatus {
	if x, ok := x.GetResponse().(*KoindxTrackerResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *KoindxTrackerResponse) GetGetPools() *GetPoolsResponse {
	if x, ok := x.GetResponse().(*KoindxTrackerResponse_GetPools); ok {
		return x.GetPools
	}
	return nil
}

func (x *KoindxTrackerResponse) GetGetLiquidity() *GetLiquidityResponse {
	if x, ok := x.GetResponse().(*KoindxTrackerResponse_GetLiquidity); ok {
		return x.GetLiquidity
	}
	return nil
}

func (x *KoindxTrackerResponse) GetGetTvl() *GetTvlResponse {
	if x, ok := x.GetResponse().(*KoindxTrackerResponse_GetTvl); ok {
		return x.GetTvl
	}
	return nil
}

type isKoindxTrackerResponse_Response interface {
	isKoindxTrackerResponse_Response()
}

type KoindxTrackerResponse_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type KoindxTrackerResponse_Error struct {
	Error *rpc.ErrorStatus `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type KoindxTrackerResponse_GetPools struct {
	GetPools *GetPoolsResponse `protobuf:"bytes,3,opt,name=get_pools,json=getPools,proto3,oneof"`
}

type KoindxTrackerResponse_GetLiquidity struct {
	GetLiquidity *GetLiquidityResponse `protobuf:"bytes,4,opt,name=get_liquidity,json=getLiquidity,proto3,oneof"`
}

type KoindxTrackerResponse_GetTvl struct {
	GetTvl *GetTvlResponse `protobuf:"bytes,5,opt,name=get_tvl,json=getTvl,proto3,oneof"`
}

func (*KoindxTrackerResponse_Reserved) isKoindxTrackerResponse_Response() {}

func (*KoindxTrackerResponse_Error) isKoindxTrackerResponse_Response() {}

func (*KoindxTrackerResponse_GetPools) isKoindxTrackerResponse_Response() {}

func (*KoindxTrackerResponse_GetLiquidity) isKoindxTrackerResponse_Response() {}

func (*KoindxTrackerResponse_GetTvl) isKoindxTrackerResponse_Response() {}

var File_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto protoreflect.FileDescriptor

var file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6b, 0x6f, 0x69,
	0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x6b, 0x6f, 0x69, 0x6e,
	0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x1a,
	0x2a, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x22, 0x71, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12,
	0x18, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x52, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x06, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x5f, 0x68, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4d, 0x73, 0x48, 0x69, 0x12, 0x20, 0x0a,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x5f, 0x6c, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4d, 0x73, 0x4c, 0x6f, 0x22,
	0xc3, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x52, 0x04, 0x70,
	0x6f, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x48, 0x01, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x22, 0x5e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69,
	0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x76,
	0x6c, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x06, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x03, 0x74,
	0x76, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x03, 0x74, 0x76,
	0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x76, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12,
	0x18, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x48, 0x01, 0x52, 0x02, 0x6d, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x76, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x76, 0x6c, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x16, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x6f,
	0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x76, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x76, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x67, 0x65,
	0x74, 0x54, 0x76, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xff, 0x02, 0x0a, 0x17, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x76, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x64, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x76, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x67,
	0x65, 0x74, 0x54, 0x76, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x6b, 0x6f,
	0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x64, 0x78, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescOnce sync.Once
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescData = file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDesc
)

func file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescGZIP() []byte {
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescOnce.Do(func() {
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescData)
	})
	return file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDescData
}

var file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_goTypes = []interface{}{
	(*PoolPair)(nil),              // 0: koinos.rpc.koindx_tracker.pool_pair
	(*GetPoolsRequest)(nil),       // 1: koinos.rpc.koindx_tracker.get_pools_request
	(*GetPoolsResponse)(nil),      // 2: koinos.rpc.koindx_tracker.get_pools_response
	(*AccountLiquidity)(nil),      // 3: koinos.rpc.koindx_tracker.account_liquidity
	(*GetLiquidityRequest)(nil),   // 4: koinos.rpc.koindx_tracker.get_liquidity_request
	(*GetLiquidityResponse)(nil),  // 5: koinos.rpc.koindx_tracker.get_liquidity_response
	(*PoolTvl)(nil),               // 6: koinos.rpc.koindx_tracker.pool_tvl
	(*GetTvlRequest)(nil),         // 7: koinos.rpc.koindx_tracker.get_tvl_request
	(*GetTvlResponse)(nil),        // 8: koinos.rpc.koindx_tracker.get_tvl_response
	(*KoindxTrackerRequest)(nil),  // 9: koinos.rpc.koindx_tracker.koindx_tracker_request
	(*KoindxTrackerResponse)(nil), // 10: koinos.rpc.koindx_tracker.koindx_tracker_response
	(*rpc.ReservedRpc)(nil),       // 11: koinos.rpc.reserved_rpc
	(*rpc.ErrorStatus)(nil),       // 12: koinos.rpc.error_status
}
var file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_depIdxs = []int32{
	0,  // 0: koinos.rpc.koindx_tracker.get_pools_response.values:type_name -> koinos.rpc.koindx_tracker.pool_pair
	3,  // 1: koinos.rpc.koindx_tracker.get_liquidity_response.values:type_name -> koinos.rpc.koindx_tracker.account_liquidity
	6,  // 2: koinos.rpc.koindx_tracker.get_tvl_response.values:type_name -> koinos.rpc.koindx_tracker.pool_tvl
	11, // 3: koinos.rpc.koindx_tracker.koindx_tracker_request.reserved:type_name -> koinos.rpc.reserved_rpc
	1,  // 4: koinos.rpc.koindx_tracker.koindx_tracker_request.get_pools:type_name -> koinos.rpc.koindx_tracker.get_pools_request
	4,  // 5: koinos.rpc.koindx_tracker.koindx_tracker_request.get_liquidity:type_name -> koinos.rpc.koindx_tracker.get_liquidity_request
	7,  // 6: koinos.rpc.koindx_tracker.koindx_tracker_request.get_tvl:type_name -> koinos.rpc.koindx_tracker.get_tvl_request
	11, // 7: koinos.rpc.koindx_tracker.koindx_tracker_response.reserved:type_name -> koinos.rpc.reserved_rpc
	12, // 8: koinos.rpc.koindx_tracker.koindx_tracker_response.error:type_name -> koinos.rpc.error_status
	2,  // 9: koinos.rpc.koindx_tracker.koindx_tracker_response.get_pools:type_name -> koinos.rpc.koindx_tracker.get_pools_response
	5,  // 10: koinos.rpc.koindx_tracker.koindx_tracker_response.get_liquidity:type_name -> koinos.rpc.koindx_tracker.get_liquidity_response
	8,  // 11: koinos.rpc.koindx_tracker.koindx_tracker_response.get_tvl:type_name -> koinos.rpc.koindx_tracker.get_tvl_response
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_init() }
func file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_init() {
	if File_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountLiquidity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolTvl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTvlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTvlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KoindxTrackerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KoindxTrackerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetPoolsRequest_Start)(nil),
		(*GetPoolsRequest_Pool)(nil),
	}
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*GetTvlRequest_Start)(nil),
		(*GetTvlRequest_Pool)(nil),
	}
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*KoindxTrackerRequest_Reserved)(nil),
		(*KoindxTrackerRequest_GetPools)(nil),
		(*KoindxTrackerRequest_GetLiquidity)(nil),
		(*KoindxTrackerRequest_GetTvl)(nil),
	}
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*KoindxTrackerResponse_Reserved)(nil),
		(*KoindxTrackerResponse_Error)(nil),
		(*KoindxTrackerResponse_GetPools)(nil),
		(*KoindxTrackerResponse_GetLiquidity)(nil),
		(*KoindxTrackerResponse_GetTvl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_goTypes,
		DependencyIndexes: file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_depIdxs,
		MessageInfos:      file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_msgTypes,
	}.Build()
	File_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto = out.File
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_rawDesc = nil
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_goTypes = nil
	file_koinos_rpc_koindx_tracker_koindx_tracker_rpc_proto_depIdxs = nil
}
