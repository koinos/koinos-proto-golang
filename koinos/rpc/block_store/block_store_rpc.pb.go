// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: koinos/rpc/block_store/block_store_rpc.proto

package block_store

import (
	koinos "github.com/koinos/koinos-proto-golang/koinos"
	protocol "github.com/koinos/koinos-proto-golang/koinos/protocol"
	rpc "github.com/koinos/koinos-proto-golang/koinos/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBlocksByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockIds      [][]byte `protobuf:"bytes,1,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
	ReturnBlock   bool     `protobuf:"varint,2,opt,name=return_block,json=returnBlock,proto3" json:"return_block,omitempty"`
	ReturnReceipt bool     `protobuf:"varint,3,opt,name=return_receipt,json=returnReceipt,proto3" json:"return_receipt,omitempty"`
}

func (x *GetBlocksByIdRequest) Reset() {
	*x = GetBlocksByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByIdRequest) ProtoMessage() {}

func (x *GetBlocksByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksByIdRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlocksByIdRequest) GetBlockIds() [][]byte {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *GetBlocksByIdRequest) GetReturnBlock() bool {
	if x != nil {
		return x.ReturnBlock
	}
	return false
}

func (x *GetBlocksByIdRequest) GetReturnReceipt() bool {
	if x != nil {
		return x.ReturnReceipt
	}
	return false
}

type GetBlocksByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockItems []*BlockItem `protobuf:"bytes,1,rep,name=block_items,json=blockItems,proto3" json:"block_items,omitempty"`
}

func (x *GetBlocksByIdResponse) Reset() {
	*x = GetBlocksByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByIdResponse) ProtoMessage() {}

func (x *GetBlocksByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByIdResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksByIdResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlocksByIdResponse) GetBlockItems() []*BlockItem {
	if x != nil {
		return x.BlockItems
	}
	return nil
}

type GetBlocksByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadBlockId         []byte `protobuf:"bytes,1,opt,name=head_block_id,json=headBlockId,proto3" json:"head_block_id,omitempty"`
	AncestorStartHeight uint64 `protobuf:"varint,2,opt,name=ancestor_start_height,json=ancestorStartHeight,proto3" json:"ancestor_start_height,omitempty"`
	NumBlocks           uint32 `protobuf:"varint,3,opt,name=num_blocks,json=numBlocks,proto3" json:"num_blocks,omitempty"`
	ReturnBlock         bool   `protobuf:"varint,4,opt,name=return_block,json=returnBlock,proto3" json:"return_block,omitempty"`
	ReturnReceipt       bool   `protobuf:"varint,5,opt,name=return_receipt,json=returnReceipt,proto3" json:"return_receipt,omitempty"`
}

func (x *GetBlocksByHeightRequest) Reset() {
	*x = GetBlocksByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByHeightRequest) ProtoMessage() {}

func (x *GetBlocksByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksByHeightRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlocksByHeightRequest) GetHeadBlockId() []byte {
	if x != nil {
		return x.HeadBlockId
	}
	return nil
}

func (x *GetBlocksByHeightRequest) GetAncestorStartHeight() uint64 {
	if x != nil {
		return x.AncestorStartHeight
	}
	return 0
}

func (x *GetBlocksByHeightRequest) GetNumBlocks() uint32 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *GetBlocksByHeightRequest) GetReturnBlock() bool {
	if x != nil {
		return x.ReturnBlock
	}
	return false
}

func (x *GetBlocksByHeightRequest) GetReturnReceipt() bool {
	if x != nil {
		return x.ReturnReceipt
	}
	return false
}

type GetBlocksByHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockItems []*BlockItem `protobuf:"bytes,1,rep,name=block_items,json=blockItems,proto3" json:"block_items,omitempty"`
}

func (x *GetBlocksByHeightResponse) Reset() {
	*x = GetBlocksByHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksByHeightResponse) ProtoMessage() {}

func (x *GetBlocksByHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksByHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksByHeightResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlocksByHeightResponse) GetBlockItems() []*BlockItem {
	if x != nil {
		return x.BlockItems
	}
	return nil
}

type AddBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockToAdd   *protocol.Block        `protobuf:"bytes,1,opt,name=block_to_add,json=blockToAdd,proto3" json:"block_to_add,omitempty"`
	ReceiptToAdd *protocol.BlockReceipt `protobuf:"bytes,2,opt,name=receipt_to_add,json=receiptToAdd,proto3" json:"receipt_to_add,omitempty"`
}

func (x *AddBlockRequest) Reset() {
	*x = AddBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlockRequest) ProtoMessage() {}

func (x *AddBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlockRequest.ProtoReflect.Descriptor instead.
func (*AddBlockRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *AddBlockRequest) GetBlockToAdd() *protocol.Block {
	if x != nil {
		return x.BlockToAdd
	}
	return nil
}

func (x *AddBlockRequest) GetReceiptToAdd() *protocol.BlockReceipt {
	if x != nil {
		return x.ReceiptToAdd
	}
	return nil
}

type AddBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBlockResponse) Reset() {
	*x = AddBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlockResponse) ProtoMessage() {}

func (x *AddBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlockResponse.ProtoReflect.Descriptor instead.
func (*AddBlockResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{5}
}

type GetHighestBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHighestBlockRequest) Reset() {
	*x = GetHighestBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighestBlockRequest) ProtoMessage() {}

func (x *GetHighestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighestBlockRequest.ProtoReflect.Descriptor instead.
func (*GetHighestBlockRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{6}
}

type GetHighestBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topology *koinos.BlockTopology `protobuf:"bytes,1,opt,name=topology,proto3" json:"topology,omitempty"`
}

func (x *GetHighestBlockResponse) Reset() {
	*x = GetHighestBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighestBlockResponse) ProtoMessage() {}

func (x *GetHighestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighestBlockResponse.ProtoReflect.Descriptor instead.
func (*GetHighestBlockResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetHighestBlockResponse) GetTopology() *koinos.BlockTopology {
	if x != nil {
		return x.Topology
	}
	return nil
}

type BlockStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*BlockStoreRequest_Reserved
	//	*BlockStoreRequest_GetBlocksById
	//	*BlockStoreRequest_GetBlocksByHeight
	//	*BlockStoreRequest_AddBlock
	//	*BlockStoreRequest_GetHighestBlock
	Request isBlockStoreRequest_Request `protobuf_oneof:"request"`
}

func (x *BlockStoreRequest) Reset() {
	*x = BlockStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStoreRequest) ProtoMessage() {}

func (x *BlockStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStoreRequest.ProtoReflect.Descriptor instead.
func (*BlockStoreRequest) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{8}
}

func (m *BlockStoreRequest) GetRequest() isBlockStoreRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BlockStoreRequest) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetRequest().(*BlockStoreRequest_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *BlockStoreRequest) GetGetBlocksById() *GetBlocksByIdRequest {
	if x, ok := x.GetRequest().(*BlockStoreRequest_GetBlocksById); ok {
		return x.GetBlocksById
	}
	return nil
}

func (x *BlockStoreRequest) GetGetBlocksByHeight() *GetBlocksByHeightRequest {
	if x, ok := x.GetRequest().(*BlockStoreRequest_GetBlocksByHeight); ok {
		return x.GetBlocksByHeight
	}
	return nil
}

func (x *BlockStoreRequest) GetAddBlock() *AddBlockRequest {
	if x, ok := x.GetRequest().(*BlockStoreRequest_AddBlock); ok {
		return x.AddBlock
	}
	return nil
}

func (x *BlockStoreRequest) GetGetHighestBlock() *GetHighestBlockRequest {
	if x, ok := x.GetRequest().(*BlockStoreRequest_GetHighestBlock); ok {
		return x.GetHighestBlock
	}
	return nil
}

type isBlockStoreRequest_Request interface {
	isBlockStoreRequest_Request()
}

type BlockStoreRequest_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type BlockStoreRequest_GetBlocksById struct {
	GetBlocksById *GetBlocksByIdRequest `protobuf:"bytes,2,opt,name=get_blocks_by_id,json=getBlocksById,proto3,oneof"`
}

type BlockStoreRequest_GetBlocksByHeight struct {
	GetBlocksByHeight *GetBlocksByHeightRequest `protobuf:"bytes,3,opt,name=get_blocks_by_height,json=getBlocksByHeight,proto3,oneof"`
}

type BlockStoreRequest_AddBlock struct {
	AddBlock *AddBlockRequest `protobuf:"bytes,4,opt,name=add_block,json=addBlock,proto3,oneof"`
}

type BlockStoreRequest_GetHighestBlock struct {
	GetHighestBlock *GetHighestBlockRequest `protobuf:"bytes,5,opt,name=get_highest_block,json=getHighestBlock,proto3,oneof"`
}

func (*BlockStoreRequest_Reserved) isBlockStoreRequest_Request() {}

func (*BlockStoreRequest_GetBlocksById) isBlockStoreRequest_Request() {}

func (*BlockStoreRequest_GetBlocksByHeight) isBlockStoreRequest_Request() {}

func (*BlockStoreRequest_AddBlock) isBlockStoreRequest_Request() {}

func (*BlockStoreRequest_GetHighestBlock) isBlockStoreRequest_Request() {}

type BlockStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*BlockStoreResponse_Reserved
	//	*BlockStoreResponse_Error
	//	*BlockStoreResponse_GetBlocksById
	//	*BlockStoreResponse_GetBlocksByHeight
	//	*BlockStoreResponse_AddBlock
	//	*BlockStoreResponse_GetHighestBlock
	Response isBlockStoreResponse_Response `protobuf_oneof:"response"`
}

func (x *BlockStoreResponse) Reset() {
	*x = BlockStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStoreResponse) ProtoMessage() {}

func (x *BlockStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStoreResponse.ProtoReflect.Descriptor instead.
func (*BlockStoreResponse) Descriptor() ([]byte, []int) {
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP(), []int{9}
}

func (m *BlockStoreResponse) GetResponse() isBlockStoreResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BlockStoreResponse) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetResponse().(*BlockStoreResponse_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *BlockStoreResponse) GetError() *rpc.ErrorResponse {
	if x, ok := x.GetResponse().(*BlockStoreResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *BlockStoreResponse) GetGetBlocksById() *GetBlocksByIdResponse {
	if x, ok := x.GetResponse().(*BlockStoreResponse_GetBlocksById); ok {
		return x.GetBlocksById
	}
	return nil
}

func (x *BlockStoreResponse) GetGetBlocksByHeight() *GetBlocksByHeightResponse {
	if x, ok := x.GetResponse().(*BlockStoreResponse_GetBlocksByHeight); ok {
		return x.GetBlocksByHeight
	}
	return nil
}

func (x *BlockStoreResponse) GetAddBlock() *AddBlockResponse {
	if x, ok := x.GetResponse().(*BlockStoreResponse_AddBlock); ok {
		return x.AddBlock
	}
	return nil
}

func (x *BlockStoreResponse) GetGetHighestBlock() *GetHighestBlockResponse {
	if x, ok := x.GetResponse().(*BlockStoreResponse_GetHighestBlock); ok {
		return x.GetHighestBlock
	}
	return nil
}

type isBlockStoreResponse_Response interface {
	isBlockStoreResponse_Response()
}

type BlockStoreResponse_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type BlockStoreResponse_Error struct {
	Error *rpc.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type BlockStoreResponse_GetBlocksById struct {
	GetBlocksById *GetBlocksByIdResponse `protobuf:"bytes,3,opt,name=get_blocks_by_id,json=getBlocksById,proto3,oneof"`
}

type BlockStoreResponse_GetBlocksByHeight struct {
	GetBlocksByHeight *GetBlocksByHeightResponse `protobuf:"bytes,4,opt,name=get_blocks_by_height,json=getBlocksByHeight,proto3,oneof"`
}

type BlockStoreResponse_AddBlock struct {
	AddBlock *AddBlockResponse `protobuf:"bytes,5,opt,name=add_block,json=addBlock,proto3,oneof"`
}

type BlockStoreResponse_GetHighestBlock struct {
	GetHighestBlock *GetHighestBlockResponse `protobuf:"bytes,6,opt,name=get_highest_block,json=getHighestBlock,proto3,oneof"`
}

func (*BlockStoreResponse_Reserved) isBlockStoreResponse_Response() {}

func (*BlockStoreResponse_Error) isBlockStoreResponse_Response() {}

func (*BlockStoreResponse_GetBlocksById) isBlockStoreResponse_Response() {}

func (*BlockStoreResponse_GetBlocksByHeight) isBlockStoreResponse_Response() {}

func (*BlockStoreResponse_AddBlock) isBlockStoreResponse_Response() {}

func (*BlockStoreResponse_GetHighestBlock) isBlockStoreResponse_Response() {}

var File_koinos_rpc_block_store_block_store_rpc_proto protoreflect.FileDescriptor

var file_koinos_rpc_block_store_block_store_rpc_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x24, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6b, 0x6f,
	0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01,
	0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x04, 0x80,
	0xb5, 0x18, 0x03, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x5c, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80,
	0xb5, 0x18, 0x03, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x15, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x13, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x75,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x22, 0x60, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x62, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x6f,
	0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x61, 0x64, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x1a,
	0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0xc9,
	0x03, 0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72,
	0x70, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x5b,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x14, 0x67,
	0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5f,
	0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f,
	0x67, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x83, 0x04, 0x0a, 0x14, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x48,
	0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x5c, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79,
	0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x68, 0x0a,
	0x14, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6b, 0x6f,
	0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x62, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42,
	0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x60, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_koinos_rpc_block_store_block_store_rpc_proto_rawDescOnce sync.Once
	file_koinos_rpc_block_store_block_store_rpc_proto_rawDescData = file_koinos_rpc_block_store_block_store_rpc_proto_rawDesc
)

func file_koinos_rpc_block_store_block_store_rpc_proto_rawDescGZIP() []byte {
	file_koinos_rpc_block_store_block_store_rpc_proto_rawDescOnce.Do(func() {
		file_koinos_rpc_block_store_block_store_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_koinos_rpc_block_store_block_store_rpc_proto_rawDescData)
	})
	return file_koinos_rpc_block_store_block_store_rpc_proto_rawDescData
}

var file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_koinos_rpc_block_store_block_store_rpc_proto_goTypes = []interface{}{
	(*GetBlocksByIdRequest)(nil),      // 0: koinos.rpc.block_store.get_blocks_by_id_request
	(*GetBlocksByIdResponse)(nil),     // 1: koinos.rpc.block_store.get_blocks_by_id_response
	(*GetBlocksByHeightRequest)(nil),  // 2: koinos.rpc.block_store.get_blocks_by_height_request
	(*GetBlocksByHeightResponse)(nil), // 3: koinos.rpc.block_store.get_blocks_by_height_response
	(*AddBlockRequest)(nil),           // 4: koinos.rpc.block_store.add_block_request
	(*AddBlockResponse)(nil),          // 5: koinos.rpc.block_store.add_block_response
	(*GetHighestBlockRequest)(nil),    // 6: koinos.rpc.block_store.get_highest_block_request
	(*GetHighestBlockResponse)(nil),   // 7: koinos.rpc.block_store.get_highest_block_response
	(*BlockStoreRequest)(nil),         // 8: koinos.rpc.block_store.block_store_request
	(*BlockStoreResponse)(nil),        // 9: koinos.rpc.block_store.block_store_response
	(*BlockItem)(nil),                 // 10: koinos.block_store.block_item
	(*protocol.Block)(nil),            // 11: koinos.protocol.block
	(*protocol.BlockReceipt)(nil),     // 12: koinos.protocol.block_receipt
	(*koinos.BlockTopology)(nil),      // 13: koinos.block_topology
	(*rpc.ReservedRpc)(nil),           // 14: koinos.rpc.reserved_rpc
	(*rpc.ErrorResponse)(nil),         // 15: koinos.rpc.error_response
}
var file_koinos_rpc_block_store_block_store_rpc_proto_depIdxs = []int32{
	10, // 0: koinos.rpc.block_store.get_blocks_by_id_response.block_items:type_name -> koinos.block_store.block_item
	10, // 1: koinos.rpc.block_store.get_blocks_by_height_response.block_items:type_name -> koinos.block_store.block_item
	11, // 2: koinos.rpc.block_store.add_block_request.block_to_add:type_name -> koinos.protocol.block
	12, // 3: koinos.rpc.block_store.add_block_request.receipt_to_add:type_name -> koinos.protocol.block_receipt
	13, // 4: koinos.rpc.block_store.get_highest_block_response.topology:type_name -> koinos.block_topology
	14, // 5: koinos.rpc.block_store.block_store_request.reserved:type_name -> koinos.rpc.reserved_rpc
	0,  // 6: koinos.rpc.block_store.block_store_request.get_blocks_by_id:type_name -> koinos.rpc.block_store.get_blocks_by_id_request
	2,  // 7: koinos.rpc.block_store.block_store_request.get_blocks_by_height:type_name -> koinos.rpc.block_store.get_blocks_by_height_request
	4,  // 8: koinos.rpc.block_store.block_store_request.add_block:type_name -> koinos.rpc.block_store.add_block_request
	6,  // 9: koinos.rpc.block_store.block_store_request.get_highest_block:type_name -> koinos.rpc.block_store.get_highest_block_request
	14, // 10: koinos.rpc.block_store.block_store_response.reserved:type_name -> koinos.rpc.reserved_rpc
	15, // 11: koinos.rpc.block_store.block_store_response.error:type_name -> koinos.rpc.error_response
	1,  // 12: koinos.rpc.block_store.block_store_response.get_blocks_by_id:type_name -> koinos.rpc.block_store.get_blocks_by_id_response
	3,  // 13: koinos.rpc.block_store.block_store_response.get_blocks_by_height:type_name -> koinos.rpc.block_store.get_blocks_by_height_response
	5,  // 14: koinos.rpc.block_store.block_store_response.add_block:type_name -> koinos.rpc.block_store.add_block_response
	7,  // 15: koinos.rpc.block_store.block_store_response.get_highest_block:type_name -> koinos.rpc.block_store.get_highest_block_response
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_koinos_rpc_block_store_block_store_rpc_proto_init() }
func file_koinos_rpc_block_store_block_store_rpc_proto_init() {
	if File_koinos_rpc_block_store_block_store_rpc_proto != nil {
		return
	}
	file_koinos_block_store_block_store_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksByHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighestBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighestBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*BlockStoreRequest_Reserved)(nil),
		(*BlockStoreRequest_GetBlocksById)(nil),
		(*BlockStoreRequest_GetBlocksByHeight)(nil),
		(*BlockStoreRequest_AddBlock)(nil),
		(*BlockStoreRequest_GetHighestBlock)(nil),
	}
	file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*BlockStoreResponse_Reserved)(nil),
		(*BlockStoreResponse_Error)(nil),
		(*BlockStoreResponse_GetBlocksById)(nil),
		(*BlockStoreResponse_GetBlocksByHeight)(nil),
		(*BlockStoreResponse_AddBlock)(nil),
		(*BlockStoreResponse_GetHighestBlock)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koinos_rpc_block_store_block_store_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_koinos_rpc_block_store_block_store_rpc_proto_goTypes,
		DependencyIndexes: file_koinos_rpc_block_store_block_store_rpc_proto_depIdxs,
		MessageInfos:      file_koinos_rpc_block_store_block_store_rpc_proto_msgTypes,
	}.Build()
	File_koinos_rpc_block_store_block_store_rpc_proto = out.File
	file_koinos_rpc_block_store_block_store_rpc_proto_rawDesc = nil
	file_koinos_rpc_block_store_block_store_rpc_proto_goTypes = nil
	file_koinos_rpc_block_store_block_store_rpc_proto_depIdxs = nil
}
