// Code generated by capnpc-go. DO NOT EDIT.

package block_store

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	koinos "koinos"
	block_store "koinos/block_store"
	strconv "strconv"
)

type BlockStoreReservedRequest struct{ capnp.Struct }

// BlockStoreReservedRequest_TypeID is the unique identifier for the type BlockStoreReservedRequest.
const BlockStoreReservedRequest_TypeID = 0x87da3244a36c507f

func NewBlockStoreReservedRequest(s *capnp.Segment) (BlockStoreReservedRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedRequest{st}, err
}

func NewRootBlockStoreReservedRequest(s *capnp.Segment) (BlockStoreReservedRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedRequest{st}, err
}

func ReadRootBlockStoreReservedRequest(msg *capnp.Message) (BlockStoreReservedRequest, error) {
	root, err := msg.Root()
	return BlockStoreReservedRequest{root.Struct()}, err
}

func (s BlockStoreReservedRequest) String() string {
	str, _ := text.Marshal(0x87da3244a36c507f, s.Struct)
	return str
}

// BlockStoreReservedRequest_List is a list of BlockStoreReservedRequest.
type BlockStoreReservedRequest_List struct{ capnp.List }

// NewBlockStoreReservedRequest creates a new list of BlockStoreReservedRequest.
func NewBlockStoreReservedRequest_List(s *capnp.Segment, sz int32) (BlockStoreReservedRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return BlockStoreReservedRequest_List{l}, err
}

func (s BlockStoreReservedRequest_List) At(i int) BlockStoreReservedRequest {
	return BlockStoreReservedRequest{s.List.Struct(i)}
}

func (s BlockStoreReservedRequest_List) Set(i int, v BlockStoreReservedRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreReservedRequest_List) String() string {
	str, _ := text.MarshalList(0x87da3244a36c507f, s.List)
	return str
}

// BlockStoreReservedRequest_Future is a wrapper for a BlockStoreReservedRequest promised by a client call.
type BlockStoreReservedRequest_Future struct{ *capnp.Future }

func (p BlockStoreReservedRequest_Future) Struct() (BlockStoreReservedRequest, error) {
	s, err := p.Future.Struct()
	return BlockStoreReservedRequest{s}, err
}

type BlockStoreReservedResponse struct{ capnp.Struct }

// BlockStoreReservedResponse_TypeID is the unique identifier for the type BlockStoreReservedResponse.
const BlockStoreReservedResponse_TypeID = 0xe354f5c9bb74797c

func NewBlockStoreReservedResponse(s *capnp.Segment) (BlockStoreReservedResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedResponse{st}, err
}

func NewRootBlockStoreReservedResponse(s *capnp.Segment) (BlockStoreReservedResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedResponse{st}, err
}

func ReadRootBlockStoreReservedResponse(msg *capnp.Message) (BlockStoreReservedResponse, error) {
	root, err := msg.Root()
	return BlockStoreReservedResponse{root.Struct()}, err
}

func (s BlockStoreReservedResponse) String() string {
	str, _ := text.Marshal(0xe354f5c9bb74797c, s.Struct)
	return str
}

// BlockStoreReservedResponse_List is a list of BlockStoreReservedResponse.
type BlockStoreReservedResponse_List struct{ capnp.List }

// NewBlockStoreReservedResponse creates a new list of BlockStoreReservedResponse.
func NewBlockStoreReservedResponse_List(s *capnp.Segment, sz int32) (BlockStoreReservedResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return BlockStoreReservedResponse_List{l}, err
}

func (s BlockStoreReservedResponse_List) At(i int) BlockStoreReservedResponse {
	return BlockStoreReservedResponse{s.List.Struct(i)}
}

func (s BlockStoreReservedResponse_List) Set(i int, v BlockStoreReservedResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreReservedResponse_List) String() string {
	str, _ := text.MarshalList(0xe354f5c9bb74797c, s.List)
	return str
}

// BlockStoreReservedResponse_Future is a wrapper for a BlockStoreReservedResponse promised by a client call.
type BlockStoreReservedResponse_Future struct{ *capnp.Future }

func (p BlockStoreReservedResponse_Future) Struct() (BlockStoreReservedResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreReservedResponse{s}, err
}

type GetBlocksByIDRequest struct{ capnp.Struct }

// GetBlocksByIDRequest_TypeID is the unique identifier for the type GetBlocksByIDRequest.
const GetBlocksByIDRequest_TypeID = 0x91195b6a31dc7fec

func NewGetBlocksByIDRequest(s *capnp.Segment) (GetBlocksByIDRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetBlocksByIDRequest{st}, err
}

func NewRootGetBlocksByIDRequest(s *capnp.Segment) (GetBlocksByIDRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetBlocksByIDRequest{st}, err
}

func ReadRootGetBlocksByIDRequest(msg *capnp.Message) (GetBlocksByIDRequest, error) {
	root, err := msg.Root()
	return GetBlocksByIDRequest{root.Struct()}, err
}

func (s GetBlocksByIDRequest) String() string {
	str, _ := text.Marshal(0x91195b6a31dc7fec, s.Struct)
	return str
}

func (s GetBlocksByIDRequest) BlockID() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s GetBlocksByIDRequest) HasBlockID() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByIDRequest) SetBlockID(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockID sets the blockID field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s GetBlocksByIDRequest) NewBlockID(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s GetBlocksByIDRequest) ReturnBlockBlob() bool {
	return s.Struct.Bit(0)
}

func (s GetBlocksByIDRequest) SetReturnBlockBlob(v bool) {
	s.Struct.SetBit(0, v)
}

func (s GetBlocksByIDRequest) ReturnReceiptBlob() bool {
	return s.Struct.Bit(1)
}

func (s GetBlocksByIDRequest) SetReturnReceiptBlob(v bool) {
	s.Struct.SetBit(1, v)
}

// GetBlocksByIDRequest_List is a list of GetBlocksByIDRequest.
type GetBlocksByIDRequest_List struct{ capnp.List }

// NewGetBlocksByIDRequest creates a new list of GetBlocksByIDRequest.
func NewGetBlocksByIDRequest_List(s *capnp.Segment, sz int32) (GetBlocksByIDRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return GetBlocksByIDRequest_List{l}, err
}

func (s GetBlocksByIDRequest_List) At(i int) GetBlocksByIDRequest {
	return GetBlocksByIDRequest{s.List.Struct(i)}
}

func (s GetBlocksByIDRequest_List) Set(i int, v GetBlocksByIDRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByIDRequest_List) String() string {
	str, _ := text.MarshalList(0x91195b6a31dc7fec, s.List)
	return str
}

// GetBlocksByIDRequest_Future is a wrapper for a GetBlocksByIDRequest promised by a client call.
type GetBlocksByIDRequest_Future struct{ *capnp.Future }

func (p GetBlocksByIDRequest_Future) Struct() (GetBlocksByIDRequest, error) {
	s, err := p.Future.Struct()
	return GetBlocksByIDRequest{s}, err
}

type GetBlocksByIDResponse struct{ capnp.Struct }

// GetBlocksByIDResponse_TypeID is the unique identifier for the type GetBlocksByIDResponse.
const GetBlocksByIDResponse_TypeID = 0xd956b2e681b967dc

func NewGetBlocksByIDResponse(s *capnp.Segment) (GetBlocksByIDResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByIDResponse{st}, err
}

func NewRootGetBlocksByIDResponse(s *capnp.Segment) (GetBlocksByIDResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByIDResponse{st}, err
}

func ReadRootGetBlocksByIDResponse(msg *capnp.Message) (GetBlocksByIDResponse, error) {
	root, err := msg.Root()
	return GetBlocksByIDResponse{root.Struct()}, err
}

func (s GetBlocksByIDResponse) String() string {
	str, _ := text.Marshal(0xd956b2e681b967dc, s.Struct)
	return str
}

func (s GetBlocksByIDResponse) BlockItems() (block_store.BlockItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem_List{List: p.List()}, err
}

func (s GetBlocksByIDResponse) HasBlockItems() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByIDResponse) SetBlockItems(v block_store.BlockItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockItems sets the blockItems field to a newly
// allocated block_store.BlockItem_List, preferring placement in s's segment.
func (s GetBlocksByIDResponse) NewBlockItems(n int32) (block_store.BlockItem_List, error) {
	l, err := block_store.NewBlockItem_List(s.Struct.Segment(), n)
	if err != nil {
		return block_store.BlockItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetBlocksByIDResponse_List is a list of GetBlocksByIDResponse.
type GetBlocksByIDResponse_List struct{ capnp.List }

// NewGetBlocksByIDResponse creates a new list of GetBlocksByIDResponse.
func NewGetBlocksByIDResponse_List(s *capnp.Segment, sz int32) (GetBlocksByIDResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetBlocksByIDResponse_List{l}, err
}

func (s GetBlocksByIDResponse_List) At(i int) GetBlocksByIDResponse {
	return GetBlocksByIDResponse{s.List.Struct(i)}
}

func (s GetBlocksByIDResponse_List) Set(i int, v GetBlocksByIDResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByIDResponse_List) String() string {
	str, _ := text.MarshalList(0xd956b2e681b967dc, s.List)
	return str
}

// GetBlocksByIDResponse_Future is a wrapper for a GetBlocksByIDResponse promised by a client call.
type GetBlocksByIDResponse_Future struct{ *capnp.Future }

func (p GetBlocksByIDResponse_Future) Struct() (GetBlocksByIDResponse, error) {
	s, err := p.Future.Struct()
	return GetBlocksByIDResponse{s}, err
}

type GetBlocksByHeightRequest struct{ capnp.Struct }

// GetBlocksByHeightRequest_TypeID is the unique identifier for the type GetBlocksByHeightRequest.
const GetBlocksByHeightRequest_TypeID = 0xacd894b20e9e9dae

func NewGetBlocksByHeightRequest(s *capnp.Segment) (GetBlocksByHeightRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return GetBlocksByHeightRequest{st}, err
}

func NewRootGetBlocksByHeightRequest(s *capnp.Segment) (GetBlocksByHeightRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return GetBlocksByHeightRequest{st}, err
}

func ReadRootGetBlocksByHeightRequest(msg *capnp.Message) (GetBlocksByHeightRequest, error) {
	root, err := msg.Root()
	return GetBlocksByHeightRequest{root.Struct()}, err
}

func (s GetBlocksByHeightRequest) String() string {
	str, _ := text.Marshal(0xacd894b20e9e9dae, s.Struct)
	return str
}

func (s GetBlocksByHeightRequest) HeadBlockID() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s GetBlocksByHeightRequest) HasHeadBlockID() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByHeightRequest) SetHeadBlockID(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s GetBlocksByHeightRequest) AncestorStartHeight() uint32 {
	return s.Struct.Uint32(0)
}

func (s GetBlocksByHeightRequest) SetAncestorStartHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s GetBlocksByHeightRequest) NumBlocks() uint32 {
	return s.Struct.Uint32(4)
}

func (s GetBlocksByHeightRequest) SetNumBlocks(v uint32) {
	s.Struct.SetUint32(4, v)
}

func (s GetBlocksByHeightRequest) ReturnBlock() bool {
	return s.Struct.Bit(64)
}

func (s GetBlocksByHeightRequest) SetReturnBlock(v bool) {
	s.Struct.SetBit(64, v)
}

func (s GetBlocksByHeightRequest) ReturnReceipt() bool {
	return s.Struct.Bit(65)
}

func (s GetBlocksByHeightRequest) SetReturnReceipt(v bool) {
	s.Struct.SetBit(65, v)
}

// GetBlocksByHeightRequest_List is a list of GetBlocksByHeightRequest.
type GetBlocksByHeightRequest_List struct{ capnp.List }

// NewGetBlocksByHeightRequest creates a new list of GetBlocksByHeightRequest.
func NewGetBlocksByHeightRequest_List(s *capnp.Segment, sz int32) (GetBlocksByHeightRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return GetBlocksByHeightRequest_List{l}, err
}

func (s GetBlocksByHeightRequest_List) At(i int) GetBlocksByHeightRequest {
	return GetBlocksByHeightRequest{s.List.Struct(i)}
}

func (s GetBlocksByHeightRequest_List) Set(i int, v GetBlocksByHeightRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByHeightRequest_List) String() string {
	str, _ := text.MarshalList(0xacd894b20e9e9dae, s.List)
	return str
}

// GetBlocksByHeightRequest_Future is a wrapper for a GetBlocksByHeightRequest promised by a client call.
type GetBlocksByHeightRequest_Future struct{ *capnp.Future }

func (p GetBlocksByHeightRequest_Future) Struct() (GetBlocksByHeightRequest, error) {
	s, err := p.Future.Struct()
	return GetBlocksByHeightRequest{s}, err
}

type GetBlocksByHeightResponse struct{ capnp.Struct }

// GetBlocksByHeightResponse_TypeID is the unique identifier for the type GetBlocksByHeightResponse.
const GetBlocksByHeightResponse_TypeID = 0x974976c0e4871874

func NewGetBlocksByHeightResponse(s *capnp.Segment) (GetBlocksByHeightResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByHeightResponse{st}, err
}

func NewRootGetBlocksByHeightResponse(s *capnp.Segment) (GetBlocksByHeightResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByHeightResponse{st}, err
}

func ReadRootGetBlocksByHeightResponse(msg *capnp.Message) (GetBlocksByHeightResponse, error) {
	root, err := msg.Root()
	return GetBlocksByHeightResponse{root.Struct()}, err
}

func (s GetBlocksByHeightResponse) String() string {
	str, _ := text.Marshal(0x974976c0e4871874, s.Struct)
	return str
}

func (s GetBlocksByHeightResponse) BlockItems() (block_store.BlockItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem_List{List: p.List()}, err
}

func (s GetBlocksByHeightResponse) HasBlockItems() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByHeightResponse) SetBlockItems(v block_store.BlockItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockItems sets the blockItems field to a newly
// allocated block_store.BlockItem_List, preferring placement in s's segment.
func (s GetBlocksByHeightResponse) NewBlockItems(n int32) (block_store.BlockItem_List, error) {
	l, err := block_store.NewBlockItem_List(s.Struct.Segment(), n)
	if err != nil {
		return block_store.BlockItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetBlocksByHeightResponse_List is a list of GetBlocksByHeightResponse.
type GetBlocksByHeightResponse_List struct{ capnp.List }

// NewGetBlocksByHeightResponse creates a new list of GetBlocksByHeightResponse.
func NewGetBlocksByHeightResponse_List(s *capnp.Segment, sz int32) (GetBlocksByHeightResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetBlocksByHeightResponse_List{l}, err
}

func (s GetBlocksByHeightResponse_List) At(i int) GetBlocksByHeightResponse {
	return GetBlocksByHeightResponse{s.List.Struct(i)}
}

func (s GetBlocksByHeightResponse_List) Set(i int, v GetBlocksByHeightResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByHeightResponse_List) String() string {
	str, _ := text.MarshalList(0x974976c0e4871874, s.List)
	return str
}

// GetBlocksByHeightResponse_Future is a wrapper for a GetBlocksByHeightResponse promised by a client call.
type GetBlocksByHeightResponse_Future struct{ *capnp.Future }

func (p GetBlocksByHeightResponse_Future) Struct() (GetBlocksByHeightResponse, error) {
	s, err := p.Future.Struct()
	return GetBlocksByHeightResponse{s}, err
}

type AddBlockRequest struct{ capnp.Struct }

// AddBlockRequest_TypeID is the unique identifier for the type AddBlockRequest.
const AddBlockRequest_TypeID = 0xb92294c30ccbf9c6

func NewAddBlockRequest(s *capnp.Segment) (AddBlockRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddBlockRequest{st}, err
}

func NewRootAddBlockRequest(s *capnp.Segment) (AddBlockRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddBlockRequest{st}, err
}

func ReadRootAddBlockRequest(msg *capnp.Message) (AddBlockRequest, error) {
	root, err := msg.Root()
	return AddBlockRequest{root.Struct()}, err
}

func (s AddBlockRequest) String() string {
	str, _ := text.Marshal(0xb92294c30ccbf9c6, s.Struct)
	return str
}

func (s AddBlockRequest) BlockToAdd() (block_store.BlockItem, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem{Struct: p.Struct()}, err
}

func (s AddBlockRequest) HasBlockToAdd() bool {
	return s.Struct.HasPtr(0)
}

func (s AddBlockRequest) SetBlockToAdd(v block_store.BlockItem) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockToAdd sets the blockToAdd field to a newly
// allocated block_store.BlockItem struct, preferring placement in s's segment.
func (s AddBlockRequest) NewBlockToAdd() (block_store.BlockItem, error) {
	ss, err := block_store.NewBlockItem(s.Struct.Segment())
	if err != nil {
		return block_store.BlockItem{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// AddBlockRequest_List is a list of AddBlockRequest.
type AddBlockRequest_List struct{ capnp.List }

// NewAddBlockRequest creates a new list of AddBlockRequest.
func NewAddBlockRequest_List(s *capnp.Segment, sz int32) (AddBlockRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AddBlockRequest_List{l}, err
}

func (s AddBlockRequest_List) At(i int) AddBlockRequest { return AddBlockRequest{s.List.Struct(i)} }

func (s AddBlockRequest_List) Set(i int, v AddBlockRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AddBlockRequest_List) String() string {
	str, _ := text.MarshalList(0xb92294c30ccbf9c6, s.List)
	return str
}

// AddBlockRequest_Future is a wrapper for a AddBlockRequest promised by a client call.
type AddBlockRequest_Future struct{ *capnp.Future }

func (p AddBlockRequest_Future) Struct() (AddBlockRequest, error) {
	s, err := p.Future.Struct()
	return AddBlockRequest{s}, err
}

func (p AddBlockRequest_Future) BlockToAdd() block_store.BlockItem_Future {
	return block_store.BlockItem_Future{Future: p.Future.Field(0, nil)}
}

type AddBlockResponse struct{ capnp.Struct }

// AddBlockResponse_TypeID is the unique identifier for the type AddBlockResponse.
const AddBlockResponse_TypeID = 0xe3748c65f22dba2c

func NewAddBlockResponse(s *capnp.Segment) (AddBlockResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AddBlockResponse{st}, err
}

func NewRootAddBlockResponse(s *capnp.Segment) (AddBlockResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AddBlockResponse{st}, err
}

func ReadRootAddBlockResponse(msg *capnp.Message) (AddBlockResponse, error) {
	root, err := msg.Root()
	return AddBlockResponse{root.Struct()}, err
}

func (s AddBlockResponse) String() string {
	str, _ := text.Marshal(0xe3748c65f22dba2c, s.Struct)
	return str
}

// AddBlockResponse_List is a list of AddBlockResponse.
type AddBlockResponse_List struct{ capnp.List }

// NewAddBlockResponse creates a new list of AddBlockResponse.
func NewAddBlockResponse_List(s *capnp.Segment, sz int32) (AddBlockResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return AddBlockResponse_List{l}, err
}

func (s AddBlockResponse_List) At(i int) AddBlockResponse { return AddBlockResponse{s.List.Struct(i)} }

func (s AddBlockResponse_List) Set(i int, v AddBlockResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AddBlockResponse_List) String() string {
	str, _ := text.MarshalList(0xe3748c65f22dba2c, s.List)
	return str
}

// AddBlockResponse_Future is a wrapper for a AddBlockResponse promised by a client call.
type AddBlockResponse_Future struct{ *capnp.Future }

func (p AddBlockResponse_Future) Struct() (AddBlockResponse, error) {
	s, err := p.Future.Struct()
	return AddBlockResponse{s}, err
}

type GetHighestBlockRequest struct{ capnp.Struct }

// GetHighestBlockRequest_TypeID is the unique identifier for the type GetHighestBlockRequest.
const GetHighestBlockRequest_TypeID = 0x8c7e896efbf33dd7

func NewGetHighestBlockRequest(s *capnp.Segment) (GetHighestBlockRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GetHighestBlockRequest{st}, err
}

func NewRootGetHighestBlockRequest(s *capnp.Segment) (GetHighestBlockRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GetHighestBlockRequest{st}, err
}

func ReadRootGetHighestBlockRequest(msg *capnp.Message) (GetHighestBlockRequest, error) {
	root, err := msg.Root()
	return GetHighestBlockRequest{root.Struct()}, err
}

func (s GetHighestBlockRequest) String() string {
	str, _ := text.Marshal(0x8c7e896efbf33dd7, s.Struct)
	return str
}

// GetHighestBlockRequest_List is a list of GetHighestBlockRequest.
type GetHighestBlockRequest_List struct{ capnp.List }

// NewGetHighestBlockRequest creates a new list of GetHighestBlockRequest.
func NewGetHighestBlockRequest_List(s *capnp.Segment, sz int32) (GetHighestBlockRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GetHighestBlockRequest_List{l}, err
}

func (s GetHighestBlockRequest_List) At(i int) GetHighestBlockRequest {
	return GetHighestBlockRequest{s.List.Struct(i)}
}

func (s GetHighestBlockRequest_List) Set(i int, v GetHighestBlockRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetHighestBlockRequest_List) String() string {
	str, _ := text.MarshalList(0x8c7e896efbf33dd7, s.List)
	return str
}

// GetHighestBlockRequest_Future is a wrapper for a GetHighestBlockRequest promised by a client call.
type GetHighestBlockRequest_Future struct{ *capnp.Future }

func (p GetHighestBlockRequest_Future) Struct() (GetHighestBlockRequest, error) {
	s, err := p.Future.Struct()
	return GetHighestBlockRequest{s}, err
}

type GetHighestBlockResponse struct{ capnp.Struct }

// GetHighestBlockResponse_TypeID is the unique identifier for the type GetHighestBlockResponse.
const GetHighestBlockResponse_TypeID = 0xb36e5c1fb370347d

func NewGetHighestBlockResponse(s *capnp.Segment) (GetHighestBlockResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetHighestBlockResponse{st}, err
}

func NewRootGetHighestBlockResponse(s *capnp.Segment) (GetHighestBlockResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetHighestBlockResponse{st}, err
}

func ReadRootGetHighestBlockResponse(msg *capnp.Message) (GetHighestBlockResponse, error) {
	root, err := msg.Root()
	return GetHighestBlockResponse{root.Struct()}, err
}

func (s GetHighestBlockResponse) String() string {
	str, _ := text.Marshal(0xb36e5c1fb370347d, s.Struct)
	return str
}

func (s GetHighestBlockResponse) Topology() (koinos.BlockTopology, error) {
	p, err := s.Struct.Ptr(0)
	return koinos.BlockTopology{Struct: p.Struct()}, err
}

func (s GetHighestBlockResponse) HasTopology() bool {
	return s.Struct.HasPtr(0)
}

func (s GetHighestBlockResponse) SetTopology(v koinos.BlockTopology) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTopology sets the topology field to a newly
// allocated koinos.BlockTopology struct, preferring placement in s's segment.
func (s GetHighestBlockResponse) NewTopology() (koinos.BlockTopology, error) {
	ss, err := koinos.NewBlockTopology(s.Struct.Segment())
	if err != nil {
		return koinos.BlockTopology{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// GetHighestBlockResponse_List is a list of GetHighestBlockResponse.
type GetHighestBlockResponse_List struct{ capnp.List }

// NewGetHighestBlockResponse creates a new list of GetHighestBlockResponse.
func NewGetHighestBlockResponse_List(s *capnp.Segment, sz int32) (GetHighestBlockResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetHighestBlockResponse_List{l}, err
}

func (s GetHighestBlockResponse_List) At(i int) GetHighestBlockResponse {
	return GetHighestBlockResponse{s.List.Struct(i)}
}

func (s GetHighestBlockResponse_List) Set(i int, v GetHighestBlockResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetHighestBlockResponse_List) String() string {
	str, _ := text.MarshalList(0xb36e5c1fb370347d, s.List)
	return str
}

// GetHighestBlockResponse_Future is a wrapper for a GetHighestBlockResponse promised by a client call.
type GetHighestBlockResponse_Future struct{ *capnp.Future }

func (p GetHighestBlockResponse_Future) Struct() (GetHighestBlockResponse, error) {
	s, err := p.Future.Struct()
	return GetHighestBlockResponse{s}, err
}

func (p GetHighestBlockResponse_Future) Topology() koinos.BlockTopology_Future {
	return koinos.BlockTopology_Future{Future: p.Future.Field(0, nil)}
}

type BlockStoreErrorResponse struct{ capnp.Struct }

// BlockStoreErrorResponse_TypeID is the unique identifier for the type BlockStoreErrorResponse.
const BlockStoreErrorResponse_TypeID = 0xe80c1d8ad928139e

func NewBlockStoreErrorResponse(s *capnp.Segment) (BlockStoreErrorResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return BlockStoreErrorResponse{st}, err
}

func NewRootBlockStoreErrorResponse(s *capnp.Segment) (BlockStoreErrorResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return BlockStoreErrorResponse{st}, err
}

func ReadRootBlockStoreErrorResponse(msg *capnp.Message) (BlockStoreErrorResponse, error) {
	root, err := msg.Root()
	return BlockStoreErrorResponse{root.Struct()}, err
}

func (s BlockStoreErrorResponse) String() string {
	str, _ := text.Marshal(0xe80c1d8ad928139e, s.Struct)
	return str
}

func (s BlockStoreErrorResponse) ErrorText() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s BlockStoreErrorResponse) HasErrorText() bool {
	return s.Struct.HasPtr(0)
}

func (s BlockStoreErrorResponse) ErrorTextBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s BlockStoreErrorResponse) SetErrorText(v string) error {
	return s.Struct.SetText(0, v)
}

func (s BlockStoreErrorResponse) ErrorData() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s BlockStoreErrorResponse) HasErrorData() bool {
	return s.Struct.HasPtr(1)
}

func (s BlockStoreErrorResponse) ErrorDataBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s BlockStoreErrorResponse) SetErrorData(v string) error {
	return s.Struct.SetText(1, v)
}

// BlockStoreErrorResponse_List is a list of BlockStoreErrorResponse.
type BlockStoreErrorResponse_List struct{ capnp.List }

// NewBlockStoreErrorResponse creates a new list of BlockStoreErrorResponse.
func NewBlockStoreErrorResponse_List(s *capnp.Segment, sz int32) (BlockStoreErrorResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return BlockStoreErrorResponse_List{l}, err
}

func (s BlockStoreErrorResponse_List) At(i int) BlockStoreErrorResponse {
	return BlockStoreErrorResponse{s.List.Struct(i)}
}

func (s BlockStoreErrorResponse_List) Set(i int, v BlockStoreErrorResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreErrorResponse_List) String() string {
	str, _ := text.MarshalList(0xe80c1d8ad928139e, s.List)
	return str
}

// BlockStoreErrorResponse_Future is a wrapper for a BlockStoreErrorResponse promised by a client call.
type BlockStoreErrorResponse_Future struct{ *capnp.Future }

func (p BlockStoreErrorResponse_Future) Struct() (BlockStoreErrorResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreErrorResponse{s}, err
}

type BlockStoreRequest struct{ capnp.Struct }
type BlockStoreRequest_Which uint16

const (
	BlockStoreRequest_Which_blockStoreReserved BlockStoreRequest_Which = 0
	BlockStoreRequest_Which_getBlocksByID      BlockStoreRequest_Which = 1
	BlockStoreRequest_Which_getBlocksByHeight  BlockStoreRequest_Which = 2
	BlockStoreRequest_Which_addBlock           BlockStoreRequest_Which = 3
	BlockStoreRequest_Which_getHighestBlock    BlockStoreRequest_Which = 4
)

func (w BlockStoreRequest_Which) String() string {
	const s = "blockStoreReservedgetBlocksByIDgetBlocksByHeightaddBlockgetHighestBlock"
	switch w {
	case BlockStoreRequest_Which_blockStoreReserved:
		return s[0:18]
	case BlockStoreRequest_Which_getBlocksByID:
		return s[18:31]
	case BlockStoreRequest_Which_getBlocksByHeight:
		return s[31:48]
	case BlockStoreRequest_Which_addBlock:
		return s[48:56]
	case BlockStoreRequest_Which_getHighestBlock:
		return s[56:71]

	}
	return "BlockStoreRequest_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// BlockStoreRequest_TypeID is the unique identifier for the type BlockStoreRequest.
const BlockStoreRequest_TypeID = 0xf2bb9a8c50dad870

func NewBlockStoreRequest(s *capnp.Segment) (BlockStoreRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreRequest{st}, err
}

func NewRootBlockStoreRequest(s *capnp.Segment) (BlockStoreRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreRequest{st}, err
}

func ReadRootBlockStoreRequest(msg *capnp.Message) (BlockStoreRequest, error) {
	root, err := msg.Root()
	return BlockStoreRequest{root.Struct()}, err
}

func (s BlockStoreRequest) String() string {
	str, _ := text.Marshal(0xf2bb9a8c50dad870, s.Struct)
	return str
}

func (s BlockStoreRequest) Which() BlockStoreRequest_Which {
	return BlockStoreRequest_Which(s.Struct.Uint16(0))
}
func (s BlockStoreRequest) BlockStoreReserved() (BlockStoreReservedRequest, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != blockStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreReservedRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasBlockStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetBlockStoreReserved(v BlockStoreReservedRequest) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockStoreReserved sets the blockStoreReserved field to a newly
// allocated BlockStoreReservedRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewBlockStoreReserved() (BlockStoreReservedRequest, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewBlockStoreReservedRequest(s.Struct.Segment())
	if err != nil {
		return BlockStoreReservedRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetBlocksByID() (GetBlocksByIDRequest, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != getBlocksByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByIDRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetBlocksByID() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetBlocksByID(v GetBlocksByIDRequest) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByID sets the getBlocksByID field to a newly
// allocated GetBlocksByIDRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetBlocksByID() (GetBlocksByIDRequest, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewGetBlocksByIDRequest(s.Struct.Segment())
	if err != nil {
		return GetBlocksByIDRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetBlocksByHeight() (GetBlocksByHeightRequest, error) {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != getBlocksByHeight")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByHeightRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetBlocksByHeight() bool {
	if s.Struct.Uint16(0) != 2 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetBlocksByHeight(v GetBlocksByHeightRequest) error {
	s.Struct.SetUint16(0, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByHeight sets the getBlocksByHeight field to a newly
// allocated GetBlocksByHeightRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetBlocksByHeight() (GetBlocksByHeightRequest, error) {
	s.Struct.SetUint16(0, 2)
	ss, err := NewGetBlocksByHeightRequest(s.Struct.Segment())
	if err != nil {
		return GetBlocksByHeightRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) AddBlock() (AddBlockRequest, error) {
	if s.Struct.Uint16(0) != 3 {
		panic("Which() != addBlock")
	}
	p, err := s.Struct.Ptr(0)
	return AddBlockRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasAddBlock() bool {
	if s.Struct.Uint16(0) != 3 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetAddBlock(v AddBlockRequest) error {
	s.Struct.SetUint16(0, 3)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddBlock sets the addBlock field to a newly
// allocated AddBlockRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewAddBlock() (AddBlockRequest, error) {
	s.Struct.SetUint16(0, 3)
	ss, err := NewAddBlockRequest(s.Struct.Segment())
	if err != nil {
		return AddBlockRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetHighestBlock() (GetHighestBlockRequest, error) {
	if s.Struct.Uint16(0) != 4 {
		panic("Which() != getHighestBlock")
	}
	p, err := s.Struct.Ptr(0)
	return GetHighestBlockRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetHighestBlock() bool {
	if s.Struct.Uint16(0) != 4 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetHighestBlock(v GetHighestBlockRequest) error {
	s.Struct.SetUint16(0, 4)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetHighestBlock sets the getHighestBlock field to a newly
// allocated GetHighestBlockRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetHighestBlock() (GetHighestBlockRequest, error) {
	s.Struct.SetUint16(0, 4)
	ss, err := NewGetHighestBlockRequest(s.Struct.Segment())
	if err != nil {
		return GetHighestBlockRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// BlockStoreRequest_List is a list of BlockStoreRequest.
type BlockStoreRequest_List struct{ capnp.List }

// NewBlockStoreRequest creates a new list of BlockStoreRequest.
func NewBlockStoreRequest_List(s *capnp.Segment, sz int32) (BlockStoreRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BlockStoreRequest_List{l}, err
}

func (s BlockStoreRequest_List) At(i int) BlockStoreRequest {
	return BlockStoreRequest{s.List.Struct(i)}
}

func (s BlockStoreRequest_List) Set(i int, v BlockStoreRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreRequest_List) String() string {
	str, _ := text.MarshalList(0xf2bb9a8c50dad870, s.List)
	return str
}

// BlockStoreRequest_Future is a wrapper for a BlockStoreRequest promised by a client call.
type BlockStoreRequest_Future struct{ *capnp.Future }

func (p BlockStoreRequest_Future) Struct() (BlockStoreRequest, error) {
	s, err := p.Future.Struct()
	return BlockStoreRequest{s}, err
}

func (p BlockStoreRequest_Future) BlockStoreReserved() BlockStoreReservedRequest_Future {
	return BlockStoreReservedRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetBlocksByID() GetBlocksByIDRequest_Future {
	return GetBlocksByIDRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetBlocksByHeight() GetBlocksByHeightRequest_Future {
	return GetBlocksByHeightRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) AddBlock() AddBlockRequest_Future {
	return AddBlockRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetHighestBlock() GetHighestBlockRequest_Future {
	return GetHighestBlockRequest_Future{Future: p.Future.Field(0, nil)}
}

type BlockStoreResponse struct{ capnp.Struct }
type BlockStoreResponse_Which uint16

const (
	BlockStoreResponse_Which_blockStoreReserved BlockStoreResponse_Which = 0
	BlockStoreResponse_Which_errorResponse      BlockStoreResponse_Which = 1
	BlockStoreResponse_Which_getBlocksByID      BlockStoreResponse_Which = 2
	BlockStoreResponse_Which_getBlocksByHeight  BlockStoreResponse_Which = 3
	BlockStoreResponse_Which_addBlock           BlockStoreResponse_Which = 4
	BlockStoreResponse_Which_getHighestBlock    BlockStoreResponse_Which = 5
)

func (w BlockStoreResponse_Which) String() string {
	const s = "blockStoreReservederrorResponsegetBlocksByIDgetBlocksByHeightaddBlockgetHighestBlock"
	switch w {
	case BlockStoreResponse_Which_blockStoreReserved:
		return s[0:18]
	case BlockStoreResponse_Which_errorResponse:
		return s[18:31]
	case BlockStoreResponse_Which_getBlocksByID:
		return s[31:44]
	case BlockStoreResponse_Which_getBlocksByHeight:
		return s[44:61]
	case BlockStoreResponse_Which_addBlock:
		return s[61:69]
	case BlockStoreResponse_Which_getHighestBlock:
		return s[69:84]

	}
	return "BlockStoreResponse_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// BlockStoreResponse_TypeID is the unique identifier for the type BlockStoreResponse.
const BlockStoreResponse_TypeID = 0xdc75dd2b3bb315d0

func NewBlockStoreResponse(s *capnp.Segment) (BlockStoreResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreResponse{st}, err
}

func NewRootBlockStoreResponse(s *capnp.Segment) (BlockStoreResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreResponse{st}, err
}

func ReadRootBlockStoreResponse(msg *capnp.Message) (BlockStoreResponse, error) {
	root, err := msg.Root()
	return BlockStoreResponse{root.Struct()}, err
}

func (s BlockStoreResponse) String() string {
	str, _ := text.Marshal(0xdc75dd2b3bb315d0, s.Struct)
	return str
}

func (s BlockStoreResponse) Which() BlockStoreResponse_Which {
	return BlockStoreResponse_Which(s.Struct.Uint16(0))
}
func (s BlockStoreResponse) BlockStoreReserved() (BlockStoreReservedResponse, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != blockStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreReservedResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasBlockStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetBlockStoreReserved(v BlockStoreReservedResponse) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockStoreReserved sets the blockStoreReserved field to a newly
// allocated BlockStoreReservedResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewBlockStoreReserved() (BlockStoreReservedResponse, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewBlockStoreReservedResponse(s.Struct.Segment())
	if err != nil {
		return BlockStoreReservedResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) ErrorResponse() (BlockStoreErrorResponse, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != errorResponse")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreErrorResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasErrorResponse() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetErrorResponse(v BlockStoreErrorResponse) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewErrorResponse sets the errorResponse field to a newly
// allocated BlockStoreErrorResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewErrorResponse() (BlockStoreErrorResponse, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewBlockStoreErrorResponse(s.Struct.Segment())
	if err != nil {
		return BlockStoreErrorResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetBlocksByID() (GetBlocksByIDResponse, error) {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != getBlocksByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByIDResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetBlocksByID() bool {
	if s.Struct.Uint16(0) != 2 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetBlocksByID(v GetBlocksByIDResponse) error {
	s.Struct.SetUint16(0, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByID sets the getBlocksByID field to a newly
// allocated GetBlocksByIDResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetBlocksByID() (GetBlocksByIDResponse, error) {
	s.Struct.SetUint16(0, 2)
	ss, err := NewGetBlocksByIDResponse(s.Struct.Segment())
	if err != nil {
		return GetBlocksByIDResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetBlocksByHeight() (GetBlocksByHeightResponse, error) {
	if s.Struct.Uint16(0) != 3 {
		panic("Which() != getBlocksByHeight")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByHeightResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetBlocksByHeight() bool {
	if s.Struct.Uint16(0) != 3 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetBlocksByHeight(v GetBlocksByHeightResponse) error {
	s.Struct.SetUint16(0, 3)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByHeight sets the getBlocksByHeight field to a newly
// allocated GetBlocksByHeightResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetBlocksByHeight() (GetBlocksByHeightResponse, error) {
	s.Struct.SetUint16(0, 3)
	ss, err := NewGetBlocksByHeightResponse(s.Struct.Segment())
	if err != nil {
		return GetBlocksByHeightResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) AddBlock() (AddBlockResponse, error) {
	if s.Struct.Uint16(0) != 4 {
		panic("Which() != addBlock")
	}
	p, err := s.Struct.Ptr(0)
	return AddBlockResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasAddBlock() bool {
	if s.Struct.Uint16(0) != 4 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetAddBlock(v AddBlockResponse) error {
	s.Struct.SetUint16(0, 4)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddBlock sets the addBlock field to a newly
// allocated AddBlockResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewAddBlock() (AddBlockResponse, error) {
	s.Struct.SetUint16(0, 4)
	ss, err := NewAddBlockResponse(s.Struct.Segment())
	if err != nil {
		return AddBlockResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetHighestBlock() (GetHighestBlockResponse, error) {
	if s.Struct.Uint16(0) != 5 {
		panic("Which() != getHighestBlock")
	}
	p, err := s.Struct.Ptr(0)
	return GetHighestBlockResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetHighestBlock() bool {
	if s.Struct.Uint16(0) != 5 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetHighestBlock(v GetHighestBlockResponse) error {
	s.Struct.SetUint16(0, 5)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetHighestBlock sets the getHighestBlock field to a newly
// allocated GetHighestBlockResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetHighestBlock() (GetHighestBlockResponse, error) {
	s.Struct.SetUint16(0, 5)
	ss, err := NewGetHighestBlockResponse(s.Struct.Segment())
	if err != nil {
		return GetHighestBlockResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// BlockStoreResponse_List is a list of BlockStoreResponse.
type BlockStoreResponse_List struct{ capnp.List }

// NewBlockStoreResponse creates a new list of BlockStoreResponse.
func NewBlockStoreResponse_List(s *capnp.Segment, sz int32) (BlockStoreResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BlockStoreResponse_List{l}, err
}

func (s BlockStoreResponse_List) At(i int) BlockStoreResponse {
	return BlockStoreResponse{s.List.Struct(i)}
}

func (s BlockStoreResponse_List) Set(i int, v BlockStoreResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreResponse_List) String() string {
	str, _ := text.MarshalList(0xdc75dd2b3bb315d0, s.List)
	return str
}

// BlockStoreResponse_Future is a wrapper for a BlockStoreResponse promised by a client call.
type BlockStoreResponse_Future struct{ *capnp.Future }

func (p BlockStoreResponse_Future) Struct() (BlockStoreResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreResponse{s}, err
}

func (p BlockStoreResponse_Future) BlockStoreReserved() BlockStoreReservedResponse_Future {
	return BlockStoreReservedResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) ErrorResponse() BlockStoreErrorResponse_Future {
	return BlockStoreErrorResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetBlocksByID() GetBlocksByIDResponse_Future {
	return GetBlocksByIDResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetBlocksByHeight() GetBlocksByHeightResponse_Future {
	return GetBlocksByHeightResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) AddBlock() AddBlockResponse_Future {
	return AddBlockResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetHighestBlock() GetHighestBlockResponse_Future {
	return GetHighestBlockResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_c0c529faac9105c3 = "x\xda\xb4\x96[lTE\x18\xc7\xbf\xff\xcc\x9e\xdde" +
	"\xdd\xc5=95\xa9\x0ff\xa31\x84F\x14\xb0<y" +
	"\x09\xb4i#\xe5\xa9\xb3\x10\xaf\x18\xb2\xdd\x9d\xb4\xb5e" +
	"\xcf\xb2\xe7\x14mb\xe5\x92\x18\xc0\xd4\x07H\x8d\x81\x08" +
	"\x1a\x95\x84DT.\x12)\xf8\x00\xa2b\xbd$>h" +
	"\x04\x02\x0f\xa2\x184\x1a\xb5\xc6\x07A\x1d3g\xcf9" +
	"\xbbl\x97\xc66\xf1mw\xce\x7f\xbe\xf9\xe6\xfb\xff\xe6" +
	"\x9bY\xf42_\xc6\x16\x1b\xef\xde@$\xb6\x1aQ\xb5" +
	"\xa1{\xf0\xb5\x8e\xbb\xcfm!s\x1e\xd4)c\xfb\xfe" +
	"+-\x1f\x9e\xa0H\x8c\xa8\xf5\xa4\xc1\x98u\xc1\x88\x11" +
	"W_\xdf\xff\xfb\xd5\xe2\xb6gF\x1b\xa8\xc6\x8d\x1fa" +
	"}\xe5\xa9~\xdap~\xf1\x13\x8f\xdd\xbc\x9d\xc4<\xd4" +
	"\xc8\x0ch\xddA\xe3\x1c\xac\xcf\x8d\x18\x915a\xbcM" +
	"Pn\xf3\x96\xefN\xac\xefz\xf1\xda\x98\x15\xf1H\x94" +
	"1kgT\x8b_\x88.%\xa8\xb7v\xef\x99{h" +
	"\xec\xcc~\x1d\x9a\xd5\xab'\xa2W`]\xd2\xea\xd6o" +
	"\xa2\x19\x10\xd4\xc8\x92\xd2\xe1\xcc\xea\xe2\xe1F\xb1[\xe2" +
	"\x93\xb0:\xe3:v[\\\xc7\xfe\xe8\xcfO\x93\xa7\xc6" +
	"n\x1bo$\x96\xf1C\xb0F<\xf1\xb0'>\xdf;" +
	"\xbe\xe9\xfbC\x0f\x9em$\xde\x1d\xbf\x08k\xdc\x13\x1f" +
	"\xf1\xc4_\xdct\xf8\xde;.\x0c\x9d\xaf+H'b" +
	"Q\xa2\xd6\x1f\xe2\x9f\xc02\xe6\xe8\x99\x98\xf3\x90N\xfb" +
	"\xe9a\xf7\xf8\xc4\x1f\xab\xbemP\xe6\xb5\x89\x04\xb3\x9e" +
	"O\xe82/8v\xe7\xa4\x1cu\x1b\xa9\xfa\x13\xc7`" +
	"m\xf2T{\xac\xf9g\x9f\xbb%y\xb9.Q\xa6e" +
	"\x8f'&a\x0d't\xa2C\x89'\x09\xaat\xe6\\" +
	"\xf7\xe8\xae\xe3\x93S\x135\x88Z\xcf&\xde\x87\xf5\x9b" +
	"\x96\xb7\xfe\x9c\xc8\x80.\xabr)\xbf\xb0g\xd0\xce\xc7" +
	"\x06\xd68\xae]\x96\xde\x1f\xff\xf7\x9ar)\x7fW>" +
	"W*\x96\xeei\xd7\xa3+\xf5`V:\xb2\xbc^\x16" +
	"\xb2r\xdd\x90t\\\xea\x06\xc2 \xd1\xe9\x83< \xdd" +
	"\xe5\xfd\xbd}\xd2q\xbdpY\xb9\xeeF\x1dbf\x11" +
	"\xbc\xa9N\xfbpW\x87\x97\x01\xf7\xe6\x8b$\x8f\x10E" +
	"@dv\xb6\x13\x89e\x1cb5\x03\xd0\x04\x00\xe6#" +
	"\x9b\x89\xc4\xc3\x1c\xa2\xc0`24\x81\x01fn\x07\x91" +
	"(p\x88\x12\xc3\x06o\xb9\xae\x0e\xcc%ts E" +
	"L\xffTe\xe9\x0e\x95\x8b\xed\x83\xb0\xf3\x03\xed\x83v" +
	"\x0f\x01\xc4\x80\xf0KV\"/\xfbK:)\xf4T\xbf" +
	"\xfd\xb7\x9a\xd6lf\xb9\xec\xef\xeds\xb3\xd2)\xd9E" +
	"G\xea\x9a\x8aH\xb8\xa3\xd4\xa3D\"\xc9!\xe63\xa8" +
	"J\xa2\xae$\xbe\xd6\x09\xb2M\xab\xc9\x16\xbbk\xe4\x8d" +
	"\xdb7\x12\xa1\x92\xf7\x8c\xcb\xe9g\xb0\xb4\xe2\xaaN\xa0" +
	")L`\xa4\xc7\xdc\x94\x11/q\x88}~M\x89\xcc" +
	"\xbd\xaf\x12\x89}\x1c\xe2\x9d\xa0\xa6D\xe6\xc1,\x918" +
	"\xc0!\xdec0\xf9\xb2&p\"s\xbc\x87H\x1c\xe5" +
	"\x10\x1f0\x98\x91\xb6&D\x88\xcc\x93e\"q\x82C" +
	"|\xc6\xa0\xfad\xae\xa0\x13\xa1\xd8@W\x87\x88\x80\xa9" +
	"#\xa7/%\x16^\xcc\xfdJ\"\xc2\xd0\x96\x04q\xcf" +
	"\x93\x14A\xe5\x8ay\xa97\x82\x95n\xae\xec.\x97\xfd" +
	"\xb1\xde>\x17qb\x88\x13Tqh\xad\xb7%\x82\x13" +
	"\x8e\x05.R\xcc\xce\x0fLq\x902\x9e\x85S\xdc\x9b" +
	")\xccN\xc63\xaf\xce\xbb\x15\xbew\xcd\x0c\xca\xb5K" +
	"\xf6\xa0\xdd;LDH\xab\xd2\x82\xf5\xcf\xde\xfa\xcbi" +
	"\xa5=K\xd7\xackL\xbfn[\xa1\xe0/\x98\x09\xad" +
	"j\xc0Js\xc0\xca*\xbb\x8dx\xa1P\x07I\x9af" +
	"{\xe6\x9c\x92\x1d\x9b\xba\xcd\xff\x0d\xd1k\x1aO\xe5t" +
	"x\xc7\xa3\x99G\x92Jy\x8b\xef\xdcE\x14\xd0\x99\xc2" +
	"?\xca\xe7S\x03\xf6:\x878\xc0\x90b\x7f\xab\x0a\xa0" +
	"o\xea\xd1\xfd\x1c\xe2(C\x8a\xff\xa5*\x84\x1e\xd9Q" +
	"%4\x15\xb9\xaa|DWT\x11M\x19WT\x13\x0c" +
	"\"sB\xf7\x92\x8f9\xc4\x97\xc1VW\xba6\x82\xbe" +
	"\xc8\xa5\xaet\xd8\xfd\xfdJ\xcbr\xd9.g\xa5C\x15" +
	"D\x90\xae\xf6t_\xd1\xeb\x17\x992^\x99\x91\xae^" +
	"Ou\x0a\x04\x87\x15.\xd2\xd5\xab\xd7W\xe5|:*" +
	"\x88\x85\xf7K5\x86\xc7,|h\xb5&\xbc`\xeb\xa8" +
	"\x98\xc5\x85P\xe3\xcf\xcci^\xea\x04\xc7g\xe6ht" +
	"\xfa\xf5\xad\x9e\xc0x\x88f\x8bnI\xf39\xc4\x12\x06" +
	"3h^\x8b\xf5\xe0\"\x0eq\x1f\xf3\xddY%\x9f\"" +
	"\xb8H\x12C2p\xac#\xe7\x12r\xe1\xd8,\x88\x0d" +
	"\xafH\xddM\x03^G4\xaf\x1b9\xc4h-\xaf\xdb" +
	"4\x99[9\xc4X-\xaf\xdb5\x99c\x1c\xe2\x95Z" +
	"^w\xaf\xa8!>\xe4u\xef\xe6*\xf1\xd7#3|" +
	"$^\x97\xbb\xf0\xe97-w\xe1+\xae!w\xe1;" +
	"l\x1a\xee\xc2\x87hE\xf3o\x00\x00\x00\xff\xffR\xd1" +
	"N\xef"

func init() {
	schemas.Register(schema_c0c529faac9105c3,
		0x87da3244a36c507f,
		0x8c7e896efbf33dd7,
		0x91195b6a31dc7fec,
		0x974976c0e4871874,
		0xacd894b20e9e9dae,
		0xb36e5c1fb370347d,
		0xb92294c30ccbf9c6,
		0xd956b2e681b967dc,
		0xdc75dd2b3bb315d0,
		0xe354f5c9bb74797c,
		0xe3748c65f22dba2c,
		0xe80c1d8ad928139e,
		0xf2bb9a8c50dad870)
}
