// Code generated by capnpc-go. DO NOT EDIT.

package block_store

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	koinos "github.com/koinos/koinos-proto-golang/koinos"
	block_store "github.com/koinos/koinos-proto-golang/koinos/block_store"
	strconv "strconv"
)

type BlockStoreReservedRequest struct{ capnp.Struct }

// BlockStoreReservedRequest_TypeID is the unique identifier for the type BlockStoreReservedRequest.
const BlockStoreReservedRequest_TypeID = 0x87da3244a36c507f

func NewBlockStoreReservedRequest(s *capnp.Segment) (BlockStoreReservedRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedRequest{st}, err
}

func NewRootBlockStoreReservedRequest(s *capnp.Segment) (BlockStoreReservedRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedRequest{st}, err
}

func ReadRootBlockStoreReservedRequest(msg *capnp.Message) (BlockStoreReservedRequest, error) {
	root, err := msg.Root()
	return BlockStoreReservedRequest{root.Struct()}, err
}

func (s BlockStoreReservedRequest) String() string {
	str, _ := text.Marshal(0x87da3244a36c507f, s.Struct)
	return str
}

// BlockStoreReservedRequest_List is a list of BlockStoreReservedRequest.
type BlockStoreReservedRequest_List struct{ capnp.List }

// NewBlockStoreReservedRequest creates a new list of BlockStoreReservedRequest.
func NewBlockStoreReservedRequest_List(s *capnp.Segment, sz int32) (BlockStoreReservedRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return BlockStoreReservedRequest_List{l}, err
}

func (s BlockStoreReservedRequest_List) At(i int) BlockStoreReservedRequest {
	return BlockStoreReservedRequest{s.List.Struct(i)}
}

func (s BlockStoreReservedRequest_List) Set(i int, v BlockStoreReservedRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreReservedRequest_List) String() string {
	str, _ := text.MarshalList(0x87da3244a36c507f, s.List)
	return str
}

// BlockStoreReservedRequest_Future is a wrapper for a BlockStoreReservedRequest promised by a client call.
type BlockStoreReservedRequest_Future struct{ *capnp.Future }

func (p BlockStoreReservedRequest_Future) Struct() (BlockStoreReservedRequest, error) {
	s, err := p.Future.Struct()
	return BlockStoreReservedRequest{s}, err
}

type BlockStoreReservedResponse struct{ capnp.Struct }

// BlockStoreReservedResponse_TypeID is the unique identifier for the type BlockStoreReservedResponse.
const BlockStoreReservedResponse_TypeID = 0xe354f5c9bb74797c

func NewBlockStoreReservedResponse(s *capnp.Segment) (BlockStoreReservedResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedResponse{st}, err
}

func NewRootBlockStoreReservedResponse(s *capnp.Segment) (BlockStoreReservedResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return BlockStoreReservedResponse{st}, err
}

func ReadRootBlockStoreReservedResponse(msg *capnp.Message) (BlockStoreReservedResponse, error) {
	root, err := msg.Root()
	return BlockStoreReservedResponse{root.Struct()}, err
}

func (s BlockStoreReservedResponse) String() string {
	str, _ := text.Marshal(0xe354f5c9bb74797c, s.Struct)
	return str
}

// BlockStoreReservedResponse_List is a list of BlockStoreReservedResponse.
type BlockStoreReservedResponse_List struct{ capnp.List }

// NewBlockStoreReservedResponse creates a new list of BlockStoreReservedResponse.
func NewBlockStoreReservedResponse_List(s *capnp.Segment, sz int32) (BlockStoreReservedResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return BlockStoreReservedResponse_List{l}, err
}

func (s BlockStoreReservedResponse_List) At(i int) BlockStoreReservedResponse {
	return BlockStoreReservedResponse{s.List.Struct(i)}
}

func (s BlockStoreReservedResponse_List) Set(i int, v BlockStoreReservedResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreReservedResponse_List) String() string {
	str, _ := text.MarshalList(0xe354f5c9bb74797c, s.List)
	return str
}

// BlockStoreReservedResponse_Future is a wrapper for a BlockStoreReservedResponse promised by a client call.
type BlockStoreReservedResponse_Future struct{ *capnp.Future }

func (p BlockStoreReservedResponse_Future) Struct() (BlockStoreReservedResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreReservedResponse{s}, err
}

type GetBlocksByIDRequest struct{ capnp.Struct }

// GetBlocksByIDRequest_TypeID is the unique identifier for the type GetBlocksByIDRequest.
const GetBlocksByIDRequest_TypeID = 0x91195b6a31dc7fec

func NewGetBlocksByIDRequest(s *capnp.Segment) (GetBlocksByIDRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetBlocksByIDRequest{st}, err
}

func NewRootGetBlocksByIDRequest(s *capnp.Segment) (GetBlocksByIDRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetBlocksByIDRequest{st}, err
}

func ReadRootGetBlocksByIDRequest(msg *capnp.Message) (GetBlocksByIDRequest, error) {
	root, err := msg.Root()
	return GetBlocksByIDRequest{root.Struct()}, err
}

func (s GetBlocksByIDRequest) String() string {
	str, _ := text.Marshal(0x91195b6a31dc7fec, s.Struct)
	return str
}

func (s GetBlocksByIDRequest) BlockID() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s GetBlocksByIDRequest) HasBlockID() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByIDRequest) SetBlockID(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockID sets the blockID field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s GetBlocksByIDRequest) NewBlockID(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s GetBlocksByIDRequest) ReturnBlockBlob() bool {
	return s.Struct.Bit(0)
}

func (s GetBlocksByIDRequest) SetReturnBlockBlob(v bool) {
	s.Struct.SetBit(0, v)
}

func (s GetBlocksByIDRequest) ReturnReceiptBlob() bool {
	return s.Struct.Bit(1)
}

func (s GetBlocksByIDRequest) SetReturnReceiptBlob(v bool) {
	s.Struct.SetBit(1, v)
}

// GetBlocksByIDRequest_List is a list of GetBlocksByIDRequest.
type GetBlocksByIDRequest_List struct{ capnp.List }

// NewGetBlocksByIDRequest creates a new list of GetBlocksByIDRequest.
func NewGetBlocksByIDRequest_List(s *capnp.Segment, sz int32) (GetBlocksByIDRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return GetBlocksByIDRequest_List{l}, err
}

func (s GetBlocksByIDRequest_List) At(i int) GetBlocksByIDRequest {
	return GetBlocksByIDRequest{s.List.Struct(i)}
}

func (s GetBlocksByIDRequest_List) Set(i int, v GetBlocksByIDRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByIDRequest_List) String() string {
	str, _ := text.MarshalList(0x91195b6a31dc7fec, s.List)
	return str
}

// GetBlocksByIDRequest_Future is a wrapper for a GetBlocksByIDRequest promised by a client call.
type GetBlocksByIDRequest_Future struct{ *capnp.Future }

func (p GetBlocksByIDRequest_Future) Struct() (GetBlocksByIDRequest, error) {
	s, err := p.Future.Struct()
	return GetBlocksByIDRequest{s}, err
}

type GetBlocksByIDResponse struct{ capnp.Struct }

// GetBlocksByIDResponse_TypeID is the unique identifier for the type GetBlocksByIDResponse.
const GetBlocksByIDResponse_TypeID = 0xd956b2e681b967dc

func NewGetBlocksByIDResponse(s *capnp.Segment) (GetBlocksByIDResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByIDResponse{st}, err
}

func NewRootGetBlocksByIDResponse(s *capnp.Segment) (GetBlocksByIDResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByIDResponse{st}, err
}

func ReadRootGetBlocksByIDResponse(msg *capnp.Message) (GetBlocksByIDResponse, error) {
	root, err := msg.Root()
	return GetBlocksByIDResponse{root.Struct()}, err
}

func (s GetBlocksByIDResponse) String() string {
	str, _ := text.Marshal(0xd956b2e681b967dc, s.Struct)
	return str
}

func (s GetBlocksByIDResponse) BlockItems() (block_store.BlockItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem_List{List: p.List()}, err
}

func (s GetBlocksByIDResponse) HasBlockItems() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByIDResponse) SetBlockItems(v block_store.BlockItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockItems sets the blockItems field to a newly
// allocated block_store.BlockItem_List, preferring placement in s's segment.
func (s GetBlocksByIDResponse) NewBlockItems(n int32) (block_store.BlockItem_List, error) {
	l, err := block_store.NewBlockItem_List(s.Struct.Segment(), n)
	if err != nil {
		return block_store.BlockItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetBlocksByIDResponse_List is a list of GetBlocksByIDResponse.
type GetBlocksByIDResponse_List struct{ capnp.List }

// NewGetBlocksByIDResponse creates a new list of GetBlocksByIDResponse.
func NewGetBlocksByIDResponse_List(s *capnp.Segment, sz int32) (GetBlocksByIDResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetBlocksByIDResponse_List{l}, err
}

func (s GetBlocksByIDResponse_List) At(i int) GetBlocksByIDResponse {
	return GetBlocksByIDResponse{s.List.Struct(i)}
}

func (s GetBlocksByIDResponse_List) Set(i int, v GetBlocksByIDResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByIDResponse_List) String() string {
	str, _ := text.MarshalList(0xd956b2e681b967dc, s.List)
	return str
}

// GetBlocksByIDResponse_Future is a wrapper for a GetBlocksByIDResponse promised by a client call.
type GetBlocksByIDResponse_Future struct{ *capnp.Future }

func (p GetBlocksByIDResponse_Future) Struct() (GetBlocksByIDResponse, error) {
	s, err := p.Future.Struct()
	return GetBlocksByIDResponse{s}, err
}

type GetBlocksByHeightRequest struct{ capnp.Struct }

// GetBlocksByHeightRequest_TypeID is the unique identifier for the type GetBlocksByHeightRequest.
const GetBlocksByHeightRequest_TypeID = 0xacd894b20e9e9dae

func NewGetBlocksByHeightRequest(s *capnp.Segment) (GetBlocksByHeightRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return GetBlocksByHeightRequest{st}, err
}

func NewRootGetBlocksByHeightRequest(s *capnp.Segment) (GetBlocksByHeightRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return GetBlocksByHeightRequest{st}, err
}

func ReadRootGetBlocksByHeightRequest(msg *capnp.Message) (GetBlocksByHeightRequest, error) {
	root, err := msg.Root()
	return GetBlocksByHeightRequest{root.Struct()}, err
}

func (s GetBlocksByHeightRequest) String() string {
	str, _ := text.Marshal(0xacd894b20e9e9dae, s.Struct)
	return str
}

func (s GetBlocksByHeightRequest) HeadBlockID() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s GetBlocksByHeightRequest) HasHeadBlockID() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByHeightRequest) SetHeadBlockID(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s GetBlocksByHeightRequest) AncestorStartHeight() uint32 {
	return s.Struct.Uint32(0)
}

func (s GetBlocksByHeightRequest) SetAncestorStartHeight(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s GetBlocksByHeightRequest) NumBlocks() uint32 {
	return s.Struct.Uint32(4)
}

func (s GetBlocksByHeightRequest) SetNumBlocks(v uint32) {
	s.Struct.SetUint32(4, v)
}

func (s GetBlocksByHeightRequest) ReturnBlock() bool {
	return s.Struct.Bit(64)
}

func (s GetBlocksByHeightRequest) SetReturnBlock(v bool) {
	s.Struct.SetBit(64, v)
}

func (s GetBlocksByHeightRequest) ReturnReceipt() bool {
	return s.Struct.Bit(65)
}

func (s GetBlocksByHeightRequest) SetReturnReceipt(v bool) {
	s.Struct.SetBit(65, v)
}

// GetBlocksByHeightRequest_List is a list of GetBlocksByHeightRequest.
type GetBlocksByHeightRequest_List struct{ capnp.List }

// NewGetBlocksByHeightRequest creates a new list of GetBlocksByHeightRequest.
func NewGetBlocksByHeightRequest_List(s *capnp.Segment, sz int32) (GetBlocksByHeightRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return GetBlocksByHeightRequest_List{l}, err
}

func (s GetBlocksByHeightRequest_List) At(i int) GetBlocksByHeightRequest {
	return GetBlocksByHeightRequest{s.List.Struct(i)}
}

func (s GetBlocksByHeightRequest_List) Set(i int, v GetBlocksByHeightRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByHeightRequest_List) String() string {
	str, _ := text.MarshalList(0xacd894b20e9e9dae, s.List)
	return str
}

// GetBlocksByHeightRequest_Future is a wrapper for a GetBlocksByHeightRequest promised by a client call.
type GetBlocksByHeightRequest_Future struct{ *capnp.Future }

func (p GetBlocksByHeightRequest_Future) Struct() (GetBlocksByHeightRequest, error) {
	s, err := p.Future.Struct()
	return GetBlocksByHeightRequest{s}, err
}

type GetBlocksByHeightResponse struct{ capnp.Struct }

// GetBlocksByHeightResponse_TypeID is the unique identifier for the type GetBlocksByHeightResponse.
const GetBlocksByHeightResponse_TypeID = 0x974976c0e4871874

func NewGetBlocksByHeightResponse(s *capnp.Segment) (GetBlocksByHeightResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByHeightResponse{st}, err
}

func NewRootGetBlocksByHeightResponse(s *capnp.Segment) (GetBlocksByHeightResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetBlocksByHeightResponse{st}, err
}

func ReadRootGetBlocksByHeightResponse(msg *capnp.Message) (GetBlocksByHeightResponse, error) {
	root, err := msg.Root()
	return GetBlocksByHeightResponse{root.Struct()}, err
}

func (s GetBlocksByHeightResponse) String() string {
	str, _ := text.Marshal(0x974976c0e4871874, s.Struct)
	return str
}

func (s GetBlocksByHeightResponse) BlockItems() (block_store.BlockItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem_List{List: p.List()}, err
}

func (s GetBlocksByHeightResponse) HasBlockItems() bool {
	return s.Struct.HasPtr(0)
}

func (s GetBlocksByHeightResponse) SetBlockItems(v block_store.BlockItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBlockItems sets the blockItems field to a newly
// allocated block_store.BlockItem_List, preferring placement in s's segment.
func (s GetBlocksByHeightResponse) NewBlockItems(n int32) (block_store.BlockItem_List, error) {
	l, err := block_store.NewBlockItem_List(s.Struct.Segment(), n)
	if err != nil {
		return block_store.BlockItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetBlocksByHeightResponse_List is a list of GetBlocksByHeightResponse.
type GetBlocksByHeightResponse_List struct{ capnp.List }

// NewGetBlocksByHeightResponse creates a new list of GetBlocksByHeightResponse.
func NewGetBlocksByHeightResponse_List(s *capnp.Segment, sz int32) (GetBlocksByHeightResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetBlocksByHeightResponse_List{l}, err
}

func (s GetBlocksByHeightResponse_List) At(i int) GetBlocksByHeightResponse {
	return GetBlocksByHeightResponse{s.List.Struct(i)}
}

func (s GetBlocksByHeightResponse_List) Set(i int, v GetBlocksByHeightResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetBlocksByHeightResponse_List) String() string {
	str, _ := text.MarshalList(0x974976c0e4871874, s.List)
	return str
}

// GetBlocksByHeightResponse_Future is a wrapper for a GetBlocksByHeightResponse promised by a client call.
type GetBlocksByHeightResponse_Future struct{ *capnp.Future }

func (p GetBlocksByHeightResponse_Future) Struct() (GetBlocksByHeightResponse, error) {
	s, err := p.Future.Struct()
	return GetBlocksByHeightResponse{s}, err
}

type AddBlockRequest struct{ capnp.Struct }

// AddBlockRequest_TypeID is the unique identifier for the type AddBlockRequest.
const AddBlockRequest_TypeID = 0xb92294c30ccbf9c6

func NewAddBlockRequest(s *capnp.Segment) (AddBlockRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddBlockRequest{st}, err
}

func NewRootAddBlockRequest(s *capnp.Segment) (AddBlockRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AddBlockRequest{st}, err
}

func ReadRootAddBlockRequest(msg *capnp.Message) (AddBlockRequest, error) {
	root, err := msg.Root()
	return AddBlockRequest{root.Struct()}, err
}

func (s AddBlockRequest) String() string {
	str, _ := text.Marshal(0xb92294c30ccbf9c6, s.Struct)
	return str
}

func (s AddBlockRequest) BlockToAdd() (block_store.BlockItem, error) {
	p, err := s.Struct.Ptr(0)
	return block_store.BlockItem{Struct: p.Struct()}, err
}

func (s AddBlockRequest) HasBlockToAdd() bool {
	return s.Struct.HasPtr(0)
}

func (s AddBlockRequest) SetBlockToAdd(v block_store.BlockItem) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockToAdd sets the blockToAdd field to a newly
// allocated block_store.BlockItem struct, preferring placement in s's segment.
func (s AddBlockRequest) NewBlockToAdd() (block_store.BlockItem, error) {
	ss, err := block_store.NewBlockItem(s.Struct.Segment())
	if err != nil {
		return block_store.BlockItem{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// AddBlockRequest_List is a list of AddBlockRequest.
type AddBlockRequest_List struct{ capnp.List }

// NewAddBlockRequest creates a new list of AddBlockRequest.
func NewAddBlockRequest_List(s *capnp.Segment, sz int32) (AddBlockRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AddBlockRequest_List{l}, err
}

func (s AddBlockRequest_List) At(i int) AddBlockRequest { return AddBlockRequest{s.List.Struct(i)} }

func (s AddBlockRequest_List) Set(i int, v AddBlockRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AddBlockRequest_List) String() string {
	str, _ := text.MarshalList(0xb92294c30ccbf9c6, s.List)
	return str
}

// AddBlockRequest_Future is a wrapper for a AddBlockRequest promised by a client call.
type AddBlockRequest_Future struct{ *capnp.Future }

func (p AddBlockRequest_Future) Struct() (AddBlockRequest, error) {
	s, err := p.Future.Struct()
	return AddBlockRequest{s}, err
}

func (p AddBlockRequest_Future) BlockToAdd() block_store.BlockItem_Future {
	return block_store.BlockItem_Future{Future: p.Future.Field(0, nil)}
}

type AddBlockResponse struct{ capnp.Struct }

// AddBlockResponse_TypeID is the unique identifier for the type AddBlockResponse.
const AddBlockResponse_TypeID = 0xe3748c65f22dba2c

func NewAddBlockResponse(s *capnp.Segment) (AddBlockResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AddBlockResponse{st}, err
}

func NewRootAddBlockResponse(s *capnp.Segment) (AddBlockResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return AddBlockResponse{st}, err
}

func ReadRootAddBlockResponse(msg *capnp.Message) (AddBlockResponse, error) {
	root, err := msg.Root()
	return AddBlockResponse{root.Struct()}, err
}

func (s AddBlockResponse) String() string {
	str, _ := text.Marshal(0xe3748c65f22dba2c, s.Struct)
	return str
}

// AddBlockResponse_List is a list of AddBlockResponse.
type AddBlockResponse_List struct{ capnp.List }

// NewAddBlockResponse creates a new list of AddBlockResponse.
func NewAddBlockResponse_List(s *capnp.Segment, sz int32) (AddBlockResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return AddBlockResponse_List{l}, err
}

func (s AddBlockResponse_List) At(i int) AddBlockResponse { return AddBlockResponse{s.List.Struct(i)} }

func (s AddBlockResponse_List) Set(i int, v AddBlockResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AddBlockResponse_List) String() string {
	str, _ := text.MarshalList(0xe3748c65f22dba2c, s.List)
	return str
}

// AddBlockResponse_Future is a wrapper for a AddBlockResponse promised by a client call.
type AddBlockResponse_Future struct{ *capnp.Future }

func (p AddBlockResponse_Future) Struct() (AddBlockResponse, error) {
	s, err := p.Future.Struct()
	return AddBlockResponse{s}, err
}

type GetHighestBlockRequest struct{ capnp.Struct }

// GetHighestBlockRequest_TypeID is the unique identifier for the type GetHighestBlockRequest.
const GetHighestBlockRequest_TypeID = 0x8c7e896efbf33dd7

func NewGetHighestBlockRequest(s *capnp.Segment) (GetHighestBlockRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GetHighestBlockRequest{st}, err
}

func NewRootGetHighestBlockRequest(s *capnp.Segment) (GetHighestBlockRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GetHighestBlockRequest{st}, err
}

func ReadRootGetHighestBlockRequest(msg *capnp.Message) (GetHighestBlockRequest, error) {
	root, err := msg.Root()
	return GetHighestBlockRequest{root.Struct()}, err
}

func (s GetHighestBlockRequest) String() string {
	str, _ := text.Marshal(0x8c7e896efbf33dd7, s.Struct)
	return str
}

// GetHighestBlockRequest_List is a list of GetHighestBlockRequest.
type GetHighestBlockRequest_List struct{ capnp.List }

// NewGetHighestBlockRequest creates a new list of GetHighestBlockRequest.
func NewGetHighestBlockRequest_List(s *capnp.Segment, sz int32) (GetHighestBlockRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GetHighestBlockRequest_List{l}, err
}

func (s GetHighestBlockRequest_List) At(i int) GetHighestBlockRequest {
	return GetHighestBlockRequest{s.List.Struct(i)}
}

func (s GetHighestBlockRequest_List) Set(i int, v GetHighestBlockRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetHighestBlockRequest_List) String() string {
	str, _ := text.MarshalList(0x8c7e896efbf33dd7, s.List)
	return str
}

// GetHighestBlockRequest_Future is a wrapper for a GetHighestBlockRequest promised by a client call.
type GetHighestBlockRequest_Future struct{ *capnp.Future }

func (p GetHighestBlockRequest_Future) Struct() (GetHighestBlockRequest, error) {
	s, err := p.Future.Struct()
	return GetHighestBlockRequest{s}, err
}

type GetHighestBlockResponse struct{ capnp.Struct }

// GetHighestBlockResponse_TypeID is the unique identifier for the type GetHighestBlockResponse.
const GetHighestBlockResponse_TypeID = 0xb36e5c1fb370347d

func NewGetHighestBlockResponse(s *capnp.Segment) (GetHighestBlockResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetHighestBlockResponse{st}, err
}

func NewRootGetHighestBlockResponse(s *capnp.Segment) (GetHighestBlockResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetHighestBlockResponse{st}, err
}

func ReadRootGetHighestBlockResponse(msg *capnp.Message) (GetHighestBlockResponse, error) {
	root, err := msg.Root()
	return GetHighestBlockResponse{root.Struct()}, err
}

func (s GetHighestBlockResponse) String() string {
	str, _ := text.Marshal(0xb36e5c1fb370347d, s.Struct)
	return str
}

func (s GetHighestBlockResponse) Topology() (koinos.BlockTopology, error) {
	p, err := s.Struct.Ptr(0)
	return koinos.BlockTopology{Struct: p.Struct()}, err
}

func (s GetHighestBlockResponse) HasTopology() bool {
	return s.Struct.HasPtr(0)
}

func (s GetHighestBlockResponse) SetTopology(v koinos.BlockTopology) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTopology sets the topology field to a newly
// allocated koinos.BlockTopology struct, preferring placement in s's segment.
func (s GetHighestBlockResponse) NewTopology() (koinos.BlockTopology, error) {
	ss, err := koinos.NewBlockTopology(s.Struct.Segment())
	if err != nil {
		return koinos.BlockTopology{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// GetHighestBlockResponse_List is a list of GetHighestBlockResponse.
type GetHighestBlockResponse_List struct{ capnp.List }

// NewGetHighestBlockResponse creates a new list of GetHighestBlockResponse.
func NewGetHighestBlockResponse_List(s *capnp.Segment, sz int32) (GetHighestBlockResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetHighestBlockResponse_List{l}, err
}

func (s GetHighestBlockResponse_List) At(i int) GetHighestBlockResponse {
	return GetHighestBlockResponse{s.List.Struct(i)}
}

func (s GetHighestBlockResponse_List) Set(i int, v GetHighestBlockResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetHighestBlockResponse_List) String() string {
	str, _ := text.MarshalList(0xb36e5c1fb370347d, s.List)
	return str
}

// GetHighestBlockResponse_Future is a wrapper for a GetHighestBlockResponse promised by a client call.
type GetHighestBlockResponse_Future struct{ *capnp.Future }

func (p GetHighestBlockResponse_Future) Struct() (GetHighestBlockResponse, error) {
	s, err := p.Future.Struct()
	return GetHighestBlockResponse{s}, err
}

func (p GetHighestBlockResponse_Future) Topology() koinos.BlockTopology_Future {
	return koinos.BlockTopology_Future{Future: p.Future.Field(0, nil)}
}

type BlockStoreErrorResponse struct{ capnp.Struct }

// BlockStoreErrorResponse_TypeID is the unique identifier for the type BlockStoreErrorResponse.
const BlockStoreErrorResponse_TypeID = 0xe80c1d8ad928139e

func NewBlockStoreErrorResponse(s *capnp.Segment) (BlockStoreErrorResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return BlockStoreErrorResponse{st}, err
}

func NewRootBlockStoreErrorResponse(s *capnp.Segment) (BlockStoreErrorResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return BlockStoreErrorResponse{st}, err
}

func ReadRootBlockStoreErrorResponse(msg *capnp.Message) (BlockStoreErrorResponse, error) {
	root, err := msg.Root()
	return BlockStoreErrorResponse{root.Struct()}, err
}

func (s BlockStoreErrorResponse) String() string {
	str, _ := text.Marshal(0xe80c1d8ad928139e, s.Struct)
	return str
}

func (s BlockStoreErrorResponse) ErrorText() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s BlockStoreErrorResponse) HasErrorText() bool {
	return s.Struct.HasPtr(0)
}

func (s BlockStoreErrorResponse) ErrorTextBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s BlockStoreErrorResponse) SetErrorText(v string) error {
	return s.Struct.SetText(0, v)
}

func (s BlockStoreErrorResponse) ErrorData() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s BlockStoreErrorResponse) HasErrorData() bool {
	return s.Struct.HasPtr(1)
}

func (s BlockStoreErrorResponse) ErrorDataBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s BlockStoreErrorResponse) SetErrorData(v string) error {
	return s.Struct.SetText(1, v)
}

// BlockStoreErrorResponse_List is a list of BlockStoreErrorResponse.
type BlockStoreErrorResponse_List struct{ capnp.List }

// NewBlockStoreErrorResponse creates a new list of BlockStoreErrorResponse.
func NewBlockStoreErrorResponse_List(s *capnp.Segment, sz int32) (BlockStoreErrorResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return BlockStoreErrorResponse_List{l}, err
}

func (s BlockStoreErrorResponse_List) At(i int) BlockStoreErrorResponse {
	return BlockStoreErrorResponse{s.List.Struct(i)}
}

func (s BlockStoreErrorResponse_List) Set(i int, v BlockStoreErrorResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreErrorResponse_List) String() string {
	str, _ := text.MarshalList(0xe80c1d8ad928139e, s.List)
	return str
}

// BlockStoreErrorResponse_Future is a wrapper for a BlockStoreErrorResponse promised by a client call.
type BlockStoreErrorResponse_Future struct{ *capnp.Future }

func (p BlockStoreErrorResponse_Future) Struct() (BlockStoreErrorResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreErrorResponse{s}, err
}

type BlockStoreRequest struct{ capnp.Struct }
type BlockStoreRequest_Which uint16

const (
	BlockStoreRequest_Which_blockStoreReserved BlockStoreRequest_Which = 0
	BlockStoreRequest_Which_getBlocksByID      BlockStoreRequest_Which = 1
	BlockStoreRequest_Which_getBlocksByHeight  BlockStoreRequest_Which = 2
	BlockStoreRequest_Which_addBlock           BlockStoreRequest_Which = 3
	BlockStoreRequest_Which_getHighestBlock    BlockStoreRequest_Which = 4
)

func (w BlockStoreRequest_Which) String() string {
	const s = "blockStoreReservedgetBlocksByIDgetBlocksByHeightaddBlockgetHighestBlock"
	switch w {
	case BlockStoreRequest_Which_blockStoreReserved:
		return s[0:18]
	case BlockStoreRequest_Which_getBlocksByID:
		return s[18:31]
	case BlockStoreRequest_Which_getBlocksByHeight:
		return s[31:48]
	case BlockStoreRequest_Which_addBlock:
		return s[48:56]
	case BlockStoreRequest_Which_getHighestBlock:
		return s[56:71]

	}
	return "BlockStoreRequest_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// BlockStoreRequest_TypeID is the unique identifier for the type BlockStoreRequest.
const BlockStoreRequest_TypeID = 0xf2bb9a8c50dad870

func NewBlockStoreRequest(s *capnp.Segment) (BlockStoreRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreRequest{st}, err
}

func NewRootBlockStoreRequest(s *capnp.Segment) (BlockStoreRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreRequest{st}, err
}

func ReadRootBlockStoreRequest(msg *capnp.Message) (BlockStoreRequest, error) {
	root, err := msg.Root()
	return BlockStoreRequest{root.Struct()}, err
}

func (s BlockStoreRequest) String() string {
	str, _ := text.Marshal(0xf2bb9a8c50dad870, s.Struct)
	return str
}

func (s BlockStoreRequest) Which() BlockStoreRequest_Which {
	return BlockStoreRequest_Which(s.Struct.Uint16(0))
}
func (s BlockStoreRequest) BlockStoreReserved() (BlockStoreReservedRequest, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != blockStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreReservedRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasBlockStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetBlockStoreReserved(v BlockStoreReservedRequest) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockStoreReserved sets the blockStoreReserved field to a newly
// allocated BlockStoreReservedRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewBlockStoreReserved() (BlockStoreReservedRequest, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewBlockStoreReservedRequest(s.Struct.Segment())
	if err != nil {
		return BlockStoreReservedRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetBlocksByID() (GetBlocksByIDRequest, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != getBlocksByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByIDRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetBlocksByID() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetBlocksByID(v GetBlocksByIDRequest) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByID sets the getBlocksByID field to a newly
// allocated GetBlocksByIDRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetBlocksByID() (GetBlocksByIDRequest, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewGetBlocksByIDRequest(s.Struct.Segment())
	if err != nil {
		return GetBlocksByIDRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetBlocksByHeight() (GetBlocksByHeightRequest, error) {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != getBlocksByHeight")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByHeightRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetBlocksByHeight() bool {
	if s.Struct.Uint16(0) != 2 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetBlocksByHeight(v GetBlocksByHeightRequest) error {
	s.Struct.SetUint16(0, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByHeight sets the getBlocksByHeight field to a newly
// allocated GetBlocksByHeightRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetBlocksByHeight() (GetBlocksByHeightRequest, error) {
	s.Struct.SetUint16(0, 2)
	ss, err := NewGetBlocksByHeightRequest(s.Struct.Segment())
	if err != nil {
		return GetBlocksByHeightRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) AddBlock() (AddBlockRequest, error) {
	if s.Struct.Uint16(0) != 3 {
		panic("Which() != addBlock")
	}
	p, err := s.Struct.Ptr(0)
	return AddBlockRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasAddBlock() bool {
	if s.Struct.Uint16(0) != 3 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetAddBlock(v AddBlockRequest) error {
	s.Struct.SetUint16(0, 3)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddBlock sets the addBlock field to a newly
// allocated AddBlockRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewAddBlock() (AddBlockRequest, error) {
	s.Struct.SetUint16(0, 3)
	ss, err := NewAddBlockRequest(s.Struct.Segment())
	if err != nil {
		return AddBlockRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreRequest) GetHighestBlock() (GetHighestBlockRequest, error) {
	if s.Struct.Uint16(0) != 4 {
		panic("Which() != getHighestBlock")
	}
	p, err := s.Struct.Ptr(0)
	return GetHighestBlockRequest{Struct: p.Struct()}, err
}

func (s BlockStoreRequest) HasGetHighestBlock() bool {
	if s.Struct.Uint16(0) != 4 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreRequest) SetGetHighestBlock(v GetHighestBlockRequest) error {
	s.Struct.SetUint16(0, 4)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetHighestBlock sets the getHighestBlock field to a newly
// allocated GetHighestBlockRequest struct, preferring placement in s's segment.
func (s BlockStoreRequest) NewGetHighestBlock() (GetHighestBlockRequest, error) {
	s.Struct.SetUint16(0, 4)
	ss, err := NewGetHighestBlockRequest(s.Struct.Segment())
	if err != nil {
		return GetHighestBlockRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// BlockStoreRequest_List is a list of BlockStoreRequest.
type BlockStoreRequest_List struct{ capnp.List }

// NewBlockStoreRequest creates a new list of BlockStoreRequest.
func NewBlockStoreRequest_List(s *capnp.Segment, sz int32) (BlockStoreRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BlockStoreRequest_List{l}, err
}

func (s BlockStoreRequest_List) At(i int) BlockStoreRequest {
	return BlockStoreRequest{s.List.Struct(i)}
}

func (s BlockStoreRequest_List) Set(i int, v BlockStoreRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreRequest_List) String() string {
	str, _ := text.MarshalList(0xf2bb9a8c50dad870, s.List)
	return str
}

// BlockStoreRequest_Future is a wrapper for a BlockStoreRequest promised by a client call.
type BlockStoreRequest_Future struct{ *capnp.Future }

func (p BlockStoreRequest_Future) Struct() (BlockStoreRequest, error) {
	s, err := p.Future.Struct()
	return BlockStoreRequest{s}, err
}

func (p BlockStoreRequest_Future) BlockStoreReserved() BlockStoreReservedRequest_Future {
	return BlockStoreReservedRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetBlocksByID() GetBlocksByIDRequest_Future {
	return GetBlocksByIDRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetBlocksByHeight() GetBlocksByHeightRequest_Future {
	return GetBlocksByHeightRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) AddBlock() AddBlockRequest_Future {
	return AddBlockRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreRequest_Future) GetHighestBlock() GetHighestBlockRequest_Future {
	return GetHighestBlockRequest_Future{Future: p.Future.Field(0, nil)}
}

type BlockStoreResponse struct{ capnp.Struct }
type BlockStoreResponse_Which uint16

const (
	BlockStoreResponse_Which_blockStoreReserved BlockStoreResponse_Which = 0
	BlockStoreResponse_Which_errorResponse      BlockStoreResponse_Which = 1
	BlockStoreResponse_Which_getBlocksByID      BlockStoreResponse_Which = 2
	BlockStoreResponse_Which_getBlocksByHeight  BlockStoreResponse_Which = 3
	BlockStoreResponse_Which_addBlock           BlockStoreResponse_Which = 4
	BlockStoreResponse_Which_getHighestBlock    BlockStoreResponse_Which = 5
)

func (w BlockStoreResponse_Which) String() string {
	const s = "blockStoreReservederrorResponsegetBlocksByIDgetBlocksByHeightaddBlockgetHighestBlock"
	switch w {
	case BlockStoreResponse_Which_blockStoreReserved:
		return s[0:18]
	case BlockStoreResponse_Which_errorResponse:
		return s[18:31]
	case BlockStoreResponse_Which_getBlocksByID:
		return s[31:44]
	case BlockStoreResponse_Which_getBlocksByHeight:
		return s[44:61]
	case BlockStoreResponse_Which_addBlock:
		return s[61:69]
	case BlockStoreResponse_Which_getHighestBlock:
		return s[69:84]

	}
	return "BlockStoreResponse_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// BlockStoreResponse_TypeID is the unique identifier for the type BlockStoreResponse.
const BlockStoreResponse_TypeID = 0xdc75dd2b3bb315d0

func NewBlockStoreResponse(s *capnp.Segment) (BlockStoreResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreResponse{st}, err
}

func NewRootBlockStoreResponse(s *capnp.Segment) (BlockStoreResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BlockStoreResponse{st}, err
}

func ReadRootBlockStoreResponse(msg *capnp.Message) (BlockStoreResponse, error) {
	root, err := msg.Root()
	return BlockStoreResponse{root.Struct()}, err
}

func (s BlockStoreResponse) String() string {
	str, _ := text.Marshal(0xdc75dd2b3bb315d0, s.Struct)
	return str
}

func (s BlockStoreResponse) Which() BlockStoreResponse_Which {
	return BlockStoreResponse_Which(s.Struct.Uint16(0))
}
func (s BlockStoreResponse) BlockStoreReserved() (BlockStoreReservedResponse, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != blockStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreReservedResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasBlockStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetBlockStoreReserved(v BlockStoreReservedResponse) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBlockStoreReserved sets the blockStoreReserved field to a newly
// allocated BlockStoreReservedResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewBlockStoreReserved() (BlockStoreReservedResponse, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewBlockStoreReservedResponse(s.Struct.Segment())
	if err != nil {
		return BlockStoreReservedResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) ErrorResponse() (BlockStoreErrorResponse, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != errorResponse")
	}
	p, err := s.Struct.Ptr(0)
	return BlockStoreErrorResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasErrorResponse() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetErrorResponse(v BlockStoreErrorResponse) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewErrorResponse sets the errorResponse field to a newly
// allocated BlockStoreErrorResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewErrorResponse() (BlockStoreErrorResponse, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewBlockStoreErrorResponse(s.Struct.Segment())
	if err != nil {
		return BlockStoreErrorResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetBlocksByID() (GetBlocksByIDResponse, error) {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != getBlocksByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByIDResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetBlocksByID() bool {
	if s.Struct.Uint16(0) != 2 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetBlocksByID(v GetBlocksByIDResponse) error {
	s.Struct.SetUint16(0, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByID sets the getBlocksByID field to a newly
// allocated GetBlocksByIDResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetBlocksByID() (GetBlocksByIDResponse, error) {
	s.Struct.SetUint16(0, 2)
	ss, err := NewGetBlocksByIDResponse(s.Struct.Segment())
	if err != nil {
		return GetBlocksByIDResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetBlocksByHeight() (GetBlocksByHeightResponse, error) {
	if s.Struct.Uint16(0) != 3 {
		panic("Which() != getBlocksByHeight")
	}
	p, err := s.Struct.Ptr(0)
	return GetBlocksByHeightResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetBlocksByHeight() bool {
	if s.Struct.Uint16(0) != 3 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetBlocksByHeight(v GetBlocksByHeightResponse) error {
	s.Struct.SetUint16(0, 3)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetBlocksByHeight sets the getBlocksByHeight field to a newly
// allocated GetBlocksByHeightResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetBlocksByHeight() (GetBlocksByHeightResponse, error) {
	s.Struct.SetUint16(0, 3)
	ss, err := NewGetBlocksByHeightResponse(s.Struct.Segment())
	if err != nil {
		return GetBlocksByHeightResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) AddBlock() (AddBlockResponse, error) {
	if s.Struct.Uint16(0) != 4 {
		panic("Which() != addBlock")
	}
	p, err := s.Struct.Ptr(0)
	return AddBlockResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasAddBlock() bool {
	if s.Struct.Uint16(0) != 4 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetAddBlock(v AddBlockResponse) error {
	s.Struct.SetUint16(0, 4)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAddBlock sets the addBlock field to a newly
// allocated AddBlockResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewAddBlock() (AddBlockResponse, error) {
	s.Struct.SetUint16(0, 4)
	ss, err := NewAddBlockResponse(s.Struct.Segment())
	if err != nil {
		return AddBlockResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s BlockStoreResponse) GetHighestBlock() (GetHighestBlockResponse, error) {
	if s.Struct.Uint16(0) != 5 {
		panic("Which() != getHighestBlock")
	}
	p, err := s.Struct.Ptr(0)
	return GetHighestBlockResponse{Struct: p.Struct()}, err
}

func (s BlockStoreResponse) HasGetHighestBlock() bool {
	if s.Struct.Uint16(0) != 5 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s BlockStoreResponse) SetGetHighestBlock(v GetHighestBlockResponse) error {
	s.Struct.SetUint16(0, 5)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetHighestBlock sets the getHighestBlock field to a newly
// allocated GetHighestBlockResponse struct, preferring placement in s's segment.
func (s BlockStoreResponse) NewGetHighestBlock() (GetHighestBlockResponse, error) {
	s.Struct.SetUint16(0, 5)
	ss, err := NewGetHighestBlockResponse(s.Struct.Segment())
	if err != nil {
		return GetHighestBlockResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// BlockStoreResponse_List is a list of BlockStoreResponse.
type BlockStoreResponse_List struct{ capnp.List }

// NewBlockStoreResponse creates a new list of BlockStoreResponse.
func NewBlockStoreResponse_List(s *capnp.Segment, sz int32) (BlockStoreResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BlockStoreResponse_List{l}, err
}

func (s BlockStoreResponse_List) At(i int) BlockStoreResponse {
	return BlockStoreResponse{s.List.Struct(i)}
}

func (s BlockStoreResponse_List) Set(i int, v BlockStoreResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s BlockStoreResponse_List) String() string {
	str, _ := text.MarshalList(0xdc75dd2b3bb315d0, s.List)
	return str
}

// BlockStoreResponse_Future is a wrapper for a BlockStoreResponse promised by a client call.
type BlockStoreResponse_Future struct{ *capnp.Future }

func (p BlockStoreResponse_Future) Struct() (BlockStoreResponse, error) {
	s, err := p.Future.Struct()
	return BlockStoreResponse{s}, err
}

func (p BlockStoreResponse_Future) BlockStoreReserved() BlockStoreReservedResponse_Future {
	return BlockStoreReservedResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) ErrorResponse() BlockStoreErrorResponse_Future {
	return BlockStoreErrorResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetBlocksByID() GetBlocksByIDResponse_Future {
	return GetBlocksByIDResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetBlocksByHeight() GetBlocksByHeightResponse_Future {
	return GetBlocksByHeightResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) AddBlock() AddBlockResponse_Future {
	return AddBlockResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p BlockStoreResponse_Future) GetHighestBlock() GetHighestBlockResponse_Future {
	return GetHighestBlockResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_c0c529faac9105c3 = "x\xda\xb4\x96]lT\xc5\x1b\xc6\xdfgf\x97]\xda" +
	"\xb3\xfc\xf7\xe4\xf4\x9f\x94\x0b\xb2\xc1\x18B#\x0a\xb5x" +
	"\xe1\x07\x816m\xa4$&\x9d\x05?P\x12\xb2\xdd\x9d" +
	"\xb4\xb5e\xcfa\xcf)Jb\xe5#1\x88\xe9MI" +
	"\x13#\x11bT\x12\x8c\xa0\x08\x92\xf0\xe1\x05\x8a\x88\xf8" +
	"\x91h\xa2\x11\x08\\\x80b\xd4\x98hj\xb8\x10\xc41" +
	"s\xf6\x9c\xb3\xcbvi,\x89w\xbbs\x9ey\xe7\x9d" +
	"\xf7\xf9\xcd;\xb3\xe8\xfe\xd82\xd6\x1a\xdf\x96&\x12'" +
	"\xe23\xd4\xa6\x9e\xa17:\xef=\xbf\x8d\xccyP'" +
	"\xe3c\xfb\xae\xb5\x9c:A\xb1\x04Q[K\x921\xab" +
	"+\x99 \xae\xbe[\xf2\xc7\xf5\xe2\xf6\xe7G\xeb\xa8\xe6" +
	"&\x7f\x81\xb5\xc4W\xfd\xba\xe9B\xeb\xd3O\xcd\x1e#" +
	"1\x0fU\xb28\xb4nv\xf2<\xac\xfb\x92\x09\"\xab" +
	"5\xf9.Ay\xcd\xdb~8\xb1\xa1\xfb\xe5\x9bc\x96" +
	"\xc5W\xf4\xd2\x98\xa9\xc57\x92K\x09\xea\x9d]\xbbg" +
	"\x1d\x1c?\xbbO\x87f\xb5\xea\xd6\x99\xd7`=\xa2\xd5" +
	"m\xdd33 \xa8\x91\xc5\xce\xa1\xcc\x9a\xe2\xa1z\xb1" +
	"\xc7\x1a&`\xedo\xd0\xb1\xdfj\xd0\xb1?\xf9\xf3s" +
	"\xe3\xe4\xf8\x1dG\xeb\x89\xbfl8\x08\xeb\x8a/\xbe\xe4" +
	"\x8b/\xf4\x1d\xdd\xf2\xe3\xc1\xc7\xce\xd5\x13\xc7\x1b/\xc3" +
	"\x9a\xdb\xa8\xc5s\x1a\xb5\xf8\xab\xff\x1fz\xf0\xae\x8b\xc3" +
	"\x17j\x0a\xd2\x85\xc4\x0c\xa26\xd1\xf8\x19\xacuZ\xde" +
	"6\xd0\xf8\xb8N\xfb\xb9\x8d\xde\xf13WW}_\xa7" +
	"\xcc\xdf\x1a\x0d\xcc\xbaj\xe82/8v\xf7\x84\x1c\xf5" +
	"\xea\xa9\xbe6\x8e\xc1\xfa\xd9W\xed\xb6\xe6\x9f{i\x8e" +
	"\xf1SM\xa2L\xcbN\x19\x13\xb0.\x19:\xd1\x8b\xc6" +
	"3\x04\xe5\x9c=\xdf3\xba\xf3\xf8\xc4\xe4D\xe3Dm" +
	"\xed\xa9\x8f`\xadN\xe9\x99\x8f\xa62 E[U\xc9" +
	"\xc9/\xec\x1d\xb2\xf3\x89\xc1\xb5\xaeg\x97\xa4\xff'\xf8" +
	"\xbd\xb6\xe4\xe4\xef\xc9\xe7\x9c\xa2\xf3@\x87\x1e]\xa9\x07" +
	"\xb3\xd2\x95\xa5\x0d\xb2\x90\x95\xeb\x87\xa5\xebQ\x0f\x10\x05" +
	"\x991u\x90\x87\xa5\xb7|\xa0\xaf_\xba\x9e\x1f.+" +
	"\xd7\xffO\x87\x98^\x04\x7f\xaa\xdb\xb1\xb1\xbb\xd3\xcf\x80" +
	"\xfb\xf3\x85\xc1cD1\x10\x99]\x1dDb\x19\x87X" +
	"\xc3\x004\x01\x80\xb9z+\x91x\x82C\x14\x18L\x86" +
	"&0\xc0\xcc\xed \x12\x05\x0e\xe10l\xf2\x97\xeb\xee" +
	"\xc4,B\x0f\x07R\xc4\xf4OU\x92\xdep\xa9\xd81" +
	"\x04;?\xd81d\xf7\x12@\x0c\x88\xbed%\xf2r" +
	"\xc0\xd1I\xa1\xb7\xf2\xed\xdf\xd5\xb4j3\xcb\xe5@_" +
	"\xbf\x97\x95\xaec\x17]\xa9k*b\xd1\x8eRO\x12" +
	"\x09\x83C\xccgP\xe5D=I|\x9d\x1bf\x9bV" +
	"\x13-v\xf7\xc8\xdbwn&B9\xefi\x973\xc8" +
	"`i\xd9U\x9d@S\x94\xc0H\xaf\xb9%#^\xe5" +
	"\x10{\x83\x9a\x12\x99{^'\x12{9\xc4\xfbaM" +
	"\x89\xcc\xf7\xb2D\xe2\x00\x87\xf8\x80\xc1\xe4\xcb\x9a\xc0\x89" +
	"\xcc\xa3\xbdD\xe2\x08\x87\xf8\x98\xc1\x8c\xb57!Fd" +
	"~X\xd2\x8d\x8bC|\xc1\xa0\xfae\xae\xa0\x13\xa1\xc4" +
	"`w\xa7\x88\x81\xa9\xc3\xa7\xaf4,\xbc\x9c\xfb\x9dD" +
	"\x8c\xa1\xdd\x00q\xdf\x93\x14A\xe5\x8ay\xa97\x82\x95" +
	"^\xae\xe4-\x97\x03\x89\xbe~\x0fIbH\x12Tq" +
	"x\x9d\xbf%\x82\x1b\x8d\x85.R\xc2\xce\x0fNr\x90" +
	"2\xbe\x85\x93\xdc\x9b.\xccn\xc67\xaf\xc6\xbb\x15\x81" +
	"w\xcd\x0c\xca\xb3\x1d{\xc8\xee\xdbHDH+g\xc1" +
	"\x86\x17\xe6\xfevZi\xcf\xd2U\xeb\xc6\xa7^\xb7\xbd" +
	"P\x08\x16\xccDV\xd5a\xa59de\x95\xddN\xbc" +
	"P\xa8\x81$M\xb7{\xe6\\\xc7NL\xde\xe6\x7f\x86" +
	"\xe8M\x8d\xa7|:\xfc\xe3\xd1\xccc\x86R\xfe\xe2\xaf" +
	"\xec$\x0a\xe9L\xe1o\x15\xf0\xa9\x01{\x93C\x1c`" +
	"H\xb1\x1b\xaa\x0c\xe8~=\xba\x8fC\x1caH\xf1\xbf" +
	"T\x99\xd0\xc3;*\x84\xa6b\xd7U\x80\xe8\x8a\x0a\xa2" +
	"\xa9\xf85\xd5\x848\x91yF\xf7\x92O9\xc47\xe1" +
	"VWz6\xc2\xbe\xc8\xa5\xaet\xd4\xff\x83J\xcbR" +
	"\xc9.e\xa5KeD\x90\xaet\xf5@\xd1\x17\x14\x99" +
	"2~\x99\x91\xae\\P5\x0a\x84\x87\x15\x1e\xd2\x95\xcb" +
	"7P\xe5\x02:\xca\x88E7L%\x86\xcf,\x02h" +
	"\xb5&\xbabk\xa8\xb8\x8d\x0b\xa1\xca\x9f\xe9\xd3\xbc\xd4" +
	"\x0d\x8f\xcf\xf4\xd1\xe8\x0a\xea[9\x81\xc9\x08\xcd\x16\xdd" +
	"\x92\xe6s\x88\xc5\x0cf\xd8\xbcZ\xf5\xe0\"\x0e\xf1\x10" +
	"\x0b\xdcY%\x9f%x0\x88\xc1\x08\x1d\xeb\xccy\x84" +
	"\\4v\x1b\xc4FW\xa4\xee\xa6!\xaf#\x9a\xd7\xcd" +
	"\x1cb\xb4\x9a\xd7\xed\x9a\xcc\x179\xc4x5\xafc\x9a" +
	"\xccq\x0e\xf1Z5\xaf\xbbVT\x11\x1f\xf1\xbagk" +
	"\x85\xf8[\x91\x19=\x13o\xc9]\xf4\xf8\x9b\x92\xbb\xe8" +
	"\x1dW\x97\xbb\xe8%6\x05w\xd1S\xb4\xac\xf9'\x00" +
	"\x00\xff\xff`vK\xc0"

func init() {
	schemas.Register(schema_c0c529faac9105c3,
		0x87da3244a36c507f,
		0x8c7e896efbf33dd7,
		0x91195b6a31dc7fec,
		0x974976c0e4871874,
		0xacd894b20e9e9dae,
		0xb36e5c1fb370347d,
		0xb92294c30ccbf9c6,
		0xd956b2e681b967dc,
		0xdc75dd2b3bb315d0,
		0xe354f5c9bb74797c,
		0xe3748c65f22dba2c,
		0xe80c1d8ad928139e,
		0xf2bb9a8c50dad870)
}
