// Code generated by capnpc-go. DO NOT EDIT.

package transaction_store

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	koinos "koinos"
	rpc "koinos/rpc"
	strconv "strconv"
)

type TransactionStoreReservedRequest struct{ capnp.Struct }

// TransactionStoreReservedRequest_TypeID is the unique identifier for the type TransactionStoreReservedRequest.
const TransactionStoreReservedRequest_TypeID = 0xd40e5435bd211eac

func NewTransactionStoreReservedRequest(s *capnp.Segment) (TransactionStoreReservedRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return TransactionStoreReservedRequest{st}, err
}

func NewRootTransactionStoreReservedRequest(s *capnp.Segment) (TransactionStoreReservedRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return TransactionStoreReservedRequest{st}, err
}

func ReadRootTransactionStoreReservedRequest(msg *capnp.Message) (TransactionStoreReservedRequest, error) {
	root, err := msg.Root()
	return TransactionStoreReservedRequest{root.Struct()}, err
}

func (s TransactionStoreReservedRequest) String() string {
	str, _ := text.Marshal(0xd40e5435bd211eac, s.Struct)
	return str
}

// TransactionStoreReservedRequest_List is a list of TransactionStoreReservedRequest.
type TransactionStoreReservedRequest_List struct{ capnp.List }

// NewTransactionStoreReservedRequest creates a new list of TransactionStoreReservedRequest.
func NewTransactionStoreReservedRequest_List(s *capnp.Segment, sz int32) (TransactionStoreReservedRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return TransactionStoreReservedRequest_List{l}, err
}

func (s TransactionStoreReservedRequest_List) At(i int) TransactionStoreReservedRequest {
	return TransactionStoreReservedRequest{s.List.Struct(i)}
}

func (s TransactionStoreReservedRequest_List) Set(i int, v TransactionStoreReservedRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionStoreReservedRequest_List) String() string {
	str, _ := text.MarshalList(0xd40e5435bd211eac, s.List)
	return str
}

// TransactionStoreReservedRequest_Future is a wrapper for a TransactionStoreReservedRequest promised by a client call.
type TransactionStoreReservedRequest_Future struct{ *capnp.Future }

func (p TransactionStoreReservedRequest_Future) Struct() (TransactionStoreReservedRequest, error) {
	s, err := p.Future.Struct()
	return TransactionStoreReservedRequest{s}, err
}

type TransactionStoreReservedResponse struct{ capnp.Struct }

// TransactionStoreReservedResponse_TypeID is the unique identifier for the type TransactionStoreReservedResponse.
const TransactionStoreReservedResponse_TypeID = 0xd4b943e6eab7b8b6

func NewTransactionStoreReservedResponse(s *capnp.Segment) (TransactionStoreReservedResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return TransactionStoreReservedResponse{st}, err
}

func NewRootTransactionStoreReservedResponse(s *capnp.Segment) (TransactionStoreReservedResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return TransactionStoreReservedResponse{st}, err
}

func ReadRootTransactionStoreReservedResponse(msg *capnp.Message) (TransactionStoreReservedResponse, error) {
	root, err := msg.Root()
	return TransactionStoreReservedResponse{root.Struct()}, err
}

func (s TransactionStoreReservedResponse) String() string {
	str, _ := text.Marshal(0xd4b943e6eab7b8b6, s.Struct)
	return str
}

// TransactionStoreReservedResponse_List is a list of TransactionStoreReservedResponse.
type TransactionStoreReservedResponse_List struct{ capnp.List }

// NewTransactionStoreReservedResponse creates a new list of TransactionStoreReservedResponse.
func NewTransactionStoreReservedResponse_List(s *capnp.Segment, sz int32) (TransactionStoreReservedResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return TransactionStoreReservedResponse_List{l}, err
}

func (s TransactionStoreReservedResponse_List) At(i int) TransactionStoreReservedResponse {
	return TransactionStoreReservedResponse{s.List.Struct(i)}
}

func (s TransactionStoreReservedResponse_List) Set(i int, v TransactionStoreReservedResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionStoreReservedResponse_List) String() string {
	str, _ := text.MarshalList(0xd4b943e6eab7b8b6, s.List)
	return str
}

// TransactionStoreReservedResponse_Future is a wrapper for a TransactionStoreReservedResponse promised by a client call.
type TransactionStoreReservedResponse_Future struct{ *capnp.Future }

func (p TransactionStoreReservedResponse_Future) Struct() (TransactionStoreReservedResponse, error) {
	s, err := p.Future.Struct()
	return TransactionStoreReservedResponse{s}, err
}

type GetTransactionsByIDRequest struct{ capnp.Struct }

// GetTransactionsByIDRequest_TypeID is the unique identifier for the type GetTransactionsByIDRequest.
const GetTransactionsByIDRequest_TypeID = 0xd8f2817e4471d835

func NewGetTransactionsByIDRequest(s *capnp.Segment) (GetTransactionsByIDRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetTransactionsByIDRequest{st}, err
}

func NewRootGetTransactionsByIDRequest(s *capnp.Segment) (GetTransactionsByIDRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetTransactionsByIDRequest{st}, err
}

func ReadRootGetTransactionsByIDRequest(msg *capnp.Message) (GetTransactionsByIDRequest, error) {
	root, err := msg.Root()
	return GetTransactionsByIDRequest{root.Struct()}, err
}

func (s GetTransactionsByIDRequest) String() string {
	str, _ := text.Marshal(0xd8f2817e4471d835, s.Struct)
	return str
}

func (s GetTransactionsByIDRequest) TransactionIDs() (capnp.DataList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.DataList{List: p.List()}, err
}

func (s GetTransactionsByIDRequest) HasTransactionIDs() bool {
	return s.Struct.HasPtr(0)
}

func (s GetTransactionsByIDRequest) SetTransactionIDs(v capnp.DataList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewTransactionIDs sets the transactionIDs field to a newly
// allocated capnp.DataList, preferring placement in s's segment.
func (s GetTransactionsByIDRequest) NewTransactionIDs(n int32) (capnp.DataList, error) {
	l, err := capnp.NewDataList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.DataList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetTransactionsByIDRequest_List is a list of GetTransactionsByIDRequest.
type GetTransactionsByIDRequest_List struct{ capnp.List }

// NewGetTransactionsByIDRequest creates a new list of GetTransactionsByIDRequest.
func NewGetTransactionsByIDRequest_List(s *capnp.Segment, sz int32) (GetTransactionsByIDRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetTransactionsByIDRequest_List{l}, err
}

func (s GetTransactionsByIDRequest_List) At(i int) GetTransactionsByIDRequest {
	return GetTransactionsByIDRequest{s.List.Struct(i)}
}

func (s GetTransactionsByIDRequest_List) Set(i int, v GetTransactionsByIDRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetTransactionsByIDRequest_List) String() string {
	str, _ := text.MarshalList(0xd8f2817e4471d835, s.List)
	return str
}

// GetTransactionsByIDRequest_Future is a wrapper for a GetTransactionsByIDRequest promised by a client call.
type GetTransactionsByIDRequest_Future struct{ *capnp.Future }

func (p GetTransactionsByIDRequest_Future) Struct() (GetTransactionsByIDRequest, error) {
	s, err := p.Future.Struct()
	return GetTransactionsByIDRequest{s}, err
}

type GetTransactionsByIDResponse struct{ capnp.Struct }

// GetTransactionsByIDResponse_TypeID is the unique identifier for the type GetTransactionsByIDResponse.
const GetTransactionsByIDResponse_TypeID = 0xb8e16e3306b23463

func NewGetTransactionsByIDResponse(s *capnp.Segment) (GetTransactionsByIDResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetTransactionsByIDResponse{st}, err
}

func NewRootGetTransactionsByIDResponse(s *capnp.Segment) (GetTransactionsByIDResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetTransactionsByIDResponse{st}, err
}

func ReadRootGetTransactionsByIDResponse(msg *capnp.Message) (GetTransactionsByIDResponse, error) {
	root, err := msg.Root()
	return GetTransactionsByIDResponse{root.Struct()}, err
}

func (s GetTransactionsByIDResponse) String() string {
	str, _ := text.Marshal(0xb8e16e3306b23463, s.Struct)
	return str
}

func (s GetTransactionsByIDResponse) Transactions() (koinos.Optional_List, error) {
	p, err := s.Struct.Ptr(0)
	return koinos.Optional_List{List: p.List()}, err
}

func (s GetTransactionsByIDResponse) HasTransactions() bool {
	return s.Struct.HasPtr(0)
}

func (s GetTransactionsByIDResponse) SetTransactions(v koinos.Optional_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewTransactions sets the transactions field to a newly
// allocated koinos.Optional_List, preferring placement in s's segment.
func (s GetTransactionsByIDResponse) NewTransactions(n int32) (koinos.Optional_List, error) {
	l, err := koinos.NewOptional_List(s.Struct.Segment(), n)
	if err != nil {
		return koinos.Optional_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetTransactionsByIDResponse_List is a list of GetTransactionsByIDResponse.
type GetTransactionsByIDResponse_List struct{ capnp.List }

// NewGetTransactionsByIDResponse creates a new list of GetTransactionsByIDResponse.
func NewGetTransactionsByIDResponse_List(s *capnp.Segment, sz int32) (GetTransactionsByIDResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetTransactionsByIDResponse_List{l}, err
}

func (s GetTransactionsByIDResponse_List) At(i int) GetTransactionsByIDResponse {
	return GetTransactionsByIDResponse{s.List.Struct(i)}
}

func (s GetTransactionsByIDResponse_List) Set(i int, v GetTransactionsByIDResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetTransactionsByIDResponse_List) String() string {
	str, _ := text.MarshalList(0xb8e16e3306b23463, s.List)
	return str
}

// GetTransactionsByIDResponse_Future is a wrapper for a GetTransactionsByIDResponse promised by a client call.
type GetTransactionsByIDResponse_Future struct{ *capnp.Future }

func (p GetTransactionsByIDResponse_Future) Struct() (GetTransactionsByIDResponse, error) {
	s, err := p.Future.Struct()
	return GetTransactionsByIDResponse{s}, err
}

type TransactionStoreRequest struct{ capnp.Struct }
type TransactionStoreRequest_Which uint16

const (
	TransactionStoreRequest_Which_transactionStoreReserved TransactionStoreRequest_Which = 0
	TransactionStoreRequest_Which_getTransactionsByID      TransactionStoreRequest_Which = 1
)

func (w TransactionStoreRequest_Which) String() string {
	const s = "transactionStoreReservedgetTransactionsByID"
	switch w {
	case TransactionStoreRequest_Which_transactionStoreReserved:
		return s[0:24]
	case TransactionStoreRequest_Which_getTransactionsByID:
		return s[24:43]

	}
	return "TransactionStoreRequest_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// TransactionStoreRequest_TypeID is the unique identifier for the type TransactionStoreRequest.
const TransactionStoreRequest_TypeID = 0x9bf21bd12da5e512

func NewTransactionStoreRequest(s *capnp.Segment) (TransactionStoreRequest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TransactionStoreRequest{st}, err
}

func NewRootTransactionStoreRequest(s *capnp.Segment) (TransactionStoreRequest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TransactionStoreRequest{st}, err
}

func ReadRootTransactionStoreRequest(msg *capnp.Message) (TransactionStoreRequest, error) {
	root, err := msg.Root()
	return TransactionStoreRequest{root.Struct()}, err
}

func (s TransactionStoreRequest) String() string {
	str, _ := text.Marshal(0x9bf21bd12da5e512, s.Struct)
	return str
}

func (s TransactionStoreRequest) Which() TransactionStoreRequest_Which {
	return TransactionStoreRequest_Which(s.Struct.Uint16(0))
}
func (s TransactionStoreRequest) TransactionStoreReserved() (TransactionStoreReservedRequest, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != transactionStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return TransactionStoreReservedRequest{Struct: p.Struct()}, err
}

func (s TransactionStoreRequest) HasTransactionStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s TransactionStoreRequest) SetTransactionStoreReserved(v TransactionStoreReservedRequest) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTransactionStoreReserved sets the transactionStoreReserved field to a newly
// allocated TransactionStoreReservedRequest struct, preferring placement in s's segment.
func (s TransactionStoreRequest) NewTransactionStoreReserved() (TransactionStoreReservedRequest, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewTransactionStoreReservedRequest(s.Struct.Segment())
	if err != nil {
		return TransactionStoreReservedRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s TransactionStoreRequest) GetTransactionsByID() (GetTransactionsByIDRequest, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != getTransactionsByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetTransactionsByIDRequest{Struct: p.Struct()}, err
}

func (s TransactionStoreRequest) HasGetTransactionsByID() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s TransactionStoreRequest) SetGetTransactionsByID(v GetTransactionsByIDRequest) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetTransactionsByID sets the getTransactionsByID field to a newly
// allocated GetTransactionsByIDRequest struct, preferring placement in s's segment.
func (s TransactionStoreRequest) NewGetTransactionsByID() (GetTransactionsByIDRequest, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewGetTransactionsByIDRequest(s.Struct.Segment())
	if err != nil {
		return GetTransactionsByIDRequest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// TransactionStoreRequest_List is a list of TransactionStoreRequest.
type TransactionStoreRequest_List struct{ capnp.List }

// NewTransactionStoreRequest creates a new list of TransactionStoreRequest.
func NewTransactionStoreRequest_List(s *capnp.Segment, sz int32) (TransactionStoreRequest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return TransactionStoreRequest_List{l}, err
}

func (s TransactionStoreRequest_List) At(i int) TransactionStoreRequest {
	return TransactionStoreRequest{s.List.Struct(i)}
}

func (s TransactionStoreRequest_List) Set(i int, v TransactionStoreRequest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionStoreRequest_List) String() string {
	str, _ := text.MarshalList(0x9bf21bd12da5e512, s.List)
	return str
}

// TransactionStoreRequest_Future is a wrapper for a TransactionStoreRequest promised by a client call.
type TransactionStoreRequest_Future struct{ *capnp.Future }

func (p TransactionStoreRequest_Future) Struct() (TransactionStoreRequest, error) {
	s, err := p.Future.Struct()
	return TransactionStoreRequest{s}, err
}

func (p TransactionStoreRequest_Future) TransactionStoreReserved() TransactionStoreReservedRequest_Future {
	return TransactionStoreReservedRequest_Future{Future: p.Future.Field(0, nil)}
}

func (p TransactionStoreRequest_Future) GetTransactionsByID() GetTransactionsByIDRequest_Future {
	return GetTransactionsByIDRequest_Future{Future: p.Future.Field(0, nil)}
}

type TransactionStoreResponse struct{ capnp.Struct }
type TransactionStoreResponse_Which uint16

const (
	TransactionStoreResponse_Which_transactionStoreReserved TransactionStoreResponse_Which = 0
	TransactionStoreResponse_Which_transactionStoreError    TransactionStoreResponse_Which = 1
	TransactionStoreResponse_Which_getTransactionsByID      TransactionStoreResponse_Which = 2
)

func (w TransactionStoreResponse_Which) String() string {
	const s = "transactionStoreReservedtransactionStoreErrorgetTransactionsByID"
	switch w {
	case TransactionStoreResponse_Which_transactionStoreReserved:
		return s[0:24]
	case TransactionStoreResponse_Which_transactionStoreError:
		return s[24:45]
	case TransactionStoreResponse_Which_getTransactionsByID:
		return s[45:64]

	}
	return "TransactionStoreResponse_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// TransactionStoreResponse_TypeID is the unique identifier for the type TransactionStoreResponse.
const TransactionStoreResponse_TypeID = 0x9c06f50b962a08d5

func NewTransactionStoreResponse(s *capnp.Segment) (TransactionStoreResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TransactionStoreResponse{st}, err
}

func NewRootTransactionStoreResponse(s *capnp.Segment) (TransactionStoreResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TransactionStoreResponse{st}, err
}

func ReadRootTransactionStoreResponse(msg *capnp.Message) (TransactionStoreResponse, error) {
	root, err := msg.Root()
	return TransactionStoreResponse{root.Struct()}, err
}

func (s TransactionStoreResponse) String() string {
	str, _ := text.Marshal(0x9c06f50b962a08d5, s.Struct)
	return str
}

func (s TransactionStoreResponse) Which() TransactionStoreResponse_Which {
	return TransactionStoreResponse_Which(s.Struct.Uint16(0))
}
func (s TransactionStoreResponse) TransactionStoreReserved() (TransactionStoreReservedResponse, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != transactionStoreReserved")
	}
	p, err := s.Struct.Ptr(0)
	return TransactionStoreReservedResponse{Struct: p.Struct()}, err
}

func (s TransactionStoreResponse) HasTransactionStoreReserved() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s TransactionStoreResponse) SetTransactionStoreReserved(v TransactionStoreReservedResponse) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTransactionStoreReserved sets the transactionStoreReserved field to a newly
// allocated TransactionStoreReservedResponse struct, preferring placement in s's segment.
func (s TransactionStoreResponse) NewTransactionStoreReserved() (TransactionStoreReservedResponse, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewTransactionStoreReservedResponse(s.Struct.Segment())
	if err != nil {
		return TransactionStoreReservedResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s TransactionStoreResponse) TransactionStoreError() (rpc.ErrorResponse, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != transactionStoreError")
	}
	p, err := s.Struct.Ptr(0)
	return rpc.ErrorResponse{Struct: p.Struct()}, err
}

func (s TransactionStoreResponse) HasTransactionStoreError() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s TransactionStoreResponse) SetTransactionStoreError(v rpc.ErrorResponse) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTransactionStoreError sets the transactionStoreError field to a newly
// allocated rpc.ErrorResponse struct, preferring placement in s's segment.
func (s TransactionStoreResponse) NewTransactionStoreError() (rpc.ErrorResponse, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := rpc.NewErrorResponse(s.Struct.Segment())
	if err != nil {
		return rpc.ErrorResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s TransactionStoreResponse) GetTransactionsByID() (GetTransactionsByIDResponse, error) {
	if s.Struct.Uint16(0) != 2 {
		panic("Which() != getTransactionsByID")
	}
	p, err := s.Struct.Ptr(0)
	return GetTransactionsByIDResponse{Struct: p.Struct()}, err
}

func (s TransactionStoreResponse) HasGetTransactionsByID() bool {
	if s.Struct.Uint16(0) != 2 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s TransactionStoreResponse) SetGetTransactionsByID(v GetTransactionsByIDResponse) error {
	s.Struct.SetUint16(0, 2)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewGetTransactionsByID sets the getTransactionsByID field to a newly
// allocated GetTransactionsByIDResponse struct, preferring placement in s's segment.
func (s TransactionStoreResponse) NewGetTransactionsByID() (GetTransactionsByIDResponse, error) {
	s.Struct.SetUint16(0, 2)
	ss, err := NewGetTransactionsByIDResponse(s.Struct.Segment())
	if err != nil {
		return GetTransactionsByIDResponse{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// TransactionStoreResponse_List is a list of TransactionStoreResponse.
type TransactionStoreResponse_List struct{ capnp.List }

// NewTransactionStoreResponse creates a new list of TransactionStoreResponse.
func NewTransactionStoreResponse_List(s *capnp.Segment, sz int32) (TransactionStoreResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return TransactionStoreResponse_List{l}, err
}

func (s TransactionStoreResponse_List) At(i int) TransactionStoreResponse {
	return TransactionStoreResponse{s.List.Struct(i)}
}

func (s TransactionStoreResponse_List) Set(i int, v TransactionStoreResponse) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s TransactionStoreResponse_List) String() string {
	str, _ := text.MarshalList(0x9c06f50b962a08d5, s.List)
	return str
}

// TransactionStoreResponse_Future is a wrapper for a TransactionStoreResponse promised by a client call.
type TransactionStoreResponse_Future struct{ *capnp.Future }

func (p TransactionStoreResponse_Future) Struct() (TransactionStoreResponse, error) {
	s, err := p.Future.Struct()
	return TransactionStoreResponse{s}, err
}

func (p TransactionStoreResponse_Future) TransactionStoreReserved() TransactionStoreReservedResponse_Future {
	return TransactionStoreReservedResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p TransactionStoreResponse_Future) TransactionStoreError() rpc.ErrorResponse_Future {
	return rpc.ErrorResponse_Future{Future: p.Future.Field(0, nil)}
}

func (p TransactionStoreResponse_Future) GetTransactionsByID() GetTransactionsByIDResponse_Future {
	return GetTransactionsByIDResponse_Future{Future: p.Future.Field(0, nil)}
}

const schema_cd81d67c7686e70a = "x\xda\xac\x93\xcfk\x13A\x14\xc7\xdf\x9b\xd9\xdd\x89m" +
	"\xd2f\xdd\x82\x88h\xf0 bQ[\x1b{h)\xb4" +
	"\xd6\x04\x1b\xf1\xd0\x89\x15\x8a %$\x8b4\x87\xdd\xcd" +
	"\xee\xb6Z\x7fAD\xfd\x03\x04=\xa8\x17\xc5\x1c\x04A" +
	"(\xb4\xb6\x07/z\x10\x04\x0f\x82J\x0f^*\xb4B" +
	"OR\xf0\xe0AG&\xbf6\xad\x85\x82\xe6\xb6\xbc\xf9" +
	"\xec{\xfb\xf9\xce\xdb\xee\xd3d\x88\x1cS'Z\x01\xf8" +
	"-U\x13;WJG>\xecY\x7f\x08\xbc\x07Q\xb4" +
	"|\xbb3}\xeds\xf1=$\x91\x11\x80\xf8=5M" +
	"\x8cE\x95\x01\x18s\xea%@\xf1)\xd4y\xbf\xf5\x87" +
	"\xf6\xe8o\x9c\x02\xc4\x0fh\xe7\x89\x91\xd2$\x9e\xd4^" +
	"\x00\x8a\xec\xf1Y-n-/\x80\xde\xd3@\xab\xc8\x00" +
	"\xe2?5\x97\x18{\x99\x84w\xb3A@\xf1|\xdf\xfe" +
	"W\xbdcm\x1f7\xc2\x8ad\xaf\xb3\xbb\xc4(1\x06" +
	"T\xcc/\xbc\\[=\xb9\xb8\x15Ud\x0f\x88\xf1\xac" +
	"L\xf5.\x15\x127\x8a\xebK[\x0d\xbe\xcd\xf2\x15\x0c" +
	"\x8c\x12\x1b\x04\x01\x9d\xc2u\xb2]\xbe\x9b\xb1B^&" +
	"\xebO\xda\xd6\x84\xe7\xdb\xaeY.m\xa8L\xb8N\xf6" +
	"h6\xe3XN\xffXpvV\x1e\xa5\xcd\xc2\x94\xe9" +
	"\xa1?\x8a\xc8CT\x09\x0b\xa1 \x80~\xe8\x1d\x00\xef" +
	"\xa6\xc8\x07\x08F\xf0\xb7\xe8@Y\xed{\x02\xc0\x07(" +
	"\xf2\x11\x82\xa26\x85\x04\xad<\xd3\x9d6s\x00\x18\x0d" +
	"R\x01\xc4(\xa0\xb8h\xfa\xe5\xd1X\x99\xed\x0d\xb3\x99" +
	"T\x02\xa3\x81q\x95k\x8a\x92\xe7\xd8\x16\xf5L\xe9\x14" +
	"\x0e\x9c\x92\xd2\xe9\x0cE>\xde\xe8tn\x16\x80\x8fS" +
	"\xe49\x82\x11\xf2Kt \x01\xd03\xd24G\x91;" +
	"\xdb\x9a\xd6o\xb6jP\xa3\xb1F\xc7\x92\xaek\xbb\x18" +
	"\x15\xc3_\xbaF\x97\xfb_\xafn\x97I}\xfd\xfe=" +
	"\x93S\xd5\xd6\xb5\xce3\xa9D\xda\xf4b\x8emUb" +
	"Q\xa8\x02PN%\x92\x07\xe0\xe1J*\xf5o\x87v" +
	"\xf9\x16\xb6\x01\x8eR\xc4\xa8H?\xbe\xfc&5\x12\x9a" +
	"\x07\x80!\xd41\xc6\x15\x82\x8dE\x1dwq\x05\x11\xab" +
	"\xf8\x85\x83W\xfbn\xae\xe5\x9fJ\x81\xb6\x06\x81\x1d\xff" +
	"u\xa9\xe5\xc8\x1b\xf6\xb5\xb9m\x83\x9diZ\xde\x85\xf6" +
	")\xd3\xf37\xc5}E\xd7c\xfc\xf0\xa6\x7f\x08\x06'" +
	"m+\x95\xf0\xb8\x82D\xcc\xbd]i\xe9\xfa\x9a\xf9\x0e" +
	"2\xe5\x13a\x04Z\xbb\x88\x08\x10\xf9\xf8'\x00\x00\xff" +
	"\xff\xcc\x0a\xa3\xad"

func init() {
	schemas.Register(schema_cd81d67c7686e70a,
		0x9bf21bd12da5e512,
		0x9c06f50b962a08d5,
		0xb8e16e3306b23463,
		0xd40e5435bd211eac,
		0xd4b943e6eab7b8b6,
		0xd8f2817e4471d835)
}
