// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: koinos/protocol/protocol.proto

package protocol

import (
	_ "github.com/koinos/koinos-proto-golang/koinos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContractCallBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	EntryPoint uint32 `protobuf:"varint,2,opt,name=entry_point,json=entryPoint,proto3" json:"entry_point,omitempty"`
}

func (x *ContractCallBundle) Reset() {
	*x = ContractCallBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCallBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCallBundle) ProtoMessage() {}

func (x *ContractCallBundle) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCallBundle.ProtoReflect.Descriptor instead.
func (*ContractCallBundle) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *ContractCallBundle) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *ContractCallBundle) GetEntryPoint() uint32 {
	if x != nil {
		return x.EntryPoint
	}
	return 0
}

type SystemCallTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//	*SystemCallTarget_ThunkId
	//	*SystemCallTarget_SystemCallBundle
	Target isSystemCallTarget_Target `protobuf_oneof:"target"`
}

func (x *SystemCallTarget) Reset() {
	*x = SystemCallTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCallTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCallTarget) ProtoMessage() {}

func (x *SystemCallTarget) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCallTarget.ProtoReflect.Descriptor instead.
func (*SystemCallTarget) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (m *SystemCallTarget) GetTarget() isSystemCallTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *SystemCallTarget) GetThunkId() uint32 {
	if x, ok := x.GetTarget().(*SystemCallTarget_ThunkId); ok {
		return x.ThunkId
	}
	return 0
}

func (x *SystemCallTarget) GetSystemCallBundle() *ContractCallBundle {
	if x, ok := x.GetTarget().(*SystemCallTarget_SystemCallBundle); ok {
		return x.SystemCallBundle
	}
	return nil
}

type isSystemCallTarget_Target interface {
	isSystemCallTarget_Target()
}

type SystemCallTarget_ThunkId struct {
	ThunkId uint32 `protobuf:"varint,1,opt,name=thunk_id,json=thunkId,proto3,oneof"`
}

type SystemCallTarget_SystemCallBundle struct {
	SystemCallBundle *ContractCallBundle `protobuf:"bytes,2,opt,name=system_call_bundle,json=systemCallBundle,proto3,oneof"`
}

func (*SystemCallTarget_ThunkId) isSystemCallTarget_Target() {}

func (*SystemCallTarget_SystemCallBundle) isSystemCallTarget_Target() {}

type UploadContractOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Bytecode   []byte `protobuf:"bytes,2,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
}

func (x *UploadContractOperation) Reset() {
	*x = UploadContractOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadContractOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadContractOperation) ProtoMessage() {}

func (x *UploadContractOperation) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadContractOperation.ProtoReflect.Descriptor instead.
func (*UploadContractOperation) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *UploadContractOperation) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *UploadContractOperation) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

type CallContractOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	EntryPoint uint32 `protobuf:"varint,2,opt,name=entry_point,json=entryPoint,proto3" json:"entry_point,omitempty"`
	Args       []byte `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *CallContractOperation) Reset() {
	*x = CallContractOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallContractOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractOperation) ProtoMessage() {}

func (x *CallContractOperation) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractOperation.ProtoReflect.Descriptor instead.
func (*CallContractOperation) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *CallContractOperation) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *CallContractOperation) GetEntryPoint() uint32 {
	if x != nil {
		return x.EntryPoint
	}
	return 0
}

func (x *CallContractOperation) GetArgs() []byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type SetSystemCallOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId uint32            `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Target *SystemCallTarget `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *SetSystemCallOperation) Reset() {
	*x = SetSystemCallOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSystemCallOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSystemCallOperation) ProtoMessage() {}

func (x *SetSystemCallOperation) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSystemCallOperation.ProtoReflect.Descriptor instead.
func (*SetSystemCallOperation) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *SetSystemCallOperation) GetCallId() uint32 {
	if x != nil {
		return x.CallId
	}
	return 0
}

func (x *SetSystemCallOperation) GetTarget() *SystemCallTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//	*Operation_UploadContract
	//	*Operation_CallContract
	//	*Operation_SetSystemCall
	Op isOperation_Op `protobuf_oneof:"op"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (m *Operation) GetOp() isOperation_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *Operation) GetUploadContract() *UploadContractOperation {
	if x, ok := x.GetOp().(*Operation_UploadContract); ok {
		return x.UploadContract
	}
	return nil
}

func (x *Operation) GetCallContract() *CallContractOperation {
	if x, ok := x.GetOp().(*Operation_CallContract); ok {
		return x.CallContract
	}
	return nil
}

func (x *Operation) GetSetSystemCall() *SetSystemCallOperation {
	if x, ok := x.GetOp().(*Operation_SetSystemCall); ok {
		return x.SetSystemCall
	}
	return nil
}

type isOperation_Op interface {
	isOperation_Op()
}

type Operation_UploadContract struct {
	UploadContract *UploadContractOperation `protobuf:"bytes,1,opt,name=upload_contract,json=uploadContract,proto3,oneof"`
}

type Operation_CallContract struct {
	CallContract *CallContractOperation `protobuf:"bytes,2,opt,name=call_contract,json=callContract,proto3,oneof"`
}

type Operation_SetSystemCall struct {
	SetSystemCall *SetSystemCallOperation `protobuf:"bytes,3,opt,name=set_system_call,json=setSystemCall,proto3,oneof"`
}

func (*Operation_UploadContract) isOperation_Op() {}

func (*Operation_CallContract) isOperation_Op() {}

func (*Operation_SetSystemCall) isOperation_Op() {}

type ActiveTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcLimit    uint64       `protobuf:"varint,1,opt,name=rc_limit,json=rcLimit,proto3" json:"rc_limit,omitempty"`
	Nonce      uint64       `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Operations []*Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *ActiveTransactionData) Reset() {
	*x = ActiveTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveTransactionData) ProtoMessage() {}

func (x *ActiveTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveTransactionData.ProtoReflect.Descriptor instead.
func (*ActiveTransactionData) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *ActiveTransactionData) GetRcLimit() uint64 {
	if x != nil {
		return x.RcLimit
	}
	return 0
}

func (x *ActiveTransactionData) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ActiveTransactionData) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type PassiveTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PassiveTransactionData) Reset() {
	*x = PassiveTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassiveTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassiveTransactionData) ProtoMessage() {}

func (x *PassiveTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassiveTransactionData.ProtoReflect.Descriptor instead.
func (*PassiveTransactionData) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Active        []byte `protobuf:"bytes,2,opt,name=active,proto3" json:"active,omitempty"`
	Passive       []byte `protobuf:"bytes,3,opt,name=passive,proto3" json:"passive,omitempty"`
	SignatureData []byte `protobuf:"bytes,4,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *Transaction) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Transaction) GetActive() []byte {
	if x != nil {
		return x.Active
	}
	return nil
}

func (x *Transaction) GetPassive() []byte {
	if x != nil {
		return x.Passive
	}
	return nil
}

func (x *Transaction) GetSignatureData() []byte {
	if x != nil {
		return x.SignatureData
	}
	return nil
}

type ActiveBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionMerkleRoot []byte `protobuf:"bytes,1,opt,name=transaction_merkle_root,json=transactionMerkleRoot,proto3" json:"transaction_merkle_root,omitempty"`
	PassiveDataMerkleRoot []byte `protobuf:"bytes,2,opt,name=passive_data_merkle_root,json=passiveDataMerkleRoot,proto3" json:"passive_data_merkle_root,omitempty"`
	Signer                []byte `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *ActiveBlockData) Reset() {
	*x = ActiveBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveBlockData) ProtoMessage() {}

func (x *ActiveBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveBlockData.ProtoReflect.Descriptor instead.
func (*ActiveBlockData) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *ActiveBlockData) GetTransactionMerkleRoot() []byte {
	if x != nil {
		return x.TransactionMerkleRoot
	}
	return nil
}

func (x *ActiveBlockData) GetPassiveDataMerkleRoot() []byte {
	if x != nil {
		return x.PassiveDataMerkleRoot
	}
	return nil
}

func (x *ActiveBlockData) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

type PassiveBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PassiveBlockData) Reset() {
	*x = PassiveBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassiveBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassiveBlockData) ProtoMessage() {}

func (x *PassiveBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassiveBlockData.ProtoReflect.Descriptor instead.
func (*PassiveBlockData) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{10}
}

type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Previous  []byte `protobuf:"bytes,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Height    uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *BlockHeader) GetPrevious() []byte {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *BlockHeader) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Topological constraints:  Constraints for a new block b that builds on a given block a
//
// b.header.previous_block == a.block_id
// b.header.height         == a.header.height+1
// b.header.timestamp      >  a.header.timestamp
//
// Cryptographic constraints:  Internal constraints for block b.
//
// b.block_id                             == H(b.header, b.active_data)
// b.active_data.transaction_merkle_root  == Hm(b.transactions)
// b.active_data.passive_data_merkle_root == Hm(b.passive_data)
// b.active_data.signer_address           == H(recover(b.signature_data, b.block_id))
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header        *BlockHeader   `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Active        []byte         `protobuf:"bytes,3,opt,name=active,proto3" json:"active,omitempty"`
	Passive       []byte         `protobuf:"bytes,4,opt,name=passive,proto3" json:"passive,omitempty"`
	SignatureData []byte         `protobuf:"bytes,5,opt,name=signature_data,json=signatureData,proto3" json:"signature_data,omitempty"`
	Transactions  []*Transaction `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *Block) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetActive() []byte {
	if x != nil {
		return x.Active
	}
	return nil
}

func (x *Block) GetPassive() []byte {
	if x != nil {
		return x.Passive
	}
	return nil
}

func (x *Block) GetSignatureData() []byte {
	if x != nil {
		return x.SignatureData
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type BlockReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlockReceipt) Reset() {
	*x = BlockReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_protocol_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReceipt) ProtoMessage() {}

func (x *BlockReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_protocol_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReceipt.ProtoReflect.Descriptor instead.
func (*BlockReceipt) Descriptor() ([]byte, []int) {
	return file_koinos_protocol_protocol_proto_rawDescGZIP(), []int{13}
}

var File_koinos_protocol_protocol_proto protoreflect.FileDescriptor

var file_koinos_protocol_protocol_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x1a, 0x14, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x08, 0x74, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x07, 0x74, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x12, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x19,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x17,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5,
	0x18, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c,
	0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x54, 0x0a, 0x0f,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x08, 0x72, 0x63, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x07, 0x72, 0x63, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x70, 0x61, 0x73,
	0x73, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x15, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xef, 0x01, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_koinos_protocol_protocol_proto_rawDescOnce sync.Once
	file_koinos_protocol_protocol_proto_rawDescData = file_koinos_protocol_protocol_proto_rawDesc
)

func file_koinos_protocol_protocol_proto_rawDescGZIP() []byte {
	file_koinos_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_koinos_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_koinos_protocol_protocol_proto_rawDescData)
	})
	return file_koinos_protocol_protocol_proto_rawDescData
}

var file_koinos_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_koinos_protocol_protocol_proto_goTypes = []interface{}{
	(*ContractCallBundle)(nil),      // 0: koinos.protocol.contract_call_bundle
	(*SystemCallTarget)(nil),        // 1: koinos.protocol.system_call_target
	(*UploadContractOperation)(nil), // 2: koinos.protocol.upload_contract_operation
	(*CallContractOperation)(nil),   // 3: koinos.protocol.call_contract_operation
	(*SetSystemCallOperation)(nil),  // 4: koinos.protocol.set_system_call_operation
	(*Operation)(nil),               // 5: koinos.protocol.operation
	(*ActiveTransactionData)(nil),   // 6: koinos.protocol.active_transaction_data
	(*PassiveTransactionData)(nil),  // 7: koinos.protocol.passive_transaction_data
	(*Transaction)(nil),             // 8: koinos.protocol.transaction
	(*ActiveBlockData)(nil),         // 9: koinos.protocol.active_block_data
	(*PassiveBlockData)(nil),        // 10: koinos.protocol.passive_block_data
	(*BlockHeader)(nil),             // 11: koinos.protocol.block_header
	(*Block)(nil),                   // 12: koinos.protocol.block
	(*BlockReceipt)(nil),            // 13: koinos.protocol.block_receipt
}
var file_koinos_protocol_protocol_proto_depIdxs = []int32{
	0,  // 0: koinos.protocol.system_call_target.system_call_bundle:type_name -> koinos.protocol.contract_call_bundle
	1,  // 1: koinos.protocol.set_system_call_operation.target:type_name -> koinos.protocol.system_call_target
	2,  // 2: koinos.protocol.operation.upload_contract:type_name -> koinos.protocol.upload_contract_operation
	3,  // 3: koinos.protocol.operation.call_contract:type_name -> koinos.protocol.call_contract_operation
	4,  // 4: koinos.protocol.operation.set_system_call:type_name -> koinos.protocol.set_system_call_operation
	5,  // 5: koinos.protocol.active_transaction_data.operations:type_name -> koinos.protocol.operation
	11, // 6: koinos.protocol.block.header:type_name -> koinos.protocol.block_header
	8,  // 7: koinos.protocol.block.transactions:type_name -> koinos.protocol.transaction
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_koinos_protocol_protocol_proto_init() }
func file_koinos_protocol_protocol_proto_init() {
	if File_koinos_protocol_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_koinos_protocol_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCallBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCallTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadContractOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallContractOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSystemCallOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassiveTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassiveBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_protocol_protocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_koinos_protocol_protocol_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SystemCallTarget_ThunkId)(nil),
		(*SystemCallTarget_SystemCallBundle)(nil),
	}
	file_koinos_protocol_protocol_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Operation_UploadContract)(nil),
		(*Operation_CallContract)(nil),
		(*Operation_SetSystemCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koinos_protocol_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_koinos_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_koinos_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_koinos_protocol_protocol_proto_msgTypes,
	}.Build()
	File_koinos_protocol_protocol_proto = out.File
	file_koinos_protocol_protocol_proto_rawDesc = nil
	file_koinos_protocol_protocol_proto_goTypes = nil
	file_koinos_protocol_protocol_proto_depIdxs = nil
}
