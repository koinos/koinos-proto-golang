// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: koinos/protocol/system_call_ids.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemCallId int32

const (
	SystemCallId_reserved_id                     SystemCallId = 0
	SystemCallId_prints                          SystemCallId = 1
	SystemCallId_apply_block                     SystemCallId = 3
	SystemCallId_apply_transaction               SystemCallId = 4
	SystemCallId_apply_upload_contract_operation SystemCallId = 5
	SystemCallId_apply_call_contract_operation   SystemCallId = 6
	SystemCallId_apply_set_system_call_operation SystemCallId = 7
	SystemCallId_put_object                      SystemCallId = 8
	SystemCallId_get_object                      SystemCallId = 9
	SystemCallId_get_next_object                 SystemCallId = 10
	SystemCallId_get_prev_object                 SystemCallId = 11
	SystemCallId_call_contract                   SystemCallId = 12
	SystemCallId_get_entry_point                 SystemCallId = 13
	SystemCallId_get_contract_arguments_size     SystemCallId = 14
	SystemCallId_get_contract_arguments          SystemCallId = 15
	SystemCallId_set_contract_result             SystemCallId = 16
	SystemCallId_exit_contract                   SystemCallId = 17
	SystemCallId_get_head_info                   SystemCallId = 18
	SystemCallId_hash                            SystemCallId = 19
	SystemCallId_recover_public_key              SystemCallId = 20
	SystemCallId_process_block_signature         SystemCallId = 21
	SystemCallId_verify_merkle_root              SystemCallId = 22
	SystemCallId_get_transaction_payer           SystemCallId = 23
	SystemCallId_get_transaction_rc_limit        SystemCallId = 25
	SystemCallId_get_last_irreversible_block     SystemCallId = 26
	SystemCallId_get_caller                      SystemCallId = 27
	SystemCallId_require_authority               SystemCallId = 28
	SystemCallId_get_transaction_signature       SystemCallId = 29
	SystemCallId_get_contract_id                 SystemCallId = 30
	SystemCallId_get_account_nonce               SystemCallId = 31
	SystemCallId_get_account_rc                  SystemCallId = 32
	SystemCallId_consume_account_rc              SystemCallId = 33
	SystemCallId_get_resource_limits             SystemCallId = 34
	SystemCallId_consume_block_resources         SystemCallId = 35
	SystemCallId_event                           SystemCallId = 36
)

// Enum value maps for SystemCallId.
var (
	SystemCallId_name = map[int32]string{
		0:  "reserved_id",
		1:  "prints",
		3:  "apply_block",
		4:  "apply_transaction",
		5:  "apply_upload_contract_operation",
		6:  "apply_call_contract_operation",
		7:  "apply_set_system_call_operation",
		8:  "put_object",
		9:  "get_object",
		10: "get_next_object",
		11: "get_prev_object",
		12: "call_contract",
		13: "get_entry_point",
		14: "get_contract_arguments_size",
		15: "get_contract_arguments",
		16: "set_contract_result",
		17: "exit_contract",
		18: "get_head_info",
		19: "hash",
		20: "recover_public_key",
		21: "process_block_signature",
		22: "verify_merkle_root",
		23: "get_transaction_payer",
		25: "get_transaction_rc_limit",
		26: "get_last_irreversible_block",
		27: "get_caller",
		28: "require_authority",
		29: "get_transaction_signature",
		30: "get_contract_id",
		31: "get_account_nonce",
		32: "get_account_rc",
		33: "consume_account_rc",
		34: "get_resource_limits",
		35: "consume_block_resources",
		36: "event",
	}
	SystemCallId_value = map[string]int32{
		"reserved_id":                     0,
		"prints":                          1,
		"apply_block":                     3,
		"apply_transaction":               4,
		"apply_upload_contract_operation": 5,
		"apply_call_contract_operation":   6,
		"apply_set_system_call_operation": 7,
		"put_object":                      8,
		"get_object":                      9,
		"get_next_object":                 10,
		"get_prev_object":                 11,
		"call_contract":                   12,
		"get_entry_point":                 13,
		"get_contract_arguments_size":     14,
		"get_contract_arguments":          15,
		"set_contract_result":             16,
		"exit_contract":                   17,
		"get_head_info":                   18,
		"hash":                            19,
		"recover_public_key":              20,
		"process_block_signature":         21,
		"verify_merkle_root":              22,
		"get_transaction_payer":           23,
		"get_transaction_rc_limit":        25,
		"get_last_irreversible_block":     26,
		"get_caller":                      27,
		"require_authority":               28,
		"get_transaction_signature":       29,
		"get_contract_id":                 30,
		"get_account_nonce":               31,
		"get_account_rc":                  32,
		"consume_account_rc":              33,
		"get_resource_limits":             34,
		"consume_block_resources":         35,
		"event":                           36,
	}
)

func (x SystemCallId) Enum() *SystemCallId {
	p := new(SystemCallId)
	*p = x
	return p
}

func (x SystemCallId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemCallId) Descriptor() protoreflect.EnumDescriptor {
	return file_koinos_protocol_system_call_ids_proto_enumTypes[0].Descriptor()
}

func (SystemCallId) Type() protoreflect.EnumType {
	return &file_koinos_protocol_system_call_ids_proto_enumTypes[0]
}

func (x SystemCallId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemCallId.Descriptor instead.
func (SystemCallId) EnumDescriptor() ([]byte, []int) {
	return file_koinos_protocol_system_call_ids_proto_rawDescGZIP(), []int{0}
}

var File_koinos_protocol_system_call_ids_proto protoreflect.FileDescriptor

var file_koinos_protocol_system_call_ids_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2a, 0xc0, 0x06, 0x0a, 0x0e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04,
	0x12, 0x23, 0x0a, 0x1f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x23, 0x0a, 0x1f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x0e, 0x0a,
	0x0a, 0x70, 0x75, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x08, 0x12, 0x0e, 0x0a,
	0x0a, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x09, 0x12, 0x13, 0x0a,
	0x0f, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x65,
	0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x10, 0x0d, 0x12,
	0x1f, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x10, 0x0e,
	0x12, 0x1a, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13,
	0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0x12, 0x12, 0x08, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x10, 0x13, 0x12, 0x16, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x10, 0x14, 0x12, 0x1b, 0x0a,
	0x17, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x15, 0x12, 0x16, 0x0a, 0x12, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x10, 0x16, 0x12, 0x19, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x10, 0x17, 0x12, 0x1c, 0x0a,
	0x18, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x63, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x19, 0x12, 0x1f, 0x0a, 0x1b, 0x67,
	0x65, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x10, 0x1b, 0x12, 0x15, 0x0a, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x10, 0x1c, 0x12, 0x1d, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x10, 0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x10, 0x1e, 0x12, 0x15, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x10, 0x1f, 0x12, 0x12,
	0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x63,
	0x10, 0x20, 0x12, 0x16, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x63, 0x10, 0x21, 0x12, 0x17, 0x0a, 0x13, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x10, 0x22, 0x12, 0x1b, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x10, 0x23,
	0x12, 0x09, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x24, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_koinos_protocol_system_call_ids_proto_rawDescOnce sync.Once
	file_koinos_protocol_system_call_ids_proto_rawDescData = file_koinos_protocol_system_call_ids_proto_rawDesc
)

func file_koinos_protocol_system_call_ids_proto_rawDescGZIP() []byte {
	file_koinos_protocol_system_call_ids_proto_rawDescOnce.Do(func() {
		file_koinos_protocol_system_call_ids_proto_rawDescData = protoimpl.X.CompressGZIP(file_koinos_protocol_system_call_ids_proto_rawDescData)
	})
	return file_koinos_protocol_system_call_ids_proto_rawDescData
}

var file_koinos_protocol_system_call_ids_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_koinos_protocol_system_call_ids_proto_goTypes = []interface{}{
	(SystemCallId)(0), // 0: koinos.protocol.system_call_id
}
var file_koinos_protocol_system_call_ids_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_koinos_protocol_system_call_ids_proto_init() }
func file_koinos_protocol_system_call_ids_proto_init() {
	if File_koinos_protocol_system_call_ids_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koinos_protocol_system_call_ids_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_koinos_protocol_system_call_ids_proto_goTypes,
		DependencyIndexes: file_koinos_protocol_system_call_ids_proto_depIdxs,
		EnumInfos:         file_koinos_protocol_system_call_ids_proto_enumTypes,
	}.Build()
	File_koinos_protocol_system_call_ids_proto = out.File
	file_koinos_protocol_system_call_ids_proto_rawDesc = nil
	file_koinos_protocol_system_call_ids_proto_goTypes = nil
	file_koinos_protocol_system_call_ids_proto_depIdxs = nil
}
