// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: koinos/contracts/governance/governance.proto

package governance

import (
	_ "github.com/koinos/koinos-proto-golang/koinos"
	protocol "github.com/koinos/koinos-proto-golang/koinos/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalStatus int32

const (
	ProposalStatus_pending  ProposalStatus = 0
	ProposalStatus_active   ProposalStatus = 1
	ProposalStatus_approved ProposalStatus = 2
	ProposalStatus_expired  ProposalStatus = 3
	ProposalStatus_applied  ProposalStatus = 4
	ProposalStatus_failed   ProposalStatus = 5
	ProposalStatus_reverted ProposalStatus = 6
)

// Enum value maps for ProposalStatus.
var (
	ProposalStatus_name = map[int32]string{
		0: "pending",
		1: "active",
		2: "approved",
		3: "expired",
		4: "applied",
		5: "failed",
		6: "reverted",
	}
	ProposalStatus_value = map[string]int32{
		"pending":  0,
		"active":   1,
		"approved": 2,
		"expired":  3,
		"applied":  4,
		"failed":   5,
		"reverted": 6,
	}
)

func (x ProposalStatus) Enum() *ProposalStatus {
	p := new(ProposalStatus)
	*p = x
	return p
}

func (x ProposalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_koinos_contracts_governance_governance_proto_enumTypes[0].Descriptor()
}

func (ProposalStatus) Type() protoreflect.EnumType {
	return &file_koinos_contracts_governance_governance_proto_enumTypes[0]
}

func (x ProposalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalStatus.Descriptor instead.
func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{0}
}

type ProposalRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations          []*protocol.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	OperationMerkleRoot []byte                `protobuf:"bytes,2,opt,name=operation_merkle_root,json=operationMerkleRoot,proto3" json:"operation_merkle_root,omitempty"`
	VoteStartHeight     uint64                `protobuf:"varint,3,opt,name=vote_start_height,json=voteStartHeight,proto3" json:"vote_start_height,omitempty"`
	VoteTally           uint64                `protobuf:"varint,4,opt,name=vote_tally,json=voteTally,proto3" json:"vote_tally,omitempty"`
	VoteThreshold       uint64                `protobuf:"varint,5,opt,name=vote_threshold,json=voteThreshold,proto3" json:"vote_threshold,omitempty"`
	ShallAuthorize      bool                  `protobuf:"varint,6,opt,name=shall_authorize,json=shallAuthorize,proto3" json:"shall_authorize,omitempty"`
	UpdatesGovernance   bool                  `protobuf:"varint,7,opt,name=updates_governance,json=updatesGovernance,proto3" json:"updates_governance,omitempty"`
	Status              ProposalStatus        `protobuf:"varint,8,opt,name=status,proto3,enum=koinos.contracts.governance.ProposalStatus" json:"status,omitempty"`
	Fee                 uint64                `protobuf:"varint,9,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ProposalRecord) Reset() {
	*x = ProposalRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalRecord) ProtoMessage() {}

func (x *ProposalRecord) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalRecord.ProtoReflect.Descriptor instead.
func (*ProposalRecord) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalRecord) GetOperations() []*protocol.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ProposalRecord) GetOperationMerkleRoot() []byte {
	if x != nil {
		return x.OperationMerkleRoot
	}
	return nil
}

func (x *ProposalRecord) GetVoteStartHeight() uint64 {
	if x != nil {
		return x.VoteStartHeight
	}
	return 0
}

func (x *ProposalRecord) GetVoteTally() uint64 {
	if x != nil {
		return x.VoteTally
	}
	return 0
}

func (x *ProposalRecord) GetVoteThreshold() uint64 {
	if x != nil {
		return x.VoteThreshold
	}
	return 0
}

func (x *ProposalRecord) GetShallAuthorize() bool {
	if x != nil {
		return x.ShallAuthorize
	}
	return false
}

func (x *ProposalRecord) GetUpdatesGovernance() bool {
	if x != nil {
		return x.UpdatesGovernance
	}
	return false
}

func (x *ProposalRecord) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_pending
}

func (x *ProposalRecord) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type SubmitProposalArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations          []*protocol.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	OperationMerkleRoot []byte                `protobuf:"bytes,2,opt,name=operation_merkle_root,json=operationMerkleRoot,proto3" json:"operation_merkle_root,omitempty"`
	Fee                 uint64                `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *SubmitProposalArguments) Reset() {
	*x = SubmitProposalArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitProposalArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProposalArguments) ProtoMessage() {}

func (x *SubmitProposalArguments) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProposalArguments.ProtoReflect.Descriptor instead.
func (*SubmitProposalArguments) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitProposalArguments) GetOperations() []*protocol.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *SubmitProposalArguments) GetOperationMerkleRoot() []byte {
	if x != nil {
		return x.OperationMerkleRoot
	}
	return nil
}

func (x *SubmitProposalArguments) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type SubmitProposalResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitProposalResult) Reset() {
	*x = SubmitProposalResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitProposalResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitProposalResult) ProtoMessage() {}

func (x *SubmitProposalResult) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitProposalResult.ProtoReflect.Descriptor instead.
func (*SubmitProposalResult) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{2}
}

type GetProposalByIdArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId []byte `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
}

func (x *GetProposalByIdArguments) Reset() {
	*x = GetProposalByIdArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalByIdArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalByIdArguments) ProtoMessage() {}

func (x *GetProposalByIdArguments) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalByIdArguments.ProtoReflect.Descriptor instead.
func (*GetProposalByIdArguments) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{3}
}

func (x *GetProposalByIdArguments) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

type GetProposalByIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ProposalRecord `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetProposalByIdResult) Reset() {
	*x = GetProposalByIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalByIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalByIdResult) ProtoMessage() {}

func (x *GetProposalByIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalByIdResult.ProtoReflect.Descriptor instead.
func (*GetProposalByIdResult) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{4}
}

func (x *GetProposalByIdResult) GetValue() *ProposalRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetProposalsByStatusArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartProposal []byte         `protobuf:"bytes,1,opt,name=start_proposal,json=startProposal,proto3" json:"start_proposal,omitempty"`
	Limit         uint64         `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Status        ProposalStatus `protobuf:"varint,3,opt,name=status,proto3,enum=koinos.contracts.governance.ProposalStatus" json:"status,omitempty"`
}

func (x *GetProposalsByStatusArguments) Reset() {
	*x = GetProposalsByStatusArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalsByStatusArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalsByStatusArguments) ProtoMessage() {}

func (x *GetProposalsByStatusArguments) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalsByStatusArguments.ProtoReflect.Descriptor instead.
func (*GetProposalsByStatusArguments) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{5}
}

func (x *GetProposalsByStatusArguments) GetStartProposal() []byte {
	if x != nil {
		return x.StartProposal
	}
	return nil
}

func (x *GetProposalsByStatusArguments) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetProposalsByStatusArguments) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_pending
}

type GetProposalsByStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*ProposalRecord `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *GetProposalsByStatusResult) Reset() {
	*x = GetProposalsByStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalsByStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalsByStatusResult) ProtoMessage() {}

func (x *GetProposalsByStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalsByStatusResult.ProtoReflect.Descriptor instead.
func (*GetProposalsByStatusResult) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{6}
}

func (x *GetProposalsByStatusResult) GetValue() []*ProposalRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetProposalsArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartProposal []byte `protobuf:"bytes,1,opt,name=start_proposal,json=startProposal,proto3" json:"start_proposal,omitempty"`
	Limit         uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetProposalsArguments) Reset() {
	*x = GetProposalsArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalsArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalsArguments) ProtoMessage() {}

func (x *GetProposalsArguments) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalsArguments.ProtoReflect.Descriptor instead.
func (*GetProposalsArguments) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{7}
}

func (x *GetProposalsArguments) GetStartProposal() []byte {
	if x != nil {
		return x.StartProposal
	}
	return nil
}

func (x *GetProposalsArguments) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetProposalsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*ProposalRecord `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *GetProposalsResult) Reset() {
	*x = GetProposalsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProposalsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProposalsResult) ProtoMessage() {}

func (x *GetProposalsResult) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProposalsResult.ProtoReflect.Descriptor instead.
func (*GetProposalsResult) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{8}
}

func (x *GetProposalsResult) GetValue() []*ProposalRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

type ProposalSubmissionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal *ProposalRecord `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
}

func (x *ProposalSubmissionEvent) Reset() {
	*x = ProposalSubmissionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalSubmissionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalSubmissionEvent) ProtoMessage() {}

func (x *ProposalSubmissionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalSubmissionEvent.ProtoReflect.Descriptor instead.
func (*ProposalSubmissionEvent) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{9}
}

func (x *ProposalSubmissionEvent) GetProposal() *ProposalRecord {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type ProposalStatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status ProposalStatus `protobuf:"varint,2,opt,name=status,proto3,enum=koinos.contracts.governance.ProposalStatus" json:"status,omitempty"`
}

func (x *ProposalStatusEvent) Reset() {
	*x = ProposalStatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalStatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalStatusEvent) ProtoMessage() {}

func (x *ProposalStatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalStatusEvent.ProtoReflect.Descriptor instead.
func (*ProposalStatusEvent) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{10}
}

func (x *ProposalStatusEvent) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProposalStatusEvent) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_pending
}

type ProposalVoteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VoteTally     uint64 `protobuf:"varint,2,opt,name=vote_tally,json=voteTally,proto3" json:"vote_tally,omitempty"`
	VoteThreshold uint64 `protobuf:"varint,3,opt,name=vote_threshold,json=voteThreshold,proto3" json:"vote_threshold,omitempty"`
}

func (x *ProposalVoteEvent) Reset() {
	*x = ProposalVoteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koinos_contracts_governance_governance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalVoteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalVoteEvent) ProtoMessage() {}

func (x *ProposalVoteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_koinos_contracts_governance_governance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalVoteEvent.ProtoReflect.Descriptor instead.
func (*ProposalVoteEvent) Descriptor() ([]byte, []int) {
	return file_koinos_contracts_governance_governance_proto_rawDescGZIP(), []int{11}
}

func (x *ProposalVoteEvent) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProposalVoteEvent) GetVoteTally() uint64 {
	if x != nil {
		return x.VoteTally
	}
	return 0
}

func (x *ProposalVoteEvent) GetVoteThreshold() uint64 {
	if x != nil {
		return x.VoteThreshold
	}
	return 0
}

var File_koinos_contracts_governance_governance_proto protoreflect.FileDescriptor

var file_koinos_contracts_governance_governance_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b,
	0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x14, 0x6b, 0x6f, 0x69,
	0x6e, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa3, 0x03, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6c, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x6c, 0x6c,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x73, 0x68, 0x61, 0x6c, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x61, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x45, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x21, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c,
	0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5a, 0x0a, 0x14,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22,
	0x73, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6c, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2a, 0x6c, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x10, 0x06, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6b,
	0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f,
	0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_koinos_contracts_governance_governance_proto_rawDescOnce sync.Once
	file_koinos_contracts_governance_governance_proto_rawDescData = file_koinos_contracts_governance_governance_proto_rawDesc
)

func file_koinos_contracts_governance_governance_proto_rawDescGZIP() []byte {
	file_koinos_contracts_governance_governance_proto_rawDescOnce.Do(func() {
		file_koinos_contracts_governance_governance_proto_rawDescData = protoimpl.X.CompressGZIP(file_koinos_contracts_governance_governance_proto_rawDescData)
	})
	return file_koinos_contracts_governance_governance_proto_rawDescData
}

var file_koinos_contracts_governance_governance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_koinos_contracts_governance_governance_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_koinos_contracts_governance_governance_proto_goTypes = []interface{}{
	(ProposalStatus)(0),                   // 0: koinos.contracts.governance.proposal_status
	(*ProposalRecord)(nil),                // 1: koinos.contracts.governance.proposal_record
	(*SubmitProposalArguments)(nil),       // 2: koinos.contracts.governance.submit_proposal_arguments
	(*SubmitProposalResult)(nil),          // 3: koinos.contracts.governance.submit_proposal_result
	(*GetProposalByIdArguments)(nil),      // 4: koinos.contracts.governance.get_proposal_by_id_arguments
	(*GetProposalByIdResult)(nil),         // 5: koinos.contracts.governance.get_proposal_by_id_result
	(*GetProposalsByStatusArguments)(nil), // 6: koinos.contracts.governance.get_proposals_by_status_arguments
	(*GetProposalsByStatusResult)(nil),    // 7: koinos.contracts.governance.get_proposals_by_status_result
	(*GetProposalsArguments)(nil),         // 8: koinos.contracts.governance.get_proposals_arguments
	(*GetProposalsResult)(nil),            // 9: koinos.contracts.governance.get_proposals_result
	(*ProposalSubmissionEvent)(nil),       // 10: koinos.contracts.governance.proposal_submission_event
	(*ProposalStatusEvent)(nil),           // 11: koinos.contracts.governance.proposal_status_event
	(*ProposalVoteEvent)(nil),             // 12: koinos.contracts.governance.proposal_vote_event
	(*protocol.Operation)(nil),            // 13: koinos.protocol.operation
}
var file_koinos_contracts_governance_governance_proto_depIdxs = []int32{
	13, // 0: koinos.contracts.governance.proposal_record.operations:type_name -> koinos.protocol.operation
	0,  // 1: koinos.contracts.governance.proposal_record.status:type_name -> koinos.contracts.governance.proposal_status
	13, // 2: koinos.contracts.governance.submit_proposal_arguments.operations:type_name -> koinos.protocol.operation
	1,  // 3: koinos.contracts.governance.get_proposal_by_id_result.value:type_name -> koinos.contracts.governance.proposal_record
	0,  // 4: koinos.contracts.governance.get_proposals_by_status_arguments.status:type_name -> koinos.contracts.governance.proposal_status
	1,  // 5: koinos.contracts.governance.get_proposals_by_status_result.value:type_name -> koinos.contracts.governance.proposal_record
	1,  // 6: koinos.contracts.governance.get_proposals_result.value:type_name -> koinos.contracts.governance.proposal_record
	1,  // 7: koinos.contracts.governance.proposal_submission_event.proposal:type_name -> koinos.contracts.governance.proposal_record
	0,  // 8: koinos.contracts.governance.proposal_status_event.status:type_name -> koinos.contracts.governance.proposal_status
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_koinos_contracts_governance_governance_proto_init() }
func file_koinos_contracts_governance_governance_proto_init() {
	if File_koinos_contracts_governance_governance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_koinos_contracts_governance_governance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitProposalArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitProposalResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalByIdArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalByIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalsByStatusArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalsByStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalsArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProposalsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalSubmissionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalStatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koinos_contracts_governance_governance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalVoteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koinos_contracts_governance_governance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_koinos_contracts_governance_governance_proto_goTypes,
		DependencyIndexes: file_koinos_contracts_governance_governance_proto_depIdxs,
		EnumInfos:         file_koinos_contracts_governance_governance_proto_enumTypes,
		MessageInfos:      file_koinos_contracts_governance_governance_proto_msgTypes,
	}.Build()
	File_koinos_contracts_governance_governance_proto = out.File
	file_koinos_contracts_governance_governance_proto_rawDesc = nil
	file_koinos_contracts_governance_governance_proto_goTypes = nil
	file_koinos_contracts_governance_governance_proto_depIdxs = nil
}
